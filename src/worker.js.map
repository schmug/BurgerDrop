{"version":3,"file":"worker.js","sources":["game/State.js","game/utils/Easing.js","game/entities/Particle.js","game/entities/PowerUp.js","game/entities/Ingredient.js","game/entities/Order.js","game/systems/Audio.js","game/utils/Colors.js","game/systems/Renderer.js","game/systems/Input.js","game/systems/Physics.js","game/utils/Math.js","game/utils/ObjectPool.js","game/utils/PerformanceMonitor.js","game/utils/PerformanceUI.js","game/Game.js","game/templates/Template.js","game/worker-entry.js"],"sourcesContent":["/**\n * Game State Management\n * \n * Centralized state management system replacing global variables.\n * Provides event-driven architecture with validation and debugging capabilities.\n */\n\nexport class GameState {\n    constructor() {\n        // Core game state\n        this.core = {\n            running: false,\n            score: 0,\n            lives: 3,\n            combo: 1,\n            level: 1,\n            frameCount: 0,\n            lastTime: 0,\n            highScore: this.loadHighScore()\n        };\n\n        // Entity collections\n        this.entities = {\n            ingredients: [],\n            orders: [],\n            powerUps: [],\n            particles: []\n        };\n\n        // Power-up state\n        this.powerUps = {\n            speedBoost: { active: false, timeLeft: 0, multiplier: 0.5 },\n            timeFreeze: { active: false, timeLeft: 0 },\n            scoreMultiplier: { active: false, timeLeft: 0, multiplier: 2 }\n        };\n\n        // UI state\n        this.ui = {\n            colorTheme: { hue: 200, saturation: 50, lightness: 45 },\n            screenEffects: {\n                shake: { intensity: 0, duration: 0, x: 0, y: 0 },\n                flash: { intensity: 0, color: '#ffffff' }\n            }\n        };\n\n        // Audio state\n        this.audio = {\n            enabled: true,\n            settings: { master: 0.7, effects: 0.8, music: 0.6 }\n        };\n\n        // Game timing\n        this.timing = {\n            ingredientSpeed: 4,\n            spawnRate: 40,\n            lastPowerUpSpawn: 0,\n            lastOrderSpawn: 0\n        };\n\n        // Event listeners for state changes\n        this.listeners = new Map();\n\n        // Development mode features\n        this.debug = {\n            enabled: false,\n            history: [],\n            validation: true\n        };\n    }\n\n    /**\n     * Core game state mutations\n     */\n    updateScore(points) {\n        const oldScore = this.core.score;\n        this.core.score += Math.floor(points);\n        \n        // Update high score if needed\n        if (this.core.score > this.core.highScore) {\n            this.core.highScore = this.core.score;\n            this.saveHighScore();\n            this.emit('newHighScore', this.core.highScore);\n        }\n        \n        this.emit('scoreChanged', { old: oldScore, new: this.core.score });\n    }\n\n    updateCombo(value) {\n        const oldCombo = this.core.combo;\n        this.core.combo = Math.max(1, Math.min(value, 10)); // Cap at 10\n        this.emit('comboChanged', { old: oldCombo, new: this.core.combo });\n    }\n\n    incrementCombo() {\n        this.updateCombo(this.core.combo + 1);\n    }\n\n    resetCombo() {\n        this.updateCombo(1);\n    }\n\n    loseLife() {\n        const oldLives = this.core.lives;\n        this.core.lives = Math.max(0, this.core.lives - 1);\n        this.emit('livesChanged', { old: oldLives, new: this.core.lives });\n        \n        if (this.core.lives === 0) {\n            this.emit('gameOver');\n        }\n    }\n\n    updateLevel() {\n        const newLevel = Math.floor(this.core.score / 1000) + 1;\n        if (newLevel !== this.core.level) {\n            const oldLevel = this.core.level;\n            this.core.level = newLevel;\n            this.emit('levelChanged', { old: oldLevel, new: this.core.level });\n        }\n    }\n\n    updateFrameCount(deltaTime) {\n        this.core.frameCount++;\n        this.core.lastTime = performance.now();\n    }\n\n    /**\n     * Entity management\n     */\n    addEntity(type, entity) {\n        if (!this.entities[type]) {\n            throw new Error(`Unknown entity type: ${type}`);\n        }\n        \n        this.entities[type].push(entity);\n        this.emit('entityAdded', { type, entity });\n        \n        // Apply entity limits\n        this.enforceEntityLimits(type);\n    }\n\n    removeEntity(type, predicate) {\n        const initialLength = this.entities[type].length;\n        this.entities[type] = this.entities[type].filter(predicate);\n        const removed = initialLength - this.entities[type].length;\n        \n        if (removed > 0) {\n            this.emit('entitiesRemoved', { type, count: removed });\n        }\n        \n        return removed;\n    }\n\n    clearEntities(type) {\n        const count = this.entities[type].length;\n        this.entities[type] = [];\n        \n        if (count > 0) {\n            this.emit('entitiesCleared', { type, count });\n        }\n        \n        return count;\n    }\n\n    enforceEntityLimits(type) {\n        const limits = {\n            ingredients: 25,\n            particles: 20,\n            powerUps: 2,\n            orders: 3\n        };\n\n        const limit = limits[type];\n        if (limit && this.entities[type].length > limit) {\n            const excess = this.entities[type].length - limit;\n            this.entities[type].splice(0, excess); // Remove oldest\n            this.emit('entityLimitEnforced', { type, removed: excess });\n        }\n    }\n\n    getEntityCount(type) {\n        return this.entities[type]?.length || 0;\n    }\n\n    /**\n     * Power-up state management\n     */\n    activatePowerUp(type, duration) {\n        if (!this.powerUps[type]) {\n            throw new Error(`Unknown power-up type: ${type}`);\n        }\n\n        // Deactivate if already active (reset timer)\n        if (this.powerUps[type].active) {\n            this.deactivatePowerUp(type);\n        }\n\n        this.powerUps[type].active = true;\n        this.powerUps[type].timeLeft = duration;\n        \n        this.emit('powerUpActivated', { type, duration });\n    }\n\n    updatePowerUps(deltaTime) {\n        const deltaMs = deltaTime * 1000;\n        \n        Object.entries(this.powerUps).forEach(([type, powerUp]) => {\n            if (powerUp.active) {\n                powerUp.timeLeft -= deltaMs;\n                \n                if (powerUp.timeLeft <= 0) {\n                    this.deactivatePowerUp(type);\n                }\n            }\n        });\n    }\n\n    deactivatePowerUp(type) {\n        if (this.powerUps[type].active) {\n            this.powerUps[type].active = false;\n            this.powerUps[type].timeLeft = 0;\n            this.emit('powerUpDeactivated', { type });\n        }\n    }\n\n    isPowerUpActive(type) {\n        return this.powerUps[type]?.active || false;\n    }\n\n    getPowerUpTimeLeft(type) {\n        return this.powerUps[type]?.timeLeft || 0;\n    }\n\n    /**\n     * Game state control\n     */\n    startGame() {\n        this.core.running = true;\n        this.core.score = 0;\n        this.core.lives = 3;\n        this.core.combo = 1;\n        this.core.level = 1;\n        this.core.frameCount = 0;\n        \n        // Clear all entities\n        Object.keys(this.entities).forEach(type => {\n            this.clearEntities(type);\n        });\n        \n        // Reset power-ups\n        Object.keys(this.powerUps).forEach(type => {\n            this.deactivatePowerUp(type);\n        });\n        \n        // Reset timing\n        this.timing.lastPowerUpSpawn = 0;\n        this.timing.lastOrderSpawn = 0;\n        this.timing.ingredientSpeed = 4;\n        this.timing.spawnRate = 40;\n        \n        this.emit('gameStarted');\n    }\n\n    endGame() {\n        this.core.running = false;\n        \n        // Save high score\n        if (this.core.score > this.core.highScore) {\n            this.core.highScore = this.core.score;\n            this.saveHighScore();\n        }\n        \n        this.emit('gameEnded', { \n            score: this.core.score, \n            highScore: this.core.highScore \n        });\n    }\n\n    pauseGame() {\n        this.core.running = false;\n        this.emit('gamePaused');\n    }\n\n    resumeGame() {\n        this.core.running = true;\n        this.emit('gameResumed');\n    }\n\n    isRunning() {\n        return this.core.running;\n    }\n\n    /**\n     * High score persistence\n     */\n    loadHighScore() {\n        try {\n            return parseInt(localStorage.getItem('burgerDropHighScore') || '0');\n        } catch (e) {\n            console.warn('Could not load high score from localStorage');\n            return 0;\n        }\n    }\n\n    saveHighScore() {\n        try {\n            localStorage.setItem('burgerDropHighScore', this.core.highScore.toString());\n        } catch (e) {\n            console.warn('Could not save high score to localStorage');\n        }\n    }\n\n    /**\n     * Event system\n     */\n    on(event, callback) {\n        if (!this.listeners.has(event)) {\n            this.listeners.set(event, []);\n        }\n        this.listeners.get(event).push(callback);\n    }\n\n    off(event, callback) {\n        const callbacks = this.listeners.get(event);\n        if (callbacks) {\n            const index = callbacks.indexOf(callback);\n            if (index > -1) {\n                callbacks.splice(index, 1);\n            }\n        }\n    }\n\n    emit(event, data) {\n        // Add to debug history if enabled\n        if (this.debug.enabled) {\n            this.debug.history.push({\n                timestamp: Date.now(),\n                event,\n                data,\n                frameCount: this.core.frameCount\n            });\n            \n            // Keep only last 100 events\n            if (this.debug.history.length > 100) {\n                this.debug.history.shift();\n            }\n        }\n\n        // Emit to listeners\n        const callbacks = this.listeners.get(event);\n        if (callbacks) {\n            callbacks.forEach(callback => {\n                try {\n                    callback(data);\n                } catch (error) {\n                    console.error(`Error in event listener for ${event}:`, error);\n                }\n            });\n        }\n    }\n\n    /**\n     * State validation and debugging\n     */\n    validate() {\n        if (!this.debug.validation) return [];\n        \n        const errors = [];\n        \n        // Core state validation\n        if (this.core.score < 0) errors.push('Score cannot be negative');\n        if (this.core.lives < 0) errors.push('Lives cannot be negative');\n        if (this.core.combo < 1 || this.core.combo > 10) errors.push('Combo must be between 1-10');\n        if (this.core.level < 1) errors.push('Level must be positive');\n        \n        // Entity validation\n        Object.entries(this.entities).forEach(([type, entities]) => {\n            if (!Array.isArray(entities)) {\n                errors.push(`Entity collection ${type} must be an array`);\n            }\n        });\n        \n        // Power-up validation\n        Object.entries(this.powerUps).forEach(([type, powerUp]) => {\n            if (powerUp.active && powerUp.timeLeft <= 0) {\n                errors.push(`Active power-up ${type} has invalid timeLeft`);\n            }\n        });\n        \n        return errors;\n    }\n\n    getDebugInfo() {\n        return {\n            core: { ...this.core },\n            entityCounts: Object.fromEntries(\n                Object.entries(this.entities).map(([type, arr]) => [type, arr.length])\n            ),\n            activePowerUps: Object.fromEntries(\n                Object.entries(this.powerUps)\n                    .filter(([_, powerUp]) => powerUp.active)\n                    .map(([type, powerUp]) => [type, powerUp.timeLeft])\n            ),\n            ui: { ...this.ui },\n            timing: { ...this.timing },\n            listenerCounts: Object.fromEntries(\n                Array.from(this.listeners.entries())\n                    .map(([event, callbacks]) => [event, callbacks.length])\n            ),\n            errors: this.validate()\n        };\n    }\n\n    enableDebug() {\n        this.debug.enabled = true;\n        this.debug.validation = true;\n        console.log('GameState debugging enabled');\n    }\n\n    disableDebug() {\n        this.debug.enabled = false;\n        this.debug.validation = false;\n        this.debug.history = [];\n        console.log('GameState debugging disabled');\n    }\n\n    getDebugHistory() {\n        return [...this.debug.history];\n    }\n}\n\nexport default GameState;","/**\n * Easing Functions Collection\n * \n * Mathematical easing functions for smooth animations and transitions.\n * All functions take a parameter t (0 to 1) and return the eased value.\n */\n\nexport const easing = {\n    /**\n     * Linear interpolation - no easing\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    linear: t => t,\n\n    /**\n     * Quadratic ease-in - starts slow, accelerates\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeInQuad: t => t * t,\n\n    /**\n     * Quadratic ease-out - starts fast, decelerates\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeOutQuad: t => t * (2 - t),\n\n    /**\n     * Quadratic ease-in-out - slow start and end, fast middle\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeInOutQuad: t => t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t,\n\n    /**\n     * Cubic ease-in - starts very slow, accelerates strongly\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeInCubic: t => t * t * t,\n\n    /**\n     * Cubic ease-out - starts fast, decelerates strongly\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeOutCubic: t => (--t) * t * t + 1,\n\n    /**\n     * Cubic ease-in-out - very slow start and end, very fast middle\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeInOutCubic: t => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\n\n    /**\n     * Elastic ease-in - spring-like effect at the beginning\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeInElastic: t => {\n        if (t === 0 || t === 1) return t;\n        const p = 0.3;\n        const s = p / 4;\n        return -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n\n    /**\n     * Elastic ease-out - spring-like effect at the end\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeOutElastic: t => {\n        if (t === 0 || t === 1) return t;\n        const p = 0.3;\n        const s = p / 4;\n        return Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n\n    /**\n     * Bounce ease-out - bouncing ball effect at the end\n     * @param {number} t - Progress value (0 to 1)\n     * @returns {number} Eased value\n     */\n    easeOutBounce: t => {\n        if (t < 1 / 2.75) {\n            return 7.5625 * t * t;\n        } else if (t < 2 / 2.75) {\n            return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n        } else if (t < 2.5 / 2.75) {\n            return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n        } else {\n            return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n        }\n    }\n};\n\n// Define easeInBounce after easeOutBounce is defined\neasing.easeInBounce = t => 1 - easing.easeOutBounce(1 - t);\n\n// Export individual functions for convenience\nexport const {\n    linear,\n    easeInQuad,\n    easeOutQuad,\n    easeInOutQuad,\n    easeInCubic,\n    easeOutCubic,\n    easeInOutCubic,\n    easeInElastic,\n    easeOutElastic,\n    easeInBounce,\n    easeOutBounce\n} = easing;\n\n// Default export\nexport default easing;","/**\n * Particle Entity\n * \n * Represents visual effect particles with physics simulation.\n * Supports multiple types: default, celebration, star, circle, triangle.\n * Includes gravity, bouncing, rotation, and easing animations.\n */\n\nimport { easing } from '../utils/Easing.js';\n\nexport class Particle {\n    /**\n     * Create a new particle\n     * @param {number} x - Initial x position\n     * @param {number} y - Initial y position\n     * @param {string} color - Particle color\n     * @param {string} text - Optional text/emoji to display\n     * @param {string} type - Particle type ('default', 'celebration', 'star', 'circle', 'triangle')\n     * @param {object} options - Additional options\n     */\n    constructor(x = 0, y = 0, color = '#FFFFFF', text = '', type = 'default', options = {}) {\n        this.init(x, y, color, text, type, options);\n    }\n    \n    /**\n     * Initialize/reset particle properties (used for object pooling)\n     * @param {number} x - Initial x position\n     * @param {number} y - Initial y position\n     * @param {string} color - Particle color\n     * @param {string} text - Optional text/emoji to display\n     * @param {string} type - Particle type\n     * @param {object} options - Additional options\n     */\n    init(x = 0, y = 0, color = '#FFFFFF', text = '', type = 'default', options = {}) {\n        this.x = x;\n        this.y = y;\n        this.vx = options.vx || (Math.random() - 0.5) * 6;\n        this.vy = options.vy || (-Math.random() * 6 - 3);\n        this.color = color;\n        this.text = text;\n        this.life = 1;\n        this.decay = options.decay || 0.015;\n        this.type = type;\n        this.size = options.size || (Math.random() * 3 + 2);\n        this.rotation = Math.random() * Math.PI * 2;\n        this.rotationSpeed = (Math.random() - 0.5) * 0.2;\n        this.gravity = options.gravity || 0.15;\n        this.bounce = options.bounce || 0.7;\n        this.scale = 1;\n        this.startTime = 0; // Will be set when added to game\n        this.duration = options.duration || (60 + Math.random() * 60); // 1-2 seconds at 60fps\n        \n        // Store canvas dimensions for boundary checks\n        this.canvasWidth = options.canvasWidth || 800;\n        this.canvasHeight = options.canvasHeight || 600;\n        \n        // Pool-friendly properties\n        this.pooled = false;\n        \n        return this;\n    }\n\n    /**\n     * Update particle state\n     * @param {number} frameCount - Current frame count for timing\n     * @param {number} deltaTime - Time elapsed since last frame (optional)\n     */\n    update(frameCount, deltaTime = 1/60) {\n        // Set start time on first update\n        if (this.startTime === 0) {\n            this.startTime = frameCount;\n        }\n        \n        const elapsed = frameCount - this.startTime;\n        const progress = Math.min(elapsed / this.duration, 1);\n        \n        // Physics update\n        this.x += this.vx * deltaTime * 60; // Scale by target framerate\n        this.y += this.vy * deltaTime * 60;\n        this.vy += this.gravity;\n        this.rotation += this.rotationSpeed;\n        \n        // Use custom easing for life decay\n        this.life = 1 - easing.easeOutQuad(progress);\n        \n        // Bounce off ground with easing\n        if (this.y > this.canvasHeight - 10 && this.vy > 0) {\n            this.vy *= -this.bounce;\n            this.vx *= 0.8;\n        }\n        \n        // Enhanced scale animation for celebration particles\n        if (this.type === 'celebration') {\n            const pulseProgress = (frameCount * 0.1 + this.x) % (Math.PI * 2);\n            this.scale = 0.7 + easing.easeInOutCubic(Math.sin(pulseProgress) * 0.5 + 0.5) * 0.6;\n        }\n    }\n\n    /**\n     * Render the particle\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     */\n    draw(ctx) {\n        ctx.save();\n        ctx.globalAlpha = this.life;\n        ctx.translate(this.x, this.y);\n        ctx.rotate(this.rotation);\n        ctx.scale(this.scale, this.scale);\n        \n        if (this.text) {\n            ctx.font = `bold ${20 + this.size * 2}px Arial`; // Keep Arial for emoji compatibility\n            ctx.fillStyle = this.color;\n            ctx.textAlign = 'center';\n            ctx.textBaseline = 'middle';\n            \n            // Add glow effect for special particles\n            if (this.type === 'celebration') {\n                ctx.shadowColor = this.color;\n                ctx.shadowBlur = 10;\n            }\n            \n            ctx.fillText(this.text, 0, 0);\n        } else {\n            // Different shapes based on type\n            ctx.fillStyle = this.color;\n            \n            switch(this.type) {\n                case 'star':\n                    this.drawStar(ctx);\n                    break;\n                case 'circle':\n                    ctx.beginPath();\n                    ctx.arc(0, 0, this.size, 0, Math.PI * 2);\n                    ctx.fill();\n                    break;\n                case 'triangle':\n                    ctx.beginPath();\n                    ctx.moveTo(0, -this.size);\n                    ctx.lineTo(-this.size, this.size);\n                    ctx.lineTo(this.size, this.size);\n                    ctx.closePath();\n                    ctx.fill();\n                    break;\n                default:\n                    ctx.fillRect(-this.size/2, -this.size/2, this.size, this.size);\n            }\n        }\n        ctx.restore();\n    }\n    \n    /**\n     * Draw a star shape\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     */\n    drawStar(ctx) {\n        const spikes = 5;\n        const outerRadius = this.size;\n        const innerRadius = this.size * 0.4;\n        \n        ctx.beginPath();\n        for (let i = 0; i < spikes; i++) {\n            const angle = (i * Math.PI * 2) / spikes;\n            const x = Math.cos(angle) * outerRadius;\n            const y = Math.sin(angle) * outerRadius;\n            \n            if (i === 0) ctx.moveTo(x, y);\n            else ctx.lineTo(x, y);\n            \n            const innerAngle = angle + Math.PI / spikes;\n            const innerX = Math.cos(innerAngle) * innerRadius;\n            const innerY = Math.sin(innerAngle) * innerRadius;\n            ctx.lineTo(innerX, innerY);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Check if particle is still alive\n     * @returns {boolean} True if particle should continue existing\n     */\n    isAlive() {\n        return this.life > 0.01;\n    }\n    \n    /**\n     * Reset particle for object pooling\n     * @param {number} x - Initial x position\n     * @param {number} y - Initial y position\n     * @param {string} color - Particle color\n     * @param {string} text - Optional text/emoji to display\n     * @param {string} type - Particle type\n     * @param {object} options - Additional options\n     */\n    reset(x, y, color, text = '', type = 'default', options = {}) {\n        this.x = x;\n        this.y = y;\n        this.vx = options.vx || (Math.random() - 0.5) * 6;\n        this.vy = options.vy || (-Math.random() * 6 - 3);\n        this.color = color;\n        this.text = text;\n        this.life = 1;\n        this.decay = options.decay || 0.015;\n        this.type = type;\n        this.size = options.size || (Math.random() * 3 + 2);\n        this.rotation = Math.random() * Math.PI * 2;\n        this.rotationSpeed = (Math.random() - 0.5) * 0.2;\n        this.gravity = options.gravity || 0.15;\n        this.bounce = options.bounce || 0.7;\n        this.scale = 1;\n        this.startTime = 0;\n        this.duration = options.duration || (60 + Math.random() * 60);\n        \n        // Update canvas dimensions if provided\n        if (options.canvasWidth) this.canvasWidth = options.canvasWidth;\n        if (options.canvasHeight) this.canvasHeight = options.canvasHeight;\n    }\n\n    /**\n     * Get particle bounds for collision detection\n     * @returns {object} Bounds object {x, y, width, height}\n     */\n    getBounds() {\n        const radius = this.size * this.scale;\n        return {\n            x: this.x - radius,\n            y: this.y - radius,\n            width: radius * 2,\n            height: radius * 2\n        };\n    }\n\n    /**\n     * Update canvas dimensions for boundary calculations\n     * @param {number} width - Canvas width\n     * @param {number} height - Canvas height\n     */\n    updateCanvasDimensions(width, height) {\n        this.canvasWidth = width;\n        this.canvasHeight = height;\n    }\n\n    /**\n     * Create a celebration particle with predefined settings\n     * @param {number} x - X position\n     * @param {number} y - Y position\n     * @param {string} color - Particle color\n     * @param {string} emoji - Emoji to display\n     * @returns {Particle} New celebration particle\n     */\n    static createCelebration(x, y, color, emoji = '✨') {\n        return new Particle(x, y, color, emoji, 'celebration', {\n            vx: (Math.random() - 0.5) * 8,\n            vy: -Math.random() * 8 - 5,\n            size: Math.random() * 4 + 3,\n            duration: 90 + Math.random() * 60, // Longer duration for celebration\n            gravity: 0.1, // Lighter gravity for floating effect\n            bounce: 0.9\n        });\n    }\n\n    /**\n     * Create an explosion of particles\n     * @param {number} x - Explosion center X\n     * @param {number} y - Explosion center Y\n     * @param {string} color - Particle color\n     * @param {number} count - Number of particles to create\n     * @param {string} type - Particle type\n     * @returns {Array<Particle>} Array of explosion particles\n     */\n    static createExplosion(x, y, color, count = 10, type = 'star') {\n        const particles = [];\n        \n        for (let i = 0; i < count; i++) {\n            const angle = (i / count) * Math.PI * 2;\n            const speed = Math.random() * 6 + 3;\n            const vx = Math.cos(angle) * speed;\n            const vy = Math.sin(angle) * speed - 2; // Slight upward bias\n            \n            particles.push(new Particle(x, y, color, '', type, {\n                vx,\n                vy,\n                size: Math.random() * 3 + 1,\n                duration: 45 + Math.random() * 30,\n                gravity: 0.2\n            }));\n        }\n        \n        return particles;\n    }\n\n    /**\n     * Reset function for object pooling\n     * @param {Particle} particle - Particle to reset\n     * @param {number} x - Initial x position\n     * @param {number} y - Initial y position\n     * @param {string} color - Particle color\n     * @param {string} text - Optional text/emoji to display\n     * @param {string} type - Particle type\n     * @param {object} options - Additional options\n     */\n    static resetParticle(particle, x, y, color, text = '', type = 'default', options = {}) {\n        particle.init(x, y, color, text, type, options);\n    }\n    \n    /**\n     * Create particle factory function for object pooling\n     * @returns {Function} Factory function that creates new particles\n     */\n    static createFactory() {\n        return () => new Particle();\n    }\n    \n    /**\n     * Create floating text particle\n     * @param {number} x - X position\n     * @param {number} y - Y position\n     * @param {string} text - Text to display\n     * @param {string} color - Text color\n     * @returns {Particle} New text particle\n     */\n    static createFloatingText(x, y, text, color = '#FFD700') {\n        return new Particle(x, y, color, text, 'text', {\n            vx: (Math.random() - 0.5) * 2,\n            vy: -2 - Math.random() * 2,\n            size: 0, // Size is handled by font size\n            duration: 120, // 2 seconds\n            gravity: 0, // Text floats up\n            bounce: 0\n        });\n    }\n}\n\nexport default Particle;","/**\n * PowerUp Entity\n * \n * Represents collectible power-ups that provide temporary game advantages.\n * Supports multiple types: speedBoost (slow motion), timeFreeze, and scoreMultiplier.\n */\n\n/**\n * Power-up type configurations\n */\nexport const powerUpTypes = {\n    speedBoost: {\n        emoji: '🐌',\n        name: 'Slow Motion',\n        color: '#FFD700',\n        duration: 8000, // 8 seconds\n        description: 'Slows ingredient fall speed'\n    },\n    timeFreeze: {\n        emoji: '❄️',\n        name: 'Time Freeze',\n        color: '#87CEEB',\n        duration: 5000, // 5 seconds\n        description: 'Freezes order timers'\n    },\n    scoreMultiplier: {\n        emoji: '💎',\n        name: 'Score Boost',\n        color: '#FF69B4',\n        duration: 10000, // 10 seconds\n        description: 'Double score points'\n    }\n};\n\nexport class PowerUp {\n    /**\n     * Create a new power-up\n     * @param {string} type - Power-up type ('speedBoost', 'timeFreeze', 'scoreMultiplier')\n     * @param {object} options - Additional options\n     */\n    constructor(type, options = {}) {\n        this.type = type;\n        this.data = powerUpTypes[type];\n        \n        if (!this.data) {\n            throw new Error(`Unknown power-up type: ${type}`);\n        }\n        \n        this.x = options.x !== undefined ? options.x : Math.random() * (options.canvasWidth || 800 - 50);\n        this.y = options.y !== undefined ? options.y : -50;\n        this.speed = options.speed || 1.5; // Fixed speed for consistency\n        this.collected = false;\n        this.size = options.size || 40;\n        this.cachedFont = null; // Cache font for performance\n        \n        // Store canvas dimensions for boundary calculations\n        this.canvasWidth = options.canvasWidth || 800;\n        this.canvasHeight = options.canvasHeight || 600;\n        \n        // Animation properties\n        this.animationTime = 0;\n        this.pulseIntensity = options.pulseIntensity || 0.1;\n    }\n    \n    /**\n     * Update power-up state\n     * @param {number} deltaTime - Time elapsed since last frame\n     */\n    update(deltaTime = 1/60) {\n        this.y += this.speed * deltaTime * 60; // Scale by target framerate\n        this.animationTime += deltaTime;\n    }\n    \n    /**\n     * Render the power-up\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     */\n    draw(ctx) {\n        // Pre-calculate position\n        const centerX = this.x + this.size/2;\n        const centerY = this.y + this.size/2;\n        \n        // Add subtle pulsing animation\n        const pulse = 1 + Math.sin(this.animationTime * 4) * this.pulseIntensity;\n        const currentSize = this.size * pulse;\n        \n        ctx.save();\n        \n        // Draw glow effect\n        ctx.shadowColor = this.data.color;\n        ctx.shadowBlur = 10;\n        \n        // Main circle\n        ctx.fillStyle = this.data.color;\n        ctx.beginPath();\n        ctx.arc(centerX, centerY, currentSize/2, 0, Math.PI * 2);\n        ctx.fill();\n        \n        // Border\n        ctx.shadowBlur = 0;\n        ctx.strokeStyle = '#FFFFFF';\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        \n        // Emoji (cached font for performance)\n        if (!this.cachedFont) {\n            this.cachedFont = `${this.size * 0.6}px Arial`;\n        }\n        ctx.font = this.cachedFont;\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = '#FFFFFF';\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 2;\n        ctx.shadowOffsetX = 1;\n        ctx.shadowOffsetY = 1;\n        ctx.fillText(this.data.emoji, centerX, centerY);\n        \n        ctx.restore();\n    }\n    \n    /**\n     * Check if coordinates are within the power-up's clickable area\n     * @param {number} x - X coordinate\n     * @param {number} y - Y coordinate\n     * @returns {boolean} True if clicked\n     */\n    isClicked(x, y) {\n        const centerX = this.x + this.size/2;\n        const centerY = this.y + this.size/2;\n        const distance = Math.sqrt((x - centerX) ** 2 + (y - centerY) ** 2);\n        return distance <= this.size/2;\n    }\n    \n    /**\n     * Check if power-up is off screen (should be removed)\n     * @returns {boolean} True if off screen\n     */\n    isOffScreen() {\n        return this.y > this.canvasHeight + this.size;\n    }\n    \n    /**\n     * Get power-up bounds for collision detection\n     * @returns {object} Bounds object {x, y, width, height}\n     */\n    getBounds() {\n        return {\n            x: this.x,\n            y: this.y,\n            width: this.size,\n            height: this.size\n        };\n    }\n    \n    /**\n     * Get the center point of the power-up\n     * @returns {object} Center coordinates {x, y}\n     */\n    getCenter() {\n        return {\n            x: this.x + this.size/2,\n            y: this.y + this.size/2\n        };\n    }\n    \n    /**\n     * Mark power-up as collected\n     */\n    collect() {\n        this.collected = true;\n    }\n    \n    /**\n     * Check if power-up has been collected\n     * @returns {boolean} True if collected\n     */\n    isCollected() {\n        return this.collected;\n    }\n    \n    /**\n     * Get power-up duration in milliseconds\n     * @returns {number} Duration in milliseconds\n     */\n    getDuration() {\n        return this.data.duration;\n    }\n    \n    /**\n     * Get power-up description\n     * @returns {string} Human-readable description\n     */\n    getDescription() {\n        return this.data.description;\n    }\n    \n    /**\n     * Update canvas dimensions for boundary calculations\n     * @param {number} width - Canvas width\n     * @param {number} height - Canvas height\n     */\n    updateCanvasDimensions(width, height) {\n        this.canvasWidth = width;\n        this.canvasHeight = height;\n    }\n    \n    /**\n     * Create a random power-up\n     * @param {object} options - Options for power-up creation\n     * @returns {PowerUp} New random power-up\n     */\n    static createRandom(options = {}) {\n        const types = Object.keys(powerUpTypes);\n        const randomType = types[Math.floor(Math.random() * types.length)];\n        return new PowerUp(randomType, options);\n    }\n    \n    /**\n     * Get all available power-up types\n     * @returns {Array<string>} Array of power-up type names\n     */\n    static getAvailableTypes() {\n        return Object.keys(powerUpTypes);\n    }\n    \n    /**\n     * Get power-up type configuration\n     * @param {string} type - Power-up type\n     * @returns {object} Type configuration or null if not found\n     */\n    static getTypeConfig(type) {\n        return powerUpTypes[type] || null;\n    }\n    \n    /**\n     * Validate if a type is valid\n     * @param {string} type - Power-up type to validate\n     * @returns {boolean} True if valid type\n     */\n    static isValidType(type) {\n        return type in powerUpTypes;\n    }\n}\n\nexport default PowerUp;","/**\n * Ingredient Entity\n * \n * Represents falling burger ingredients with physics simulation, trail effects,\n * and visual variants. Includes integration with power-up system.\n */\n\nimport { easing } from '../utils/Easing.js';\n\n/**\n * Ingredient type configurations\n */\nexport const ingredientTypes = {\n    bun_top: { \n        emoji: '🍞', \n        variants: ['🍞', '🥖'], \n        name: 'Top Bun', \n        size: 40,\n        color: '#D2B48C'\n    },\n    bun_bottom: { \n        emoji: '🥖', \n        variants: ['🥖', '🍞'], \n        name: 'Bottom Bun', \n        size: 40,\n        color: '#DEB887'\n    },\n    patty: { \n        emoji: '🥩', \n        variants: ['🥩', '🍖'], \n        name: 'Patty', \n        size: 45,\n        color: '#8B4513'\n    },\n    cheese: { \n        emoji: '🧀', \n        variants: ['🧀', '🟨'], \n        name: 'Cheese', \n        size: 35,\n        color: '#FFD700'\n    },\n    lettuce: { \n        emoji: '🥬', \n        variants: ['🥬', '🍃'], \n        name: 'Lettuce', \n        size: 35,\n        color: '#90EE90'\n    },\n    tomato: { \n        emoji: '🍅', \n        variants: ['🍅', '🔴'], \n        name: 'Tomato', \n        size: 35,\n        color: '#FF6347'\n    },\n    pickle: { \n        emoji: '🥒', \n        variants: ['🥒', '🟢'], \n        name: 'Pickle', \n        size: 30,\n        color: '#9ACD32'\n    },\n    bacon: { \n        emoji: '🥓', \n        variants: ['🥓', '🔥'], \n        name: 'Bacon', \n        size: 35,\n        color: '#DC143C'\n    },\n    onion: { \n        emoji: '🧅', \n        variants: ['🧅', '⚪'], \n        name: 'Onion', \n        size: 30,\n        color: '#F5F5DC'\n    },\n    egg: { \n        emoji: '🍳', \n        variants: ['🍳', '🟡'], \n        name: 'Egg', \n        size: 40,\n        color: '#FFFFE0'\n    }\n};\n\nexport class Ingredient {\n    /**\n     * Create a new ingredient\n     * @param {string} type - Ingredient type key from ingredientTypes\n     * @param {object} options - Additional options\n     */\n    constructor(type = 'bun_top', options = {}) {\n        this.init(type, options);\n    }\n    \n    /**\n     * Initialize/reset ingredient properties (used for object pooling)\n     * @param {string} type - Ingredient type key from ingredientTypes\n     * @param {object} options - Additional options\n     */\n    init(type, options = {}) {\n        this.type = type;\n        this.data = ingredientTypes[type];\n        \n        if (!this.data) {\n            throw new Error(`Unknown ingredient type: ${type}`);\n        }\n        \n        // Position and movement\n        this.x = options.x !== undefined ? options.x : Math.random() * (options.canvasWidth || 800 - this.data.size);\n        this.y = options.y !== undefined ? options.y : -this.data.size;\n        \n        // Speed calculation with variation\n        const baseSpeed = options.baseSpeed || 4;\n        const speedVariation = Math.random() * 4 - 2; // ±2 variation\n        const speedMultiplier = Math.random() < 0.1 ? (Math.random() < 0.5 ? 0.4 : 2.2) : 1; // 10% chance of very slow/fast\n        this.speed = (baseSpeed + speedVariation) * speedMultiplier;\n        this.baseSpeed = this.speed;\n        \n        // Rotation\n        this.rotation = Math.random() * Math.PI * 2;\n        this.rotationSpeed = (Math.random() - 0.5) * 0.1;\n        \n        // State\n        this.collected = false;\n        this.startY = this.y;\n        this.fallProgress = 0;\n        this.sway = Math.random() * 2 - 1; // -1 to 1 for horizontal sway\n        \n        // Trail system\n        this.trail = [];\n        this.maxTrailLength = options.maxTrailLength || 8;\n        this.trailUpdateInterval = options.trailUpdateInterval || 3;\n        this.trailCounter = 0;\n        \n        // Animation timing\n        this.animationTime = 0;\n        \n        // Canvas dimensions for boundary checks\n        this.canvasWidth = options.canvasWidth || 800;\n        this.canvasHeight = options.canvasHeight || 600;\n    }\n\n    /**\n     * Update ingredient state\n     * @param {number} frameCount - Current frame count for timing\n     * @param {object} gameState - Game state for power-up checks\n     * @param {number} deltaTime - Time elapsed since last frame\n     */\n    update(frameCount, gameState, deltaTime = 1/60) {\n        this.animationTime += deltaTime;\n        \n        // Apply speed boost power-up if available\n        let speedMultiplier = 1;\n        if (gameState && gameState.isPowerUpActive && gameState.isPowerUpActive('speedBoost')) {\n            speedMultiplier = gameState.powerUps.speedBoost.multiplier;\n        }\n        this.speed = this.baseSpeed * speedMultiplier;\n        \n        // Smooth falling motion with easing\n        this.fallProgress += 0.02;\n        const fallEase = easing.easeInQuad(Math.min(this.fallProgress, 1));\n        this.y += this.speed * (0.5 + fallEase * 0.5) * deltaTime * 60;\n        \n        // Add subtle horizontal sway\n        const swayAmount = Math.sin(frameCount * 0.05 + this.sway * Math.PI) * 0.5;\n        this.x += swayAmount * deltaTime * 60;\n        \n        // Smooth rotation with easing\n        this.rotation += this.rotationSpeed * (1 + fallEase * 0.5);\n        \n        // Update trail\n        this.trailCounter++;\n        if (this.trailCounter >= this.trailUpdateInterval) {\n            this.trail.push({\n                x: this.x + this.data.size / 2,\n                y: this.y + this.data.size / 2,\n                alpha: 1,\n                size: this.data.size * 0.8\n            });\n            \n            if (this.trail.length > this.maxTrailLength) {\n                this.trail.shift();\n            }\n            \n            this.trailCounter = 0;\n        }\n        \n        // Update trail alpha with easing\n        this.trail.forEach((point, index) => {\n            const trailProgress = (index + 1) / this.trail.length;\n            point.alpha = easing.easeOutCubic(trailProgress) * 0.6;\n            point.size *= 0.98;\n        });\n    }\n\n    /**\n     * Render the ingredient\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {number} frameCount - Current frame count for animations\n     * @param {object} colorTheme - Color theme for effects\n     */\n    draw(ctx, frameCount, colorTheme) {\n        // Draw trail first (behind ingredient)\n        this.drawTrail(ctx, colorTheme);\n        \n        ctx.save();\n        ctx.translate(this.x + this.data.size / 2, this.y + this.data.size / 2);\n        ctx.rotate(this.rotation);\n        \n        // Add enhanced shadow to ingredients\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.4)';\n        ctx.shadowBlur = 6;\n        ctx.shadowOffsetX = 3;\n        ctx.shadowOffsetY = 3;\n        \n        // Use enhanced emoji with occasional variants\n        const useVariant = frameCount % 120 < 10; // Show variant for 10 frames every 2 seconds\n        const emojiToUse = useVariant && this.data.variants ? \n            this.data.variants[Math.floor(frameCount / 30) % this.data.variants.length] : \n            this.data.emoji;\n        \n        ctx.font = `${this.data.size}px Arial`; // Keep Arial for emoji compatibility\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        ctx.fillText(emojiToUse, 0, 0);\n        ctx.restore();\n    }\n    \n    /**\n     * Draw the trail effect behind the ingredient\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {object} colorTheme - Color theme for trail colors\n     */\n    drawTrail(ctx, colorTheme) {\n        if (this.trail.length < 2) return;\n        \n        ctx.save();\n        \n        // Create gradient trail effect\n        for (let i = 0; i < this.trail.length - 1; i++) {\n            const point = this.trail[i];\n            const nextPoint = this.trail[i + 1];\n            \n            // Draw line segment with gradient\n            const gradient = ctx.createLinearGradient(\n                point.x, point.y, nextPoint.x, nextPoint.y\n            );\n            gradient.addColorStop(0, `rgba(255, 255, 255, ${point.alpha * 0.3})`);\n            gradient.addColorStop(1, `rgba(255, 255, 255, ${nextPoint.alpha * 0.3})`);\n            \n            ctx.strokeStyle = gradient;\n            ctx.lineWidth = Math.max(point.size * 0.15, 1);\n            ctx.lineCap = 'round';\n            \n            ctx.beginPath();\n            ctx.moveTo(point.x, point.y);\n            ctx.lineTo(nextPoint.x, nextPoint.y);\n            ctx.stroke();\n        }\n        \n        // Draw trail points\n        this.trail.forEach(point => {\n            ctx.globalAlpha = point.alpha * 0.4;\n            \n            // Use accent color from theme or fallback\n            const accentColor = colorTheme?.accent || '#00FF88';\n            ctx.fillStyle = accentColor + '80'; // Add transparency\n            \n            ctx.beginPath();\n            ctx.arc(point.x, point.y, Math.max(point.size * 0.1, 2), 0, Math.PI * 2);\n            ctx.fill();\n        });\n        \n        ctx.restore();\n    }\n\n    /**\n     * Check if coordinates are within the ingredient's clickable area\n     * @param {number} x - X coordinate\n     * @param {number} y - Y coordinate\n     * @returns {boolean} True if clicked\n     */\n    isClicked(x, y) {\n        return x >= this.x && x <= this.x + this.data.size &&\n               y >= this.y && y <= this.y + this.data.size;\n    }\n    \n    /**\n     * Check if ingredient is off screen (should be removed)\n     * @returns {boolean} True if off screen\n     */\n    isOffScreen() {\n        return this.y > this.canvasHeight + this.data.size;\n    }\n    \n    /**\n     * Get ingredient bounds for collision detection\n     * @returns {object} Bounds object {x, y, width, height}\n     */\n    getBounds() {\n        return {\n            x: this.x,\n            y: this.y,\n            width: this.data.size,\n            height: this.data.size\n        };\n    }\n    \n    /**\n     * Get the center point of the ingredient\n     * @returns {object} Center coordinates {x, y}\n     */\n    getCenter() {\n        return {\n            x: this.x + this.data.size / 2,\n            y: this.y + this.data.size / 2\n        };\n    }\n    \n    /**\n     * Mark ingredient as collected\n     */\n    collect() {\n        this.collected = true;\n    }\n    \n    /**\n     * Check if ingredient has been collected\n     * @returns {boolean} True if collected\n     */\n    isCollected() {\n        return this.collected;\n    }\n    \n    /**\n     * Get ingredient name\n     * @returns {string} Human-readable ingredient name\n     */\n    getName() {\n        return this.data.name;\n    }\n    \n    /**\n     * Get ingredient color\n     * @returns {string} Ingredient color\n     */\n    getColor() {\n        return this.data.color;\n    }\n    \n    /**\n     * Update canvas dimensions for boundary calculations\n     * @param {number} width - Canvas width\n     * @param {number} height - Canvas height\n     */\n    updateCanvasDimensions(width, height) {\n        this.canvasWidth = width;\n        this.canvasHeight = height;\n    }\n    \n    /**\n     * Reset ingredient for object pooling\n     * @param {string} type - Ingredient type key from ingredientTypes\n     * @param {object} options - Additional options\n     */\n    reset(type, options = {}) {\n        this.type = type;\n        this.data = ingredientTypes[type];\n        \n        if (!this.data) {\n            throw new Error(`Unknown ingredient type: ${type}`);\n        }\n        \n        // Position and movement\n        this.x = options.x !== undefined ? options.x : Math.random() * ((options.canvasWidth || this.canvasWidth || 800) - this.data.size);\n        this.y = options.y !== undefined ? options.y : -this.data.size;\n        \n        // Speed calculation with variation\n        const baseSpeed = options.baseSpeed || 4;\n        const speedVariation = Math.random() * 4 - 2;\n        const speedMultiplier = Math.random() < 0.1 ? (Math.random() < 0.5 ? 0.4 : 2.2) : 1;\n        this.speed = (baseSpeed + speedVariation) * speedMultiplier;\n        this.baseSpeed = this.speed;\n        \n        // Rotation\n        this.rotation = Math.random() * Math.PI * 2;\n        this.rotationSpeed = (Math.random() - 0.5) * 0.1;\n        \n        // State\n        this.collected = false;\n        this.startY = this.y;\n        this.fallProgress = 0;\n        this.sway = Math.random() * 2 - 1;\n        \n        // Trail system\n        this.trail = [];\n        this.maxTrailLength = options.maxTrailLength || 8;\n        this.trailUpdateInterval = options.trailUpdateInterval || 3;\n        this.trailCounter = 0;\n        \n        // Animation timing\n        this.animationTime = 0;\n        \n        // Update canvas dimensions if provided\n        if (options.canvasWidth) this.canvasWidth = options.canvasWidth;\n        if (options.canvasHeight) this.canvasHeight = options.canvasHeight;\n    }\n    \n    /**\n     * Create a random ingredient\n     * @param {object} options - Options for ingredient creation\n     * @returns {Ingredient} New random ingredient\n     */\n    static createRandom(options = {}) {\n        const types = Object.keys(ingredientTypes);\n        const randomType = types[Math.floor(Math.random() * types.length)];\n        return new Ingredient(randomType, options);\n    }\n    \n    /**\n     * Get all available ingredient types\n     * @returns {Array<string>} Array of ingredient type names\n     */\n    static getAvailableTypes() {\n        return Object.keys(ingredientTypes);\n    }\n    \n    /**\n     * Get ingredient type configuration\n     * @param {string} type - Ingredient type\n     * @returns {object} Type configuration or null if not found\n     */\n    static getTypeConfig(type) {\n        return ingredientTypes[type] || null;\n    }\n    \n    /**\n     * Validate if a type is valid\n     * @param {string} type - Ingredient type to validate\n     * @returns {boolean} True if valid type\n     */\n    static isValidType(type) {\n        return type in ingredientTypes;\n    }\n}\n\nexport default Ingredient;","/**\n * Order Entity\n * \n * Represents customer orders with time limits and ingredient tracking.\n * Includes visual rendering with progress indication and timer management.\n */\n\nimport { ingredientTypes } from './Ingredient.js';\n\n/**\n * Order template configurations\n */\nexport const orderTemplates = [\n    { name: 'Classic Burger', ingredients: ['bun_bottom', 'patty', 'cheese', 'lettuce', 'tomato', 'bun_top'], time: 30 },\n    { name: 'Simple Burger', ingredients: ['bun_bottom', 'patty', 'bun_top'], time: 20 },\n    { name: 'Cheese Burger', ingredients: ['bun_bottom', 'patty', 'cheese', 'bun_top'], time: 25 },\n    { name: 'Veggie Burger', ingredients: ['bun_bottom', 'lettuce', 'tomato', 'onion', 'pickle', 'bun_top'], time: 30 },\n    { name: 'Bacon Burger', ingredients: ['bun_bottom', 'patty', 'bacon', 'cheese', 'bun_top'], time: 35 },\n    { name: 'Breakfast Burger', ingredients: ['bun_bottom', 'patty', 'egg', 'bacon', 'cheese', 'bun_top'], time: 40 }\n];\n\nexport class Order {\n    /**\n     * Create a new order\n     * @param {object} template - Order template with name, ingredients, and time\n     * @param {object} options - Additional options\n     */\n    constructor(template, options = {}) {\n        if (!template) {\n            throw new Error('Order template is required');\n        }\n        \n        this.template = template;\n        this.ingredients = [...template.ingredients];\n        this.currentIndex = 0;\n        this.timeLeft = template.time * 1000; // Convert to milliseconds\n        this.x = 0;\n        this.y = 0;\n        this.width = options.width || 120;\n        this.height = options.height || 180;\n        this.completed = false;\n        this.expired = false;\n        \n        // Animation properties\n        this.animationTime = 0;\n        this.pulsePhase = Math.random() * Math.PI * 2; // Random phase for pulsing\n        \n        // Rendering options\n        this.enableTextures = options.enableTextures !== false;\n        this.enableShadows = options.enableShadows !== false;\n        this.enablePulse = options.enablePulse !== false;\n    }\n\n    /**\n     * Update order state\n     * @param {number} deltaTime - Time elapsed since last frame in seconds\n     * @param {object} gameState - Game state for power-up checks\n     * @returns {boolean} True if order is still valid, false if expired\n     */\n    update(deltaTime, gameState) {\n        this.animationTime += deltaTime;\n        \n        // Apply time freeze power-up if available\n        let shouldDecrementTime = true;\n        if (gameState && gameState.isPowerUpActive && gameState.isPowerUpActive('timeFreeze')) {\n            shouldDecrementTime = false;\n        }\n        \n        if (shouldDecrementTime && !this.completed) {\n            this.timeLeft -= deltaTime * 1000; // Convert to milliseconds\n        }\n        \n        if (this.timeLeft <= 0 && !this.completed) {\n            this.expired = true;\n            return false; // Order expired\n        }\n        \n        return true;\n    }\n\n    /**\n     * Render the order\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {number} index - Order position index for layout\n     * @param {number} frameCount - Current frame count for animations\n     * @param {object} options - Additional rendering options\n     */\n    draw(ctx, index, frameCount, options = {}) {\n        const margin = options.margin || 10;\n        this.x = margin + index * (this.width + margin);\n        this.y = options.startY || 80;\n\n        const isExpiring = this.timeLeft < 10000; // Less than 10 seconds\n        \n        ctx.save();\n        \n        // Background with texture if available\n        if (this.enableTextures && options.textures?.paper) {\n            ctx.fillStyle = options.textures.paper;\n            ctx.fillRect(this.x, this.y, this.width, this.height);\n        }\n        \n        // Add gradient overlay\n        const gradient = ctx.createLinearGradient(this.x, this.y, this.x, this.y + this.height);\n        \n        if (isExpiring) {\n            gradient.addColorStop(0, 'rgba(255, 120, 120, 0.85)');\n            gradient.addColorStop(1, 'rgba(255, 80, 80, 0.8)');\n        } else {\n            gradient.addColorStop(0, 'rgba(255, 255, 255, 0.85)');\n            gradient.addColorStop(1, 'rgba(245, 245, 245, 0.8)');\n        }\n        \n        // Add shadow if enabled\n        if (this.enableShadows) {\n            ctx.shadowColor = 'rgba(0, 0, 0, 0.3)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 3;\n            ctx.shadowOffsetY = 4;\n        }\n        \n        ctx.fillStyle = gradient;\n        ctx.fillRect(this.x, this.y, this.width, this.height);\n        \n        // Reset shadow for border\n        if (this.enableShadows) {\n            ctx.shadowColor = 'transparent';\n        }\n        \n        // Border\n        ctx.strokeStyle = isExpiring ? '#CC3333' : '#333';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(this.x, this.y, this.width, this.height);\n        \n        ctx.restore();\n\n        // Order name with better typography\n        ctx.fillStyle = '#333';\n        ctx.font = '600 12px Nunito, Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(this.template.name, this.x + this.width / 2, this.y + 15);\n\n        // Timer with enhanced typography\n        const timeSeconds = Math.ceil(this.timeLeft / 1000);\n        ctx.fillStyle = this.timeLeft < 10000 ? '#FF0000' : '#333';\n        ctx.font = '700 14px Nunito, Arial';\n        ctx.fillText(`${timeSeconds}s`, this.x + this.width / 2, this.y + 30);\n\n        // Ingredients (from bottom to top)\n        this.drawIngredients(ctx, frameCount);\n    }\n    \n    /**\n     * Draw the ingredient list for the order\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {number} frameCount - Current frame count for animations\n     */\n    drawIngredients(ctx, frameCount) {\n        const startY = this.y + this.height - 25;\n        const spacing = 20;\n        \n        for (let i = 0; i < this.ingredients.length; i++) {\n            const ingredient = ingredientTypes[this.ingredients[i]];\n            if (!ingredient) continue;\n            \n            const yPos = startY - (i * spacing);\n            \n            ctx.save();\n            \n            if (i < this.currentIndex) {\n                ctx.globalAlpha = 0.3; // Completed ingredients\n            } else if (i === this.currentIndex) {\n                // Enhanced highlight for current ingredient\n                this.drawCurrentIngredientHighlight(ctx, yPos, frameCount);\n            }\n            \n            // Draw ingredient emoji\n            if (i === this.currentIndex) {\n                this.drawCurrentIngredient(ctx, ingredient, yPos);\n            } else {\n                this.drawIngredient(ctx, ingredient, yPos);\n            }\n            \n            ctx.restore();\n        }\n    }\n    \n    /**\n     * Draw highlight for the current ingredient\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {number} yPos - Y position for the ingredient\n     * @param {number} frameCount - Current frame count for animations\n     */\n    drawCurrentIngredientHighlight(ctx, yPos, frameCount) {\n        const highlightGradient = ctx.createLinearGradient(\n            this.x + 5, yPos - 15, \n            this.x + this.width - 5, yPos + 10\n        );\n        highlightGradient.addColorStop(0, 'rgba(255, 255, 255, 0.8)');\n        highlightGradient.addColorStop(0.5, 'rgba(255, 215, 0, 0.9)');\n        highlightGradient.addColorStop(1, 'rgba(255, 165, 0, 0.7)');\n        \n        ctx.fillStyle = highlightGradient;\n        ctx.fillRect(this.x + 3, yPos - 17, this.width - 6, 29);\n        \n        // Add border for better visibility\n        ctx.strokeStyle = '#FF8C00';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(this.x + 3, yPos - 17, this.width - 6, 29);\n        \n        // Add pulsing effect if enabled\n        if (this.enablePulse) {\n            const pulseAlpha = 0.3 + Math.sin(frameCount * 0.15 + this.pulsePhase) * 0.2;\n            ctx.fillStyle = `rgba(255, 215, 0, ${pulseAlpha})`;\n            ctx.fillRect(this.x + 1, yPos - 19, this.width - 2, 33);\n        }\n    }\n    \n    /**\n     * Draw the current (highlighted) ingredient\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {object} ingredient - Ingredient data\n     * @param {number} yPos - Y position for the ingredient\n     */\n    drawCurrentIngredient(ctx, ingredient, yPos) {\n        ctx.font = '20px Arial'; // Keep Arial for emoji compatibility\n        ctx.textAlign = 'center';\n        \n        // Enhanced glow and contrast for current ingredient\n        ctx.shadowColor = '#FF4500';\n        ctx.shadowBlur = 12;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n        \n        // Add white outline for better contrast\n        ctx.strokeStyle = '#FFFFFF';\n        ctx.lineWidth = 3;\n        ctx.strokeText(ingredient.emoji, this.x + this.width / 2, yPos);\n        \n        // Scale up the current ingredient slightly\n        ctx.save();\n        ctx.translate(this.x + this.width / 2, yPos);\n        ctx.scale(1.2, 1.2);\n        ctx.fillText(ingredient.emoji, 0, 0);\n        ctx.restore();\n        \n        // Reset shadow\n        ctx.shadowColor = 'transparent';\n        ctx.shadowBlur = 0;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 0;\n    }\n    \n    /**\n     * Draw a regular ingredient\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\n     * @param {object} ingredient - Ingredient data\n     * @param {number} yPos - Y position for the ingredient\n     */\n    drawIngredient(ctx, ingredient, yPos) {\n        ctx.font = '20px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText(ingredient.emoji, this.x + this.width / 2, yPos);\n    }\n\n    /**\n     * Check if an ingredient matches the current expected ingredient\n     * @param {string} type - Ingredient type to check\n     * @returns {string} 'correct', 'completed', or 'wrong'\n     */\n    checkIngredient(type) {\n        if (this.completed || this.expired) {\n            return 'wrong';\n        }\n        \n        if (this.currentIndex < this.ingredients.length && \n            this.ingredients[this.currentIndex] === type) {\n            this.currentIndex++;\n            \n            if (this.currentIndex >= this.ingredients.length) {\n                this.completed = true;\n                return 'completed';\n            }\n            \n            return 'correct';\n        }\n        \n        return 'wrong';\n    }\n    \n    /**\n     * Get the current expected ingredient type\n     * @returns {string|null} Current ingredient type or null if order is complete\n     */\n    getCurrentIngredient() {\n        if (this.currentIndex >= this.ingredients.length) {\n            return null;\n        }\n        return this.ingredients[this.currentIndex];\n    }\n    \n    /**\n     * Get order completion progress\n     * @returns {number} Progress as a value between 0 and 1\n     */\n    getProgress() {\n        return this.currentIndex / this.ingredients.length;\n    }\n    \n    /**\n     * Get remaining time in seconds\n     * @returns {number} Time remaining in seconds\n     */\n    getTimeRemaining() {\n        return Math.max(0, this.timeLeft / 1000);\n    }\n    \n    /**\n     * Check if order is completed\n     * @returns {boolean} True if completed\n     */\n    isCompleted() {\n        return this.completed;\n    }\n    \n    /**\n     * Check if order has expired\n     * @returns {boolean} True if expired\n     */\n    isExpired() {\n        return this.expired;\n    }\n    \n    /**\n     * Check if order is expiring soon (less than 10 seconds)\n     * @returns {boolean} True if expiring soon\n     */\n    isExpiringSoon() {\n        return this.timeLeft < 10000;\n    }\n    \n    /**\n     * Get order bounds for UI layout\n     * @returns {object} Bounds object {x, y, width, height}\n     */\n    getBounds() {\n        return {\n            x: this.x,\n            y: this.y,\n            width: this.width,\n            height: this.height\n        };\n    }\n    \n    /**\n     * Reset order to initial state\n     */\n    reset() {\n        this.currentIndex = 0;\n        this.timeLeft = this.template.time * 1000;\n        this.completed = false;\n        this.expired = false;\n        this.animationTime = 0;\n    }\n    \n    /**\n     * Create a random order from available templates\n     * @param {object} options - Options for order creation\n     * @returns {Order} New random order\n     */\n    static createRandom(options = {}) {\n        const template = orderTemplates[Math.floor(Math.random() * orderTemplates.length)];\n        return new Order(template, options);\n    }\n    \n    /**\n     * Get all available order templates\n     * @returns {Array<object>} Array of order templates\n     */\n    static getAvailableTemplates() {\n        return [...orderTemplates];\n    }\n    \n    /**\n     * Get a specific order template by name\n     * @param {string} name - Template name\n     * @returns {object|null} Template or null if not found\n     */\n    static getTemplateByName(name) {\n        return orderTemplates.find(template => template.name === name) || null;\n    }\n    \n    /**\n     * Validate order template\n     * @param {object} template - Template to validate\n     * @returns {boolean} True if valid template\n     */\n    static isValidTemplate(template) {\n        return !!(template && \n               typeof template.name === 'string' &&\n               Array.isArray(template.ingredients) &&\n               template.ingredients.length > 0 &&\n               typeof template.time === 'number' &&\n               template.time > 0);\n    }\n}\n\nexport default Order;","/**\n * Audio System\n * \n * Complete Web Audio API-based audio system with procedural sound generation,\n * background music, volume controls, and audio ducking.\n */\n\n/**\n * Sound effect definitions\n */\nexport const soundEffects = {\n    ingredientCorrect: {\n        frequency: 880,\n        type: 'sine',\n        duration: 0.15,\n        volume: 0.6\n    },\n    ingredientWrong: {\n        frequency: 220,\n        type: 'sawtooth',\n        duration: 0.2,\n        volume: 0.5\n    },\n    orderComplete: {\n        frequencies: [523, 659, 784, 1047], // C, E, G, High C\n        type: 'sine',\n        duration: 0.2,\n        volume: 0.8\n    },\n    orderExpired: {\n        frequency: 165,\n        type: 'square',\n        duration: 0.3,\n        volume: 0.7\n    },\n    powerUpCollect: {\n        frequency: 698,\n        type: 'triangle',\n        duration: 0.25,\n        volume: 0.7\n    },\n    doublePointsActivate: {\n        frequency: 1397, // F6\n        type: 'sine',\n        duration: 0.3,\n        volume: 0.8,\n        duck: true\n    },\n    slowTimeActivate: {\n        frequency: 440, // A4\n        type: 'triangle',\n        duration: 0.4,\n        volume: 0.8,\n        duck: true\n    },\n    comboMultiplierActivate: {\n        frequency: 587, // D5\n        type: 'square',\n        duration: 0.35,\n        volume: 0.7,\n        duck: true\n    },\n    comboIncrease: {\n        frequency: 659, // E5\n        type: 'sine',\n        duration: 0.1,\n        volume: 0.5\n    },\n    buttonClick: {\n        frequency: 1000,\n        type: 'sine',\n        duration: 0.05,\n        volume: 0.3\n    },\n    gameOver: {\n        frequencies: [330, 311, 294, 277], // E, Eb, D, Db\n        type: 'sawtooth',\n        duration: 0.4,\n        volume: 0.8\n    }\n};\n\n/**\n * Music note definitions\n */\nexport const musicNotes = {\n    melody: [523, 587, 659, 784, 880], // C5, D5, E5, G5, A5 (pentatonic)\n    bass: [131, 147, 165, 196, 220]    // C3, D3, E3, G3, A3\n};\n\nexport class AudioSystem {\n    constructor(options = {}) {\n        // Audio context and processing chain\n        this.audioContext = null;\n        this.audioProcessingChain = null;\n        this.enabled = true;\n        \n        // Audio settings\n        this.settings = {\n            master: options.master || 0.3,\n            effects: options.effects || 1.0,\n            music: options.music || 0.5,\n            preset: options.preset || 'normal'\n        };\n        \n        // Background music state\n        this.backgroundMusic = {\n            playing: false,\n            oscillators: [],\n            gainNodes: [],\n            melodyInterval: null,\n            cleanupInterval: null\n        };\n        \n        // Audio ducking\n        this.musicGainNode = null;\n        this.isDucking = false;\n        \n        // Event listeners\n        this.eventListeners = new Map();\n        \n        // Initialize audio system\n        this.init();\n    }\n    \n    /**\n     * Initialize the audio system\n     */\n    init() {\n        try {\n            this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\n            this.setupAudioProcessingChain();\n            this.setupUserInteractionHandlers();\n        } catch (e) {\n            console.warn('Web Audio API not supported');\n            this.enabled = false;\n        }\n    }\n    \n    /**\n     * Set up audio processing chain with compressor and limiter\n     */\n    setupAudioProcessingChain() {\n        if (!this.audioContext) return;\n        \n        // Create compressor\n        const compressor = this.audioContext.createDynamicsCompressor();\n        compressor.threshold.setValueAtTime(-20, this.audioContext.currentTime);\n        compressor.knee.setValueAtTime(10, this.audioContext.currentTime);\n        compressor.ratio.setValueAtTime(6, this.audioContext.currentTime);\n        compressor.attack.setValueAtTime(0.003, this.audioContext.currentTime);\n        compressor.release.setValueAtTime(0.1, this.audioContext.currentTime);\n        \n        // Create limiter\n        const limiter = this.audioContext.createDynamicsCompressor();\n        limiter.threshold.setValueAtTime(-6, this.audioContext.currentTime);\n        limiter.knee.setValueAtTime(0, this.audioContext.currentTime);\n        limiter.ratio.setValueAtTime(20, this.audioContext.currentTime);\n        limiter.attack.setValueAtTime(0.001, this.audioContext.currentTime);\n        limiter.release.setValueAtTime(0.01, this.audioContext.currentTime);\n        \n        // Chain: compressor -> limiter -> destination\n        compressor.connect(limiter);\n        limiter.connect(this.audioContext.destination);\n        \n        this.audioProcessingChain = compressor;\n    }\n    \n    /**\n     * Set up user interaction handlers for audio context resume\n     */\n    setupUserInteractionHandlers() {\n        const resumeAudio = () => {\n            if (this.audioContext && this.audioContext.state === 'suspended') {\n                this.audioContext.resume();\n            }\n        };\n        \n        document.addEventListener('click', resumeAudio, { once: true });\n        document.addEventListener('touchstart', resumeAudio, { once: true });\n    }\n    \n    /**\n     * Create an oscillator with the audio processing chain\n     */\n    createOscillator(frequency, type = 'sine', duration = 0.1, volumeMultiplier = 1) {\n        if (!this.audioContext || !this.enabled) return null;\n        \n        const oscillator = this.audioContext.createOscillator();\n        const gainNode = this.audioContext.createGain();\n        \n        // Add low-pass filter to smooth harsh frequencies\n        const filter = this.audioContext.createBiquadFilter();\n        filter.type = 'lowpass';\n        filter.frequency.setValueAtTime(8000, this.audioContext.currentTime);\n        filter.Q.setValueAtTime(0.7, this.audioContext.currentTime);\n        \n        // Connect audio chain\n        oscillator.connect(gainNode);\n        gainNode.connect(filter);\n        \n        if (this.audioProcessingChain) {\n            filter.connect(this.audioProcessingChain);\n        } else {\n            filter.connect(this.audioContext.destination);\n        }\n        \n        // Configure oscillator\n        oscillator.type = type;\n        oscillator.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\n        \n        // Calculate final volume\n        const finalVolume = this.settings.master * this.settings.effects * volumeMultiplier;\n        \n        // Smooth volume envelope\n        gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n        gainNode.gain.linearRampToValueAtTime(finalVolume, this.audioContext.currentTime + 0.01);\n        gainNode.gain.exponentialRampToValueAtTime(0.001, this.audioContext.currentTime + duration);\n        \n        return { oscillator, gainNode, filter };\n    }\n    \n    /**\n     * Play a sound effect\n     */\n    playSound(soundConfig) {\n        if (!this.audioContext || !this.enabled || this.settings.effects === 0) return;\n        \n        const { frequency, type = 'sine', duration = 0.1, volume = 1, duck = false } = soundConfig;\n        const result = this.createOscillator(frequency, type, duration, volume);\n        \n        if (result) {\n            const { oscillator } = result;\n            oscillator.start();\n            oscillator.stop(this.audioContext.currentTime + duration);\n            \n            // Clean up after sound finishes\n            oscillator.addEventListener('ended', () => {\n                oscillator.disconnect();\n            });\n            \n            // Handle audio ducking\n            if (duck) {\n                this.duckBackgroundMusic();\n                setTimeout(() => this.restoreBackgroundMusic(), duration * 1000);\n            }\n        }\n    }\n    \n    /**\n     * Play a sequence of sounds\n     */\n    playSequence(frequencies, type = 'sine', duration = 0.1, volume = 1) {\n        if (!this.audioContext || !this.enabled || this.settings.effects === 0) return;\n        \n        frequencies.forEach((freq, index) => {\n            setTimeout(() => {\n                this.playSound({ frequency: freq, type, duration: duration * 0.8, volume });\n            }, index * duration * 1000 * 0.9);\n        });\n    }\n    \n    /**\n     * Play specific game sound effects\n     */\n    playIngredientCorrect() {\n        this.playSound(soundEffects.ingredientCorrect);\n    }\n    \n    playIngredientWrong() {\n        this.playSound(soundEffects.ingredientWrong);\n    }\n    \n    playOrderComplete() {\n        this.playSequence(\n            soundEffects.orderComplete.frequencies,\n            soundEffects.orderComplete.type,\n            soundEffects.orderComplete.duration,\n            soundEffects.orderComplete.volume\n        );\n    }\n    \n    playOrderExpired() {\n        this.playSound(soundEffects.orderExpired);\n    }\n    \n    playPowerUpCollect() {\n        this.playSound(soundEffects.powerUpCollect);\n    }\n    \n    playPowerUpActivate(type) {\n        const soundKey = type + 'Activate';\n        const sound = soundEffects[soundKey];\n        if (sound) {\n            this.duckBackgroundMusic();\n            this.playSound(sound);\n            setTimeout(() => this.restoreBackgroundMusic(), 300);\n        }\n    }\n    \n    playComboIncrease() {\n        this.playSound(soundEffects.comboIncrease);\n    }\n    \n    playButtonClick() {\n        this.playSound(soundEffects.buttonClick);\n    }\n    \n    playGameOver() {\n        if (!this.audioContext || !this.enabled || this.settings.effects === 0) return;\n        \n        soundEffects.gameOver.frequencies.forEach((freq, index) => {\n            setTimeout(() => {\n                this.playSound({\n                    frequency: freq,\n                    type: soundEffects.gameOver.type,\n                    duration: soundEffects.gameOver.duration * 0.7,\n                    volume: soundEffects.gameOver.volume\n                });\n            }, index * 150);\n        });\n    }\n    \n    /**\n     * Alias methods for backward compatibility\n     */\n    playCollect() {\n        this.playIngredientCorrect();\n    }\n    \n    playError() {\n        this.playIngredientWrong();\n    }\n    \n    playNewOrder() {\n        this.playButtonClick();\n    }\n    \n    /**\n     * Start background music\n     */\n    startBackgroundMusic() {\n        if (!this.audioContext || !this.enabled || this.backgroundMusic.playing || this.settings.music === 0) {\n            return;\n        }\n        \n        // Create master gain node for music\n        if (!this.musicGainNode) {\n            this.musicGainNode = this.audioContext.createGain();\n            \n            if (this.audioProcessingChain) {\n                this.musicGainNode.connect(this.audioProcessingChain);\n            } else {\n                this.musicGainNode.connect(this.audioContext.destination);\n            }\n            \n            this.musicGainNode.gain.setValueAtTime(\n                this.settings.master * this.settings.music,\n                this.audioContext.currentTime\n            );\n        }\n        \n        this.backgroundMusic.playing = true;\n        \n        // Start melody interval\n        this.backgroundMusic.melodyInterval = setInterval(() => {\n            if (this.backgroundMusic.playing && this.settings.music > 0) {\n                this.playMelodyNote();\n            } else {\n                clearInterval(this.backgroundMusic.melodyInterval);\n            }\n        }, 3000 + Math.random() * 2000);\n        \n        // Start cleanup interval\n        this.backgroundMusic.cleanupInterval = setInterval(() => {\n            this.cleanupOscillators();\n        }, 5000);\n    }\n    \n    /**\n     * Stop background music\n     */\n    stopBackgroundMusic() {\n        this.backgroundMusic.playing = false;\n        \n        // Clear intervals\n        if (this.backgroundMusic.melodyInterval) {\n            clearInterval(this.backgroundMusic.melodyInterval);\n            this.backgroundMusic.melodyInterval = null;\n        }\n        if (this.backgroundMusic.cleanupInterval) {\n            clearInterval(this.backgroundMusic.cleanupInterval);\n            this.backgroundMusic.cleanupInterval = null;\n        }\n        \n        // Stop all oscillators\n        this.backgroundMusic.oscillators.forEach(osc => {\n            try {\n                osc.stop();\n                osc.disconnect();\n            } catch (e) {\n                // Oscillator might already be stopped\n            }\n        });\n        \n        this.backgroundMusic.oscillators = [];\n        this.backgroundMusic.gainNodes = [];\n    }\n    \n    /**\n     * Play a single melody note\n     */\n    playMelodyNote() {\n        if (!this.backgroundMusic.playing || !this.musicGainNode || this.settings.music === 0) {\n            return;\n        }\n        \n        const noteIndex = Math.floor(Math.random() * musicNotes.melody.length);\n        const frequency = musicNotes.melody[noteIndex];\n        const musicVolume = this.settings.master * this.settings.music * 0.1;\n        \n        const melodyOsc = this.audioContext.createOscillator();\n        const melodyGain = this.audioContext.createGain();\n        \n        melodyOsc.connect(melodyGain);\n        melodyGain.connect(this.musicGainNode);\n        \n        melodyOsc.type = 'sine';\n        melodyOsc.frequency.setValueAtTime(frequency, this.audioContext.currentTime);\n        \n        melodyGain.gain.setValueAtTime(0, this.audioContext.currentTime);\n        melodyGain.gain.linearRampToValueAtTime(musicVolume, this.audioContext.currentTime + 0.1);\n        melodyGain.gain.exponentialRampToValueAtTime(0.001, this.audioContext.currentTime + 1.5);\n        \n        melodyOsc.start();\n        melodyOsc.stop(this.audioContext.currentTime + 2);\n        \n        // Cleanup after note finishes\n        melodyOsc.addEventListener('ended', () => {\n            const oscIndex = this.backgroundMusic.oscillators.indexOf(melodyOsc);\n            const gainIndex = this.backgroundMusic.gainNodes.indexOf(melodyGain);\n            if (oscIndex > -1) this.backgroundMusic.oscillators.splice(oscIndex, 1);\n            if (gainIndex > -1) this.backgroundMusic.gainNodes.splice(gainIndex, 1);\n        });\n        \n        this.backgroundMusic.oscillators.push(melodyOsc);\n        this.backgroundMusic.gainNodes.push(melodyGain);\n    }\n    \n    /**\n     * Clean up ended oscillators\n     */\n    cleanupOscillators() {\n        this.backgroundMusic.oscillators = this.backgroundMusic.oscillators.filter(osc => {\n            try {\n                return osc.context.state !== 'closed';\n            } catch (e) {\n                return false;\n            }\n        });\n        \n        this.backgroundMusic.gainNodes = this.backgroundMusic.gainNodes.filter(gain => {\n            try {\n                return gain.context.state !== 'closed';\n            } catch (e) {\n                return false;\n            }\n        });\n    }\n    \n    /**\n     * Duck background music volume\n     */\n    duckBackgroundMusic() {\n        if (!this.musicGainNode || this.isDucking) return;\n        \n        this.isDucking = true;\n        const currentVolume = this.settings.master * this.settings.music;\n        const duckedVolume = currentVolume * 0.3;\n        \n        this.musicGainNode.gain.cancelScheduledValues(this.audioContext.currentTime);\n        this.musicGainNode.gain.setValueAtTime(currentVolume, this.audioContext.currentTime);\n        this.musicGainNode.gain.linearRampToValueAtTime(duckedVolume, this.audioContext.currentTime + 0.1);\n    }\n    \n    /**\n     * Restore background music volume\n     */\n    restoreBackgroundMusic() {\n        if (!this.musicGainNode || !this.isDucking) return;\n        \n        this.isDucking = false;\n        const normalVolume = this.settings.master * this.settings.music;\n        \n        this.musicGainNode.gain.cancelScheduledValues(this.audioContext.currentTime);\n        this.musicGainNode.gain.linearRampToValueAtTime(normalVolume, this.audioContext.currentTime + 0.3);\n    }\n    \n    /**\n     * Update master volume\n     */\n    setMasterVolume(value) {\n        this.settings.master = Math.max(0, Math.min(1, value));\n        \n        if (this.musicGainNode && !this.isDucking) {\n            const musicVolume = this.settings.master * this.settings.music;\n            this.musicGainNode.gain.setValueAtTime(musicVolume, this.audioContext.currentTime);\n        }\n        \n        this.emit('volumeChanged', { type: 'master', value: this.settings.master });\n    }\n    \n    /**\n     * Update effects volume\n     */\n    setEffectsVolume(value) {\n        this.settings.effects = Math.max(0, Math.min(1, value));\n        this.emit('volumeChanged', { type: 'effects', value: this.settings.effects });\n    }\n    \n    /**\n     * Update music volume\n     */\n    setMusicVolume(value) {\n        this.settings.music = Math.max(0, Math.min(1, value));\n        \n        if (this.musicGainNode && !this.isDucking) {\n            const musicVolume = this.settings.master * this.settings.music;\n            this.musicGainNode.gain.setValueAtTime(musicVolume, this.audioContext.currentTime);\n        }\n        \n        // Handle music start/stop based on volume\n        if (value > 0 && !this.backgroundMusic.playing) {\n            this.startBackgroundMusic();\n        } else if (value === 0) {\n            this.stopBackgroundMusic();\n        }\n        \n        this.emit('volumeChanged', { type: 'music', value: this.settings.music });\n    }\n    \n    /**\n     * Set audio preset\n     */\n    setPreset(preset) {\n        const presets = {\n            quiet: { master: 0.15, effects: 0.8, music: 0.3 },\n            normal: { master: 0.3, effects: 1.0, music: 0.5 },\n            energetic: { master: 0.5, effects: 1.0, music: 0.7 }\n        };\n        \n        const config = presets[preset];\n        if (config) {\n            this.setMasterVolume(config.master);\n            this.setEffectsVolume(config.effects);\n            this.setMusicVolume(config.music);\n            this.settings.preset = preset;\n            this.emit('presetChanged', preset);\n        }\n    }\n    \n    /**\n     * Enable/disable audio system\n     */\n    setEnabled(enabled) {\n        this.enabled = enabled;\n        \n        if (!enabled) {\n            this.stopBackgroundMusic();\n        }\n        \n        this.emit('enabledChanged', enabled);\n    }\n    \n    /**\n     * Get current audio settings\n     */\n    getSettings() {\n        return { ...this.settings };\n    }\n    \n    /**\n     * Check if audio is enabled and supported\n     */\n    isEnabled() {\n        return this.enabled && !!this.audioContext;\n    }\n    \n    /**\n     * Cleanup audio system\n     */\n    destroy() {\n        this.stopBackgroundMusic();\n        \n        if (this.musicGainNode) {\n            this.musicGainNode.disconnect();\n            this.musicGainNode = null;\n        }\n        \n        if (this.audioContext) {\n            this.audioContext.close();\n            this.audioContext = null;\n        }\n        \n        this.eventListeners.clear();\n    }\n    \n    /**\n     * Event system for audio callbacks\n     */\n    on(event, callback) {\n        if (!this.eventListeners.has(event)) {\n            this.eventListeners.set(event, []);\n        }\n        this.eventListeners.get(event).push(callback);\n    }\n    \n    off(event, callback) {\n        const callbacks = this.eventListeners.get(event);\n        if (callbacks) {\n            const index = callbacks.indexOf(callback);\n            if (index > -1) {\n                callbacks.splice(index, 1);\n            }\n        }\n    }\n    \n    emit(event, data) {\n        const callbacks = this.eventListeners.get(event);\n        if (callbacks) {\n            callbacks.forEach(callback => {\n                try {\n                    callback(data);\n                } catch (error) {\n                    console.error(`Error in audio event listener for ${event}:`, error);\n                }\n            });\n        }\n    }\n}\n\nexport default AudioSystem;","/**\n * Color Theme System\n * \n * Dynamic color management with theme transitions and texture pattern generation.\n * Colors respond to game state (combo level and score) for enhanced visual feedback.\n */\n\n/**\n * Main color theme object with dynamic colors\n */\nexport const colorTheme = {\n    primary: '#FFD700',\n    secondary: '#FF6347', \n    accent: '#00FF88',\n    warning: '#FF4444',\n    hue: 0\n};\n\n/**\n * Update color theme based on game state\n * @param {number} combo - Current combo multiplier\n * @param {number} score - Current game score\n * @param {number} frameCount - Current frame count for animations\n */\nexport function updateColorTheme(combo, score, frameCount) {\n    // Base hue changes based on combo level\n    const targetHue = Math.min((combo - 1) * 30, 300); // Max 300 degrees for rainbow effect\n    colorTheme.hue += (targetHue - colorTheme.hue) * 0.1; // Smooth transition\n    \n    // Score-based saturation and brightness\n    const scoreFactor = Math.min(score / 1000, 1); // Normalize to 0-1\n    const saturation = 50 + (scoreFactor * 50); // 50-100%\n    const lightness = 45 + (Math.sin(frameCount * 0.05) * 10); // Subtle pulsing 35-55%\n    \n    // Update theme colors\n    colorTheme.primary = `hsl(${colorTheme.hue + 45}, ${saturation}%, ${lightness + 15}%)`;\n    colorTheme.secondary = `hsl(${colorTheme.hue + 15}, ${saturation}%, ${lightness}%)`;\n    colorTheme.accent = `hsl(${colorTheme.hue + 120}, ${saturation}%, ${lightness}%)`;\n    colorTheme.warning = `hsl(${0}, ${saturation + 20}%, ${lightness}%)`;\n}\n\n/**\n * Power-up specific colors\n */\nexport const powerUpColors = {\n    speedBoost: '#FFD700',\n    timeFreeze: '#87CEEB', \n    scoreMultiplier: '#FF69B4'\n};\n\n/**\n * Create texture patterns for visual enhancement\n * @param {CanvasRenderingContext2D} ctx - Canvas context for pattern creation\n * @param {string} type - Type of texture ('wood', 'marble', 'fabric', 'paper')\n * @param {number} size - Size of the pattern (default: 50)\n * @returns {CanvasPattern} Canvas pattern object\n */\nexport function createTexturePattern(ctx, type, size = 50) {\n    const patternCanvas = document.createElement('canvas');\n    patternCanvas.width = size;\n    patternCanvas.height = size;\n    const patternCtx = patternCanvas.getContext('2d');\n    \n    switch(type) {\n        case 'wood':\n            // Wood grain texture\n            const woodGradient = patternCtx.createLinearGradient(0, 0, 0, size);\n            woodGradient.addColorStop(0, '#DEB887');\n            woodGradient.addColorStop(0.3, '#D2B48C');\n            woodGradient.addColorStop(0.7, '#CD853F');\n            woodGradient.addColorStop(1, '#A0522D');\n            patternCtx.fillStyle = woodGradient;\n            patternCtx.fillRect(0, 0, size, size);\n            \n            // Add wood grain lines\n            patternCtx.strokeStyle = 'rgba(139, 69, 19, 0.3)';\n            patternCtx.lineWidth = 1;\n            for(let i = 0; i < 8; i++) {\n                const y = (i * size / 8) + Math.sin(i) * 3;\n                patternCtx.beginPath();\n                patternCtx.moveTo(0, y);\n                patternCtx.lineTo(size, y + Math.sin(i * 0.5) * 2);\n                patternCtx.stroke();\n            }\n            break;\n            \n        case 'marble':\n            // Marble texture\n            const marbleGradient = patternCtx.createRadialGradient(size/2, size/2, 0, size/2, size/2, size/2);\n            marbleGradient.addColorStop(0, '#F8F8FF');\n            marbleGradient.addColorStop(0.5, '#E6E6FA');\n            marbleGradient.addColorStop(1, '#D3D3D3');\n            patternCtx.fillStyle = marbleGradient;\n            patternCtx.fillRect(0, 0, size, size);\n            \n            // Add marble veins\n            patternCtx.strokeStyle = 'rgba(169, 169, 169, 0.4)';\n            patternCtx.lineWidth = 2;\n            patternCtx.beginPath();\n            patternCtx.moveTo(0, size * 0.3);\n            patternCtx.quadraticCurveTo(size * 0.7, size * 0.1, size, size * 0.8);\n            patternCtx.stroke();\n            break;\n            \n        case 'fabric':\n            // Fabric weave texture\n            patternCtx.fillStyle = '#F5F5DC';\n            patternCtx.fillRect(0, 0, size, size);\n            \n            patternCtx.fillStyle = 'rgba(210, 180, 140, 0.5)';\n            const gridSize = size / 10;\n            for(let x = 0; x < size; x += gridSize) {\n                for(let y = 0; y < size; y += gridSize) {\n                    if((Math.floor(x/gridSize) + Math.floor(y/gridSize)) % 2) {\n                        patternCtx.fillRect(x, y, gridSize, gridSize);\n                    }\n                }\n            }\n            break;\n            \n        case 'paper':\n            // Paper texture\n            patternCtx.fillStyle = '#FFFEF0';\n            patternCtx.fillRect(0, 0, size, size);\n            \n            // Add paper fibers\n            for(let i = 0; i < 20; i++) {\n                patternCtx.strokeStyle = `rgba(220, 220, 200, ${Math.random() * 0.3})`;\n                patternCtx.lineWidth = 0.5;\n                patternCtx.beginPath();\n                patternCtx.moveTo(Math.random() * size, Math.random() * size);\n                patternCtx.lineTo(Math.random() * size, Math.random() * size);\n                patternCtx.stroke();\n            }\n            break;\n            \n        default:\n            // Default solid color\n            patternCtx.fillStyle = '#FFFFFF';\n            patternCtx.fillRect(0, 0, size, size);\n            break;\n    }\n    \n    return ctx.createPattern(patternCanvas, 'repeat');\n}\n\n/**\n * Screen flash effect management\n */\nexport class ScreenFlash {\n    constructor() {\n        this.color = '#ffffff';\n        this.intensity = 0;\n        this.duration = 0;\n    }\n    \n    /**\n     * Start a screen flash effect\n     * @param {string} color - Flash color\n     * @param {number} intensity - Flash intensity (0-1)\n     * @param {number} duration - Flash duration in frames\n     */\n    start(color, intensity, duration) {\n        this.color = color;\n        this.intensity = intensity;\n        this.duration = duration;\n    }\n    \n    /**\n     * Update flash effect (call each frame)\n     */\n    update() {\n        if (this.duration > 0) {\n            this.duration--;\n            this.intensity *= 0.85; // Fade out\n        }\n    }\n    \n    /**\n     * Check if flash is active\n     * @returns {boolean} True if flash is active\n     */\n    isActive() {\n        return this.intensity > 0.01;\n    }\n}\n\n/**\n * Utility functions for color manipulation\n */\nexport const colorUtils = {\n    /**\n     * Convert HSL to RGB\n     * @param {number} h - Hue (0-360)\n     * @param {number} s - Saturation (0-100)\n     * @param {number} l - Lightness (0-100)\n     * @returns {object} RGB object {r, g, b}\n     */\n    hslToRgb(h, s, l) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n        \n        const hue2rgb = (p, q, t) => {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1/6) return p + (q - p) * 6 * t;\n            if (t < 1/2) return q;\n            if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n            return p;\n        };\n        \n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        \n        return {\n            r: Math.round(hue2rgb(p, q, h + 1/3) * 255),\n            g: Math.round(hue2rgb(p, q, h) * 255),\n            b: Math.round(hue2rgb(p, q, h - 1/3) * 255)\n        };\n    },\n    \n    /**\n     * Add alpha transparency to a color\n     * @param {string} color - Color string\n     * @param {number} alpha - Alpha value (0-1)\n     * @returns {string} Color with alpha\n     */\n    addAlpha(color, alpha) {\n        if (color.startsWith('#')) {\n            const r = parseInt(color.slice(1, 3), 16);\n            const g = parseInt(color.slice(3, 5), 16);\n            const b = parseInt(color.slice(5, 7), 16);\n            return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n        }\n        return color; // Return as-is if not hex\n    }\n};\n\n/**\n * Get a random color from a predefined palette\n * @returns {string} Hex color string\n */\nexport function getRandomColor() {\n    const colors = [\n        '#FF6B6B', // Red\n        '#4ECDC4', // Teal\n        '#45B7D1', // Blue\n        '#F7DC6F', // Yellow\n        '#BB8FCE', // Purple\n        '#85C872', // Green\n        '#F8B500', // Orange\n        '#FF6F91', // Pink\n        '#6C5CE7', // Violet\n        '#00D2D3'  // Cyan\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n}\n\n/**\n * Get a theme color based on type\n * @param {string} type - Type of theme color ('primary', 'secondary', 'accent', 'warning')\n * @returns {string} Color string\n */\nexport function getThemeColor(type = 'primary') {\n    return colorTheme[type] || colorTheme.primary;\n}\n\nexport default {\n    colorTheme,\n    updateColorTheme,\n    powerUpColors,\n    createTexturePattern,\n    ScreenFlash,\n    colorUtils,\n    getRandomColor,\n    getThemeColor\n};","/**\n * Renderer System\n * \n * Comprehensive canvas rendering system with texture patterns, screen effects,\n * custom graphics, and dynamic visual features.\n */\n\nimport { colorTheme, createTexturePattern } from '../utils/Colors.js';\n\nexport class Renderer {\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        \n        // Rendering options\n        this.enableTextures = options.enableTextures !== false;\n        this.enableShadows = options.enableShadows !== false;\n        this.enableEffects = options.enableEffects !== false;\n        \n        // Canvas patterns\n        this.patterns = {\n            wood: null,\n            marble: null,\n            fabric: null,\n            paper: null\n        };\n        \n        // Screen effects\n        this.screenEffects = {\n            shake: { intensity: 0, duration: 0, x: 0, y: 0 },\n            flash: { intensity: 0, color: '#FFFFFF', duration: 0 },\n            ripple: { active: false, x: 0, y: 0, radius: 0, maxRadius: 0 },\n            glitch: { active: false, intensity: 0, duration: 0 }\n        };\n        \n        // Performance tracking\n        this.stats = {\n            drawCalls: 0,\n            frameTime: 0,\n            lastFrameTime: 0\n        };\n        \n        // Initialize\n        this.init();\n    }\n    \n    /**\n     * Initialize the renderer\n     */\n    init() {\n        this.setupCanvas();\n        if (this.enableTextures) {\n            this.initializePatterns();\n        }\n        this.setupEventListeners();\n    }\n    \n    /**\n     * Set up canvas properties\n     */\n    setupCanvas() {\n        this.ctx.imageSmoothingEnabled = true;\n        this.ctx.imageSmoothingQuality = 'high';\n        this.resizeCanvas();\n    }\n    \n    /**\n     * Resize canvas to fit window\n     */\n    resizeCanvas() {\n        const oldWidth = this.canvas.width;\n        const oldHeight = this.canvas.height;\n        \n        this.canvas.width = Math.min(window.innerWidth, 480);\n        this.canvas.height = window.innerHeight;\n        \n        // Re-setup context properties after resize\n        this.ctx.imageSmoothingEnabled = true;\n        this.ctx.imageSmoothingQuality = 'high';\n        \n        return { \n            changed: oldWidth !== this.canvas.width || oldHeight !== this.canvas.height,\n            width: this.canvas.width,\n            height: this.canvas.height\n        };\n    }\n    \n    /**\n     * Set up event listeners\n     */\n    setupEventListeners() {\n        window.addEventListener('resize', () => this.resizeCanvas());\n    }\n    \n    /**\n     * Initialize texture patterns\n     */\n    initializePatterns() {\n        this.patterns.wood = createTexturePattern(this.ctx, 'wood', 60);\n        this.patterns.marble = createTexturePattern(this.ctx, 'marble', 80);\n        this.patterns.fabric = createTexturePattern(this.ctx, 'fabric', 40);\n        this.patterns.paper = createTexturePattern(this.ctx, 'paper', 100);\n    }\n    \n    /**\n     * Clear the canvas\n     */\n    clear() {\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.stats.drawCalls = 0;\n    }\n    \n    /**\n     * Begin frame rendering\n     */\n    beginFrame(currentTime) {\n        this.stats.frameTime = currentTime - this.stats.lastFrameTime;\n        this.stats.lastFrameTime = currentTime;\n        this.clear();\n    }\n    \n    /**\n     * End frame rendering\n     */\n    endFrame() {\n        this.drawScreenEffects();\n    }\n    \n    /**\n     * Draw enhanced kitchen background\n     */\n    drawBackground() {\n        this.ctx.save();\n        \n        // Main game area texture\n        if (this.enableTextures && this.patterns.fabric) {\n            this.ctx.fillStyle = this.patterns.fabric;\n            this.ctx.globalAlpha = 0.05;\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height - 100);\n            this.ctx.globalAlpha = 1;\n        }\n        \n        // Kitchen counter with wood texture\n        if (this.enableTextures && this.patterns.wood) {\n            this.ctx.fillStyle = this.patterns.wood;\n            this.ctx.globalAlpha = 0.6;\n            this.ctx.fillRect(0, this.canvas.height - 100, this.canvas.width, 100);\n            this.ctx.globalAlpha = 1;\n        }\n        \n        // Add gradient overlay for depth\n        const kitchenGradient = this.ctx.createLinearGradient(\n            0, this.canvas.height - 100, \n            0, this.canvas.height\n        );\n        kitchenGradient.addColorStop(0, 'rgba(139, 69, 19, 0.3)');\n        kitchenGradient.addColorStop(0.5, 'rgba(101, 67, 33, 0.4)');\n        kitchenGradient.addColorStop(1, 'rgba(83, 53, 27, 0.5)');\n        this.ctx.fillStyle = kitchenGradient;\n        this.ctx.fillRect(0, this.canvas.height - 100, this.canvas.width, 100);\n        \n        this.ctx.restore();\n        this.stats.drawCalls++;\n    }\n    \n    /**\n     * Draw custom button with 3D effect\n     */\n    drawButton(x, y, width, height, text, isPressed = false) {\n        this.ctx.save();\n        \n        // Button shadow\n        const shadowOffset = isPressed ? 2 : 4;\n        this.ctx.fillStyle = 'rgba(0, 0, 0, 0.3)';\n        this.ctx.fillRect(x + shadowOffset, y + shadowOffset, width, height);\n        \n        // Button body with gradient\n        const gradient = this.ctx.createLinearGradient(x, y, x, y + height);\n        if (isPressed) {\n            gradient.addColorStop(0, '#E6B800');\n            gradient.addColorStop(1, '#FFD700');\n        } else {\n            gradient.addColorStop(0, '#FFD700');\n            gradient.addColorStop(0.5, '#FFA500');\n            gradient.addColorStop(1, '#FF8C00');\n        }\n        \n        this.ctx.fillStyle = gradient;\n        this.ctx.fillRect(x, y, width, height);\n        \n        // Button border\n        this.ctx.strokeStyle = '#B8860B';\n        this.ctx.lineWidth = 2;\n        this.ctx.strokeRect(x, y, width, height);\n        \n        // Button highlight\n        this.ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';\n        this.ctx.lineWidth = 1;\n        this.ctx.strokeRect(x + 1, y + 1, width - 2, height - 2);\n        \n        // Button text\n        this.ctx.fillStyle = '#333';\n        this.ctx.font = 'bold 16px Arial';\n        this.ctx.textAlign = 'center';\n        this.ctx.textBaseline = 'middle';\n        this.ctx.fillText(text, x + width/2, y + height/2 + (isPressed ? 1 : 0));\n        \n        this.ctx.restore();\n        this.stats.drawCalls++;\n    }\n    \n    /**\n     * Draw custom heart with optional beating animation\n     */\n    drawHeart(x, y, size, color = '#FF0000', beat = false, frameCount = 0) {\n        this.ctx.save();\n        this.ctx.translate(x, y);\n        \n        if (beat) {\n            const scale = 1 + Math.sin(frameCount * 0.3) * 0.1;\n            this.ctx.scale(scale, scale);\n        }\n        \n        this.ctx.fillStyle = color;\n        this.ctx.beginPath();\n        \n        // Heart shape using curves\n        const heartSize = size * 0.5;\n        this.ctx.moveTo(0, heartSize * 0.3);\n        this.ctx.bezierCurveTo(-heartSize, -heartSize * 0.3, -heartSize, heartSize * 0.3, 0, heartSize);\n        this.ctx.bezierCurveTo(heartSize, heartSize * 0.3, heartSize, -heartSize * 0.3, 0, heartSize * 0.3);\n        this.ctx.fill();\n        \n        // Heart highlight\n        this.ctx.fillStyle = 'rgba(255, 255, 255, 0.3)';\n        this.ctx.beginPath();\n        this.ctx.ellipse(-heartSize * 0.3, -heartSize * 0.1, heartSize * 0.2, heartSize * 0.15, 0, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        this.ctx.restore();\n        this.stats.drawCalls++;\n    }\n    \n    /**\n     * Draw custom star with optional twinkling animation\n     */\n    drawStar(x, y, size, color = '#FFD700', twinkle = false, frameCount = 0) {\n        this.ctx.save();\n        this.ctx.translate(x, y);\n        \n        if (twinkle) {\n            const rotation = frameCount * 0.05;\n            this.ctx.rotate(rotation);\n            const scale = 0.8 + Math.sin(frameCount * 0.2) * 0.3;\n            this.ctx.scale(scale, scale);\n        }\n        \n        this.ctx.fillStyle = color;\n        \n        // 5-pointed star\n        const spikes = 5;\n        const outerRadius = size;\n        const innerRadius = size * 0.4;\n        \n        this.ctx.beginPath();\n        for (let i = 0; i < spikes; i++) {\n            const angle = (i * Math.PI * 2) / spikes - Math.PI / 2;\n            const x1 = Math.cos(angle) * outerRadius;\n            const y1 = Math.sin(angle) * outerRadius;\n            \n            if (i === 0) this.ctx.moveTo(x1, y1);\n            else this.ctx.lineTo(x1, y1);\n            \n            const innerAngle = angle + Math.PI / spikes;\n            const x2 = Math.cos(innerAngle) * innerRadius;\n            const y2 = Math.sin(innerAngle) * innerRadius;\n            this.ctx.lineTo(x2, y2);\n        }\n        this.ctx.closePath();\n        this.ctx.fill();\n        \n        // Star highlight\n        this.ctx.fillStyle = 'rgba(255, 255, 255, 0.4)';\n        this.ctx.beginPath();\n        this.ctx.arc(0, -size * 0.2, size * 0.15, 0, Math.PI * 2);\n        this.ctx.fill();\n        \n        this.ctx.restore();\n        this.stats.drawCalls++;\n    }\n    \n    /**\n     * Draw custom burger illustration\n     */\n    drawBurger(x, y, size) {\n        this.ctx.save();\n        this.ctx.translate(x, y);\n        \n        const layers = [\n            { color: '#D2B48C', height: size * 0.15, type: 'bun' },\n            { color: '#90EE90', height: size * 0.08, type: 'lettuce' },\n            { color: '#FF6347', height: size * 0.08, type: 'tomato' },\n            { color: '#FFD700', height: size * 0.06, type: 'cheese' },\n            { color: '#8B4513', height: size * 0.2, type: 'patty' },\n            { color: '#DEB887', height: size * 0.15, type: 'bun' }\n        ];\n        \n        let currentY = size * 0.4;\n        \n        layers.forEach((layer) => {\n            this.ctx.fillStyle = layer.color;\n            \n            if (layer.type === 'bun') {\n                // Rounded bun\n                this.ctx.beginPath();\n                this.ctx.ellipse(0, currentY, size * 0.4, layer.height, 0, 0, Math.PI * 2);\n                this.ctx.fill();\n                \n                // Bun highlight\n                this.ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\n                this.ctx.beginPath();\n                this.ctx.ellipse(0, currentY - layer.height * 0.3, size * 0.3, layer.height * 0.5, 0, 0, Math.PI * 2);\n                this.ctx.fill();\n            } else {\n                // Flat ingredients\n                this.ctx.beginPath();\n                this.ctx.ellipse(0, currentY, size * 0.35, layer.height, 0, 0, Math.PI * 2);\n                this.ctx.fill();\n            }\n            \n            currentY -= layer.height * 1.5;\n        });\n        \n        this.ctx.restore();\n        this.stats.drawCalls++;\n    }\n    \n    /**\n     * Draw text with enhanced styling\n     */\n    drawText(text, x, y, options = {}) {\n        const {\n            font = '16px Arial',\n            color = '#000000',\n            align = 'left',\n            baseline = 'top',\n            shadow = false,\n            shadowColor = 'rgba(0, 0, 0, 0.5)',\n            shadowBlur = 2,\n            shadowOffset = { x: 1, y: 1 },\n            stroke = false,\n            strokeColor = '#FFFFFF',\n            strokeWidth = 2\n        } = options;\n        \n        this.ctx.save();\n        \n        this.ctx.font = font;\n        this.ctx.textAlign = align;\n        this.ctx.textBaseline = baseline;\n        \n        if (shadow) {\n            this.ctx.shadowColor = shadowColor;\n            this.ctx.shadowBlur = shadowBlur;\n            this.ctx.shadowOffsetX = shadowOffset.x;\n            this.ctx.shadowOffsetY = shadowOffset.y;\n        }\n        \n        if (stroke) {\n            this.ctx.strokeStyle = strokeColor;\n            this.ctx.lineWidth = strokeWidth;\n            this.ctx.strokeText(text, x, y);\n        }\n        \n        this.ctx.fillStyle = color;\n        this.ctx.fillText(text, x, y);\n        \n        this.ctx.restore();\n        this.stats.drawCalls++;\n    }\n    \n    /**\n     * Screen shake effect\n     */\n    startScreenShake(intensity, duration) {\n        this.screenEffects.shake.intensity = intensity;\n        this.screenEffects.shake.duration = duration;\n    }\n    \n    updateScreenShake() {\n        const shake = this.screenEffects.shake;\n        \n        if (shake.duration > 0) {\n            shake.duration--;\n            shake.x = (Math.random() - 0.5) * shake.intensity;\n            shake.y = (Math.random() - 0.5) * shake.intensity;\n            \n            this.canvas.style.transform = `translate(${shake.x}px, ${shake.y}px)`;\n            shake.intensity *= 0.9; // Gradually reduce intensity\n        } else {\n            shake.intensity = 0;\n            shake.x = 0;\n            shake.y = 0;\n            this.canvas.style.transform = 'translate(0px, 0px)';\n        }\n    }\n    \n    /**\n     * Screen flash effect\n     */\n    startScreenFlash(color, intensity, duration) {\n        this.screenEffects.flash.color = color;\n        this.screenEffects.flash.intensity = intensity;\n        this.screenEffects.flash.duration = duration;\n    }\n    \n    updateScreenFlash() {\n        const flash = this.screenEffects.flash;\n        \n        if (flash.duration > 0) {\n            flash.duration--;\n            flash.intensity *= 0.85; // Fade out\n        } else {\n            flash.intensity = 0;\n        }\n    }\n    \n    drawScreenFlash() {\n        const flash = this.screenEffects.flash;\n        \n        if (flash.intensity > 0.01) {\n            this.ctx.save();\n            this.ctx.globalAlpha = flash.intensity;\n            this.ctx.fillStyle = flash.color;\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.restore();\n        }\n    }\n    \n    /**\n     * Ripple effect\n     */\n    startRippleEffect(x, y, maxRadius = 100) {\n        this.screenEffects.ripple.active = true;\n        this.screenEffects.ripple.x = x;\n        this.screenEffects.ripple.y = y;\n        this.screenEffects.ripple.radius = 0;\n        this.screenEffects.ripple.maxRadius = maxRadius;\n    }\n    \n    updateRippleEffect() {\n        const ripple = this.screenEffects.ripple;\n        \n        if (ripple.active) {\n            ripple.radius += 8;\n            if (ripple.radius > ripple.maxRadius) {\n                ripple.active = false;\n            }\n        }\n    }\n    \n    drawRippleEffect() {\n        const ripple = this.screenEffects.ripple;\n        \n        if (ripple.active) {\n            this.ctx.save();\n            this.ctx.globalAlpha = 0.3 * (1 - ripple.radius / ripple.maxRadius);\n            this.ctx.strokeStyle = '#ffffff';\n            this.ctx.lineWidth = 4;\n            this.ctx.beginPath();\n            this.ctx.arc(ripple.x, ripple.y, ripple.radius, 0, Math.PI * 2);\n            this.ctx.stroke();\n            this.ctx.restore();\n        }\n    }\n    \n    /**\n     * Glitch effect\n     */\n    startGlitchEffect(intensity = 0.1, duration = 10) {\n        this.screenEffects.glitch.active = true;\n        this.screenEffects.glitch.intensity = intensity;\n        this.screenEffects.glitch.duration = duration;\n    }\n    \n    updateGlitchEffect() {\n        const glitch = this.screenEffects.glitch;\n        \n        if (glitch.active) {\n            glitch.duration--;\n            if (glitch.duration <= 0) {\n                glitch.active = false;\n            }\n        }\n    }\n    \n    drawGlitchEffect() {\n        const glitch = this.screenEffects.glitch;\n        \n        if (glitch.active) {\n            this.ctx.save();\n            this.ctx.globalAlpha = 0.15;\n            this.ctx.fillStyle = Math.random() > 0.5 ? '#ff0000' : '#00ff00';\n            this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.restore();\n        }\n    }\n    \n    /**\n     * Update all screen effects\n     */\n    updateScreenEffects() {\n        this.updateScreenShake();\n        this.updateScreenFlash();\n        this.updateRippleEffect();\n        this.updateGlitchEffect();\n    }\n    \n    /**\n     * Draw all screen effects\n     */\n    drawScreenEffects() {\n        if (!this.enableEffects) return;\n        \n        this.drawScreenFlash();\n        this.drawRippleEffect();\n        this.drawGlitchEffect();\n    }\n    \n    /**\n     * Set up shadows for enhanced 3D effect\n     */\n    setShadow(color = 'rgba(0, 0, 0, 0.1)', blur = 5, offset = { x: 0, y: 2 }) {\n        if (!this.enableShadows) return;\n        \n        this.ctx.shadowColor = color;\n        this.ctx.shadowBlur = blur;\n        this.ctx.shadowOffsetX = offset.x;\n        this.ctx.shadowOffsetY = offset.y;\n    }\n    \n    /**\n     * Clear shadows\n     */\n    clearShadow() {\n        this.ctx.shadowColor = 'transparent';\n        this.ctx.shadowBlur = 0;\n        this.ctx.shadowOffsetX = 0;\n        this.ctx.shadowOffsetY = 0;\n    }\n    \n    /**\n     * Get canvas dimensions\n     */\n    getDimensions() {\n        return {\n            width: this.canvas.width,\n            height: this.canvas.height\n        };\n    }\n    \n    /**\n     * Get rendering statistics\n     */\n    getStats() {\n        return { ...this.stats };\n    }\n    \n    /**\n     * Enable/disable features\n     */\n    setFeature(feature, enabled) {\n        switch (feature) {\n            case 'textures':\n                this.enableTextures = enabled;\n                break;\n            case 'shadows':\n                this.enableShadows = enabled;\n                break;\n            case 'effects':\n                this.enableEffects = enabled;\n                break;\n        }\n    }\n    \n    /**\n     * Get canvas context (for direct drawing when needed)\n     */\n    getContext() {\n        return this.ctx;\n    }\n    \n    /**\n     * Get texture patterns\n     */\n    getPatterns() {\n        return { ...this.patterns };\n    }\n    \n    /**\n     * Create floating text element (DOM-based)\n     */\n    createFloatingText(x, y, text, color = '#FFD700') {\n        const div = document.createElement('div');\n        div.className = 'floating-text';\n        div.style.cssText = `\n            position: absolute;\n            left: ${x}px;\n            top: ${y}px;\n            color: ${color};\n            font-size: 24px;\n            font-weight: bold;\n            pointer-events: none;\n            z-index: 1000;\n            animation: floatUp 1s ease-out forwards;\n        `;\n        div.textContent = text;\n        document.body.appendChild(div);\n        \n        setTimeout(() => div.remove(), 1000);\n    }\n    \n    /**\n     * Cleanup renderer resources\n     */\n    destroy() {\n        window.removeEventListener('resize', this.resizeCanvas);\n        this.patterns = {};\n        this.canvas.style.transform = 'translate(0px, 0px)';\n    }\n}\n\nexport default Renderer;","/**\n * InputSystem - Handles all user input for the game\n * \n * Features:\n * - Unified touch and mouse event handling\n * - Canvas coordinate transformation\n * - Mobile-optimized touch handling\n * - Event delegation for game entities\n * - Scroll prevention on mobile devices\n * - Automatic cleanup on destruction\n */\nexport class InputSystem {\n    /**\n     * Creates a new InputSystem instance\n     * @param {HTMLCanvasElement} canvas - The game canvas element\n     * @param {Object} options - Configuration options\n     * @param {boolean} options.preventScroll - Whether to prevent document scrolling on mobile\n     * @param {boolean} options.debug - Enable debug logging\n     */\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        this.options = {\n            preventScroll: true,\n            debug: false,\n            ...options\n        };\n        \n        // Input state\n        this.touches = new Map(); // Track active touches\n        this.mousePosition = { x: 0, y: 0 };\n        this.isMouseDown = false;\n        \n        // Event handlers (bound to preserve context)\n        this.boundHandlers = {\n            handleTouchStart: this.handleTouchStart.bind(this),\n            handleTouchMove: this.handleTouchMove.bind(this),\n            handleTouchEnd: this.handleTouchEnd.bind(this),\n            handleMouseDown: this.handleMouseDown.bind(this),\n            handleMouseMove: this.handleMouseMove.bind(this),\n            handleMouseUp: this.handleMouseUp.bind(this),\n            handleContextMenu: this.handleContextMenu.bind(this),\n            preventScroll: this.preventScroll.bind(this),\n            handleResize: this.handleResize.bind(this)\n        };\n        \n        // Click/tap callbacks\n        this.clickHandlers = [];\n        this.moveHandlers = [];\n        this.resizeHandlers = [];\n        \n        // Canvas bounds cache\n        this.canvasBounds = null;\n        this.updateCanvasBounds();\n        \n        this.setupEventListeners();\n    }\n    \n    /**\n     * Sets up all event listeners\n     * @private\n     */\n    setupEventListeners() {\n        // Touch events\n        this.canvas.addEventListener('touchstart', this.boundHandlers.handleTouchStart, { passive: false });\n        this.canvas.addEventListener('touchmove', this.boundHandlers.handleTouchMove, { passive: false });\n        this.canvas.addEventListener('touchend', this.boundHandlers.handleTouchEnd, { passive: false });\n        this.canvas.addEventListener('touchcancel', this.boundHandlers.handleTouchEnd, { passive: false });\n        \n        // Mouse events\n        this.canvas.addEventListener('mousedown', this.boundHandlers.handleMouseDown);\n        this.canvas.addEventListener('mousemove', this.boundHandlers.handleMouseMove);\n        this.canvas.addEventListener('mouseup', this.boundHandlers.handleMouseUp);\n        this.canvas.addEventListener('mouseleave', this.boundHandlers.handleMouseUp);\n        \n        // Prevent context menu on right-click\n        this.canvas.addEventListener('contextmenu', this.boundHandlers.handleContextMenu);\n        \n        // Prevent scrolling on mobile\n        if (this.options.preventScroll) {\n            document.body.addEventListener('touchmove', this.boundHandlers.preventScroll, { passive: false });\n        }\n        \n        // Window resize\n        window.addEventListener('resize', this.boundHandlers.handleResize);\n        \n        if (this.options.debug) {\n            console.log('InputSystem: Event listeners attached');\n        }\n    }\n    \n    /**\n     * Updates cached canvas bounds\n     * @private\n     */\n    updateCanvasBounds() {\n        this.canvasBounds = this.canvas.getBoundingClientRect();\n    }\n    \n    /**\n     * Converts client coordinates to canvas coordinates\n     * @param {number} clientX - Client X coordinate\n     * @param {number} clientY - Client Y coordinate\n     * @returns {{x: number, y: number}} Canvas coordinates\n     */\n    clientToCanvas(clientX, clientY) {\n        const bounds = this.canvasBounds || this.canvas.getBoundingClientRect();\n        \n        // Account for canvas scaling\n        const scaleX = this.canvas.width / bounds.width;\n        const scaleY = this.canvas.height / bounds.height;\n        \n        return {\n            x: (clientX - bounds.left) * scaleX,\n            y: (clientY - bounds.top) * scaleY\n        };\n    }\n    \n    /**\n     * Handles touch start events\n     * @param {TouchEvent} event - The touch event\n     * @private\n     */\n    handleTouchStart(event) {\n        event.preventDefault();\n        \n        for (const touch of event.changedTouches) {\n            const canvasCoords = this.clientToCanvas(touch.clientX, touch.clientY);\n            \n            this.touches.set(touch.identifier, {\n                id: touch.identifier,\n                startX: canvasCoords.x,\n                startY: canvasCoords.y,\n                currentX: canvasCoords.x,\n                currentY: canvasCoords.y,\n                startTime: Date.now()\n            });\n            \n            // Trigger click handlers for touch start\n            this.triggerClick(canvasCoords.x, canvasCoords.y, 'touch');\n        }\n        \n        if (this.options.debug) {\n            console.log(`InputSystem: ${event.changedTouches.length} touch(es) started`);\n        }\n    }\n    \n    /**\n     * Handles touch move events\n     * @param {TouchEvent} event - The touch event\n     * @private\n     */\n    handleTouchMove(event) {\n        event.preventDefault();\n        \n        for (const touch of event.changedTouches) {\n            const touchData = this.touches.get(touch.identifier);\n            if (touchData) {\n                const canvasCoords = this.clientToCanvas(touch.clientX, touch.clientY);\n                touchData.currentX = canvasCoords.x;\n                touchData.currentY = canvasCoords.y;\n                \n                // Trigger move handlers\n                this.triggerMove(canvasCoords.x, canvasCoords.y, 'touch');\n            }\n        }\n    }\n    \n    /**\n     * Handles touch end events\n     * @param {TouchEvent} event - The touch event\n     * @private\n     */\n    handleTouchEnd(event) {\n        event.preventDefault();\n        \n        for (const touch of event.changedTouches) {\n            this.touches.delete(touch.identifier);\n        }\n        \n        if (this.options.debug) {\n            console.log(`InputSystem: Touch ended, ${this.touches.size} active touches`);\n        }\n    }\n    \n    /**\n     * Handles mouse down events\n     * @param {MouseEvent} event - The mouse event\n     * @private\n     */\n    handleMouseDown(event) {\n        const canvasCoords = this.clientToCanvas(event.clientX, event.clientY);\n        this.isMouseDown = true;\n        this.mousePosition = canvasCoords;\n        \n        // Trigger click handlers for mouse down\n        this.triggerClick(canvasCoords.x, canvasCoords.y, 'mouse');\n        \n        if (this.options.debug) {\n            console.log(`InputSystem: Mouse down at ${canvasCoords.x}, ${canvasCoords.y}`);\n        }\n    }\n    \n    /**\n     * Handles mouse move events\n     * @param {MouseEvent} event - The mouse event\n     * @private\n     */\n    handleMouseMove(event) {\n        const canvasCoords = this.clientToCanvas(event.clientX, event.clientY);\n        this.mousePosition = canvasCoords;\n        \n        if (this.isMouseDown) {\n            this.triggerMove(canvasCoords.x, canvasCoords.y, 'mouse');\n        }\n    }\n    \n    /**\n     * Handles mouse up events\n     * @param {MouseEvent} event - The mouse event\n     * @private\n     */\n    handleMouseUp(event) {\n        this.isMouseDown = false;\n        \n        if (this.options.debug) {\n            console.log('InputSystem: Mouse up');\n        }\n    }\n    \n    /**\n     * Prevents context menu\n     * @param {Event} event - The context menu event\n     * @private\n     */\n    handleContextMenu(event) {\n        event.preventDefault();\n    }\n    \n    /**\n     * Prevents document scrolling\n     * @param {TouchEvent} event - The touch event\n     * @private\n     */\n    preventScroll(event) {\n        if (event.target === this.canvas || this.canvas.contains(event.target)) {\n            event.preventDefault();\n        }\n    }\n    \n    /**\n     * Handles window resize\n     * @param {Event} event - The resize event\n     * @private\n     */\n    handleResize(event) {\n        this.updateCanvasBounds();\n        \n        // Trigger resize handlers\n        for (const handler of this.resizeHandlers) {\n            handler(this.canvas.width, this.canvas.height);\n        }\n        \n        if (this.options.debug) {\n            console.log(`InputSystem: Canvas resized to ${this.canvas.width}x${this.canvas.height}`);\n        }\n    }\n    \n    /**\n     * Triggers click handlers\n     * @param {number} x - Canvas X coordinate\n     * @param {number} y - Canvas Y coordinate\n     * @param {string} type - Input type ('touch' or 'mouse')\n     * @private\n     */\n    triggerClick(x, y, type) {\n        for (const handler of this.clickHandlers) {\n            const handled = handler(x, y, type);\n            if (handled) break; // Stop propagation if handler returns true\n        }\n    }\n    \n    /**\n     * Triggers move handlers\n     * @param {number} x - Canvas X coordinate\n     * @param {number} y - Canvas Y coordinate\n     * @param {string} type - Input type ('touch' or 'mouse')\n     * @private\n     */\n    triggerMove(x, y, type) {\n        for (const handler of this.moveHandlers) {\n            handler(x, y, type);\n        }\n    }\n    \n    /**\n     * Registers a click/tap handler\n     * @param {Function} handler - Handler function (x, y, type) => boolean\n     * @returns {Function} Unregister function\n     */\n    onClick(handler) {\n        this.clickHandlers.push(handler);\n        \n        // Return unregister function\n        return () => {\n            const index = this.clickHandlers.indexOf(handler);\n            if (index !== -1) {\n                this.clickHandlers.splice(index, 1);\n            }\n        };\n    }\n    \n    /**\n     * Registers a move handler\n     * @param {Function} handler - Handler function (x, y, type) => void\n     * @returns {Function} Unregister function\n     */\n    onMove(handler) {\n        this.moveHandlers.push(handler);\n        \n        // Return unregister function\n        return () => {\n            const index = this.moveHandlers.indexOf(handler);\n            if (index !== -1) {\n                this.moveHandlers.splice(index, 1);\n            }\n        };\n    }\n    \n    /**\n     * Registers a resize handler\n     * @param {Function} handler - Handler function (width, height) => void\n     * @returns {Function} Unregister function\n     */\n    onResize(handler) {\n        this.resizeHandlers.push(handler);\n        \n        // Return unregister function\n        return () => {\n            const index = this.resizeHandlers.indexOf(handler);\n            if (index !== -1) {\n                this.resizeHandlers.splice(index, 1);\n            }\n        };\n    }\n    \n    /**\n     * Gets current touch points\n     * @returns {Array} Array of active touch points\n     */\n    getTouches() {\n        return Array.from(this.touches.values());\n    }\n    \n    /**\n     * Gets current mouse position\n     * @returns {{x: number, y: number}} Mouse position in canvas coordinates\n     */\n    getMousePosition() {\n        return { ...this.mousePosition };\n    }\n    \n    /**\n     * Checks if a point is being touched/clicked\n     * @param {number} x - X coordinate to check\n     * @param {number} y - Y coordinate to check\n     * @param {number} radius - Radius around the point to check\n     * @returns {boolean} True if point is being interacted with\n     */\n    isPointActive(x, y, radius = 0) {\n        // Check mouse\n        if (this.isMouseDown) {\n            const dx = this.mousePosition.x - x;\n            const dy = this.mousePosition.y - y;\n            if (Math.sqrt(dx * dx + dy * dy) <= radius) {\n                return true;\n            }\n        }\n        \n        // Check touches\n        for (const touch of this.touches.values()) {\n            const dx = touch.currentX - x;\n            const dy = touch.currentY - y;\n            if (Math.sqrt(dx * dx + dy * dy) <= radius) {\n                return true;\n            }\n        }\n        \n        return false;\n    }\n    \n    /**\n     * Removes all event listeners and cleans up\n     */\n    destroy() {\n        // Remove canvas event listeners\n        this.canvas.removeEventListener('touchstart', this.boundHandlers.handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this.boundHandlers.handleTouchMove);\n        this.canvas.removeEventListener('touchend', this.boundHandlers.handleTouchEnd);\n        this.canvas.removeEventListener('touchcancel', this.boundHandlers.handleTouchEnd);\n        this.canvas.removeEventListener('mousedown', this.boundHandlers.handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this.boundHandlers.handleMouseMove);\n        this.canvas.removeEventListener('mouseup', this.boundHandlers.handleMouseUp);\n        this.canvas.removeEventListener('mouseleave', this.boundHandlers.handleMouseUp);\n        this.canvas.removeEventListener('contextmenu', this.boundHandlers.handleContextMenu);\n        \n        // Remove document event listeners\n        if (this.options.preventScroll) {\n            document.body.removeEventListener('touchmove', this.boundHandlers.preventScroll);\n        }\n        \n        // Remove window event listeners\n        window.removeEventListener('resize', this.boundHandlers.handleResize);\n        \n        // Clear handlers\n        this.clickHandlers = [];\n        this.moveHandlers = [];\n        this.resizeHandlers = [];\n        \n        // Clear state\n        this.touches.clear();\n        \n        if (this.options.debug) {\n            console.log('InputSystem: Destroyed and cleaned up');\n        }\n    }\n}","/**\n * Physics System\n * \n * Comprehensive physics engine for handling gravity, collision detection,\n * movement calculations, boundary checking, and hit detection for the game.\n * All physics calculations are pure functions for optimal performance.\n * \n * @module PhysicsSystem\n */\n\n/**\n * Physics constants\n */\nexport const PHYSICS_CONSTANTS = {\n    GRAVITY: 0.15,\n    TERMINAL_VELOCITY: 12,\n    BOUNCE_DAMPING: 0.7,\n    FRICTION: 0.8,\n    MIN_VELOCITY: 0.01,\n    SWAY_AMPLITUDE: 0.5,\n    SWAY_FREQUENCY: 0.05,\n    ROTATION_DAMPING: 0.98\n};\n\n/**\n * PhysicsSystem class\n * Stateless physics engine providing pure functions for physics calculations\n */\nexport class PhysicsSystem {\n    constructor(options = {}) {\n        // Canvas dimensions for boundary checking\n        this.bounds = {\n            width: options.width || 480,\n            height: options.height || 600\n        };\n        \n        // Physics settings\n        this.gravity = options.gravity || PHYSICS_CONSTANTS.GRAVITY;\n        this.terminalVelocity = options.terminalVelocity || PHYSICS_CONSTANTS.TERMINAL_VELOCITY;\n        this.bounceDamping = options.bounceDamping || PHYSICS_CONSTANTS.BOUNCE_DAMPING;\n        this.friction = options.friction || PHYSICS_CONSTANTS.FRICTION;\n        \n        // Performance optimization flags\n        this.enableRotation = options.enableRotation !== false;\n        this.enableSway = options.enableSway !== false;\n        this.enableBounce = options.enableBounce !== false;\n    }\n    \n    /**\n     * Update canvas bounds\n     * @param {number} width - Canvas width\n     * @param {number} height - Canvas height\n     */\n    updateBounds(width, height) {\n        this.bounds.width = width;\n        this.bounds.height = height;\n    }\n    \n    /**\n     * Apply gravity to a velocity\n     * @param {number} velocityY - Current Y velocity\n     * @param {number} [gravityMultiplier=1] - Gravity multiplier\n     * @returns {number} Updated Y velocity\n     */\n    applyGravity(velocityY, gravityMultiplier = 1) {\n        const newVelocity = velocityY + (this.gravity * gravityMultiplier);\n        return Math.min(newVelocity, this.terminalVelocity);\n    }\n    \n    /**\n     * Calculate position update with velocity\n     * @param {Object} position - Current position {x, y}\n     * @param {Object} velocity - Current velocity {x, y}\n     * @param {number} [deltaTime=1] - Time delta\n     * @returns {Object} New position {x, y}\n     */\n    updatePosition(position, velocity, deltaTime = 1) {\n        return {\n            x: position.x + (velocity.x * deltaTime),\n            y: position.y + (velocity.y * deltaTime)\n        };\n    }\n    \n    /**\n     * Apply horizontal sway motion\n     * @param {number} baseX - Base X position\n     * @param {number} time - Current time/frame\n     * @param {number} swayFactor - Sway intensity factor\n     * @returns {number} X position with sway applied\n     */\n    applySway(baseX, time, swayFactor = 1) {\n        if (!this.enableSway) return baseX;\n        \n        const swayAmount = Math.sin(time * PHYSICS_CONSTANTS.SWAY_FREQUENCY + swayFactor * Math.PI) \n                          * PHYSICS_CONSTANTS.SWAY_AMPLITUDE;\n        return baseX + swayAmount;\n    }\n    \n    /**\n     * Update rotation with angular velocity\n     * @param {number} rotation - Current rotation in radians\n     * @param {number} rotationSpeed - Angular velocity\n     * @param {boolean} [applyDamping=false] - Apply rotation damping\n     * @returns {Object} Updated rotation and speed\n     */\n    updateRotation(rotation, rotationSpeed, applyDamping = false) {\n        if (!this.enableRotation) return { rotation: 0, rotationSpeed: 0 };\n        \n        const newRotation = rotation + rotationSpeed;\n        const newSpeed = applyDamping \n            ? rotationSpeed * PHYSICS_CONSTANTS.ROTATION_DAMPING \n            : rotationSpeed;\n        \n        return {\n            rotation: newRotation % (Math.PI * 2),\n            rotationSpeed: Math.abs(newSpeed) < PHYSICS_CONSTANTS.MIN_VELOCITY ? 0 : newSpeed\n        };\n    }\n    \n    /**\n     * Check if entity is within canvas bounds\n     * @param {Object} entity - Entity with x, y, width, height properties\n     * @param {Object} [customBounds] - Optional custom bounds\n     * @returns {Object} Boundary check results\n     */\n    checkBounds(entity, customBounds) {\n        const bounds = customBounds || this.bounds;\n        const width = entity.width || entity.size || 0;\n        const height = entity.height || entity.size || 0;\n        \n        const left = entity.x < 0;\n        const right = entity.x + width > bounds.width;\n        const top = entity.y < 0;\n        const bottom = entity.y + height > bounds.height;\n        const offScreenBottom = entity.y > bounds.height;\n        const offScreenTop = entity.y + height < 0;\n        \n        return {\n            inBounds: !left && !right && !top && !bottom,\n            left,\n            right,\n            top,\n            bottom,\n            offScreenBottom,\n            offScreenTop\n        };\n    }\n    \n    /**\n     * Apply boundary collision with optional bounce\n     * @param {Object} entity - Entity with position and velocity\n     * @param {Object} boundaryCheck - Result from checkBounds\n     * @returns {Object} Updated position and velocity\n     */\n    applyBoundaryCollision(entity, boundaryCheck) {\n        const result = {\n            x: entity.x,\n            y: entity.y,\n            vx: entity.vx || 0,\n            vy: entity.vy || 0,\n            bounced: false\n        };\n        \n        // Left boundary\n        if (boundaryCheck.left) {\n            result.x = 0;\n            if (this.enableBounce) {\n                result.vx = Math.abs(result.vx) * this.bounceDamping;\n                result.bounced = true;\n            } else {\n                result.vx = 0;\n            }\n        }\n        \n        // Right boundary\n        if (boundaryCheck.right) {\n            result.x = this.bounds.width - entity.width;\n            if (this.enableBounce) {\n                result.vx = -Math.abs(result.vx) * this.bounceDamping;\n                result.bounced = true;\n            } else {\n                result.vx = 0;\n            }\n        }\n        \n        // Bottom boundary (ground)\n        if (boundaryCheck.bottom && entity.vy > 0) {\n            result.y = this.bounds.height - entity.height;\n            if (this.enableBounce) {\n                result.vy = -Math.abs(result.vy) * this.bounceDamping;\n                result.vx *= this.friction;\n                result.bounced = true;\n                \n                // Stop tiny bounces\n                if (Math.abs(result.vy) < PHYSICS_CONSTANTS.MIN_VELOCITY) {\n                    result.vy = 0;\n                }\n            } else {\n                result.vy = 0;\n            }\n        }\n        \n        return result;\n    }\n    \n    /**\n     * Circle-circle collision detection\n     * @param {Object} circle1 - First circle {x, y, radius}\n     * @param {Object} circle2 - Second circle {x, y, radius}\n     * @returns {boolean} True if circles collide\n     */\n    checkCircleCollision(circle1, circle2) {\n        const dx = circle1.x - circle2.x;\n        const dy = circle1.y - circle2.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        return distance < circle1.radius + circle2.radius;\n    }\n    \n    /**\n     * Point-circle collision detection\n     * @param {number} pointX - Point X coordinate\n     * @param {number} pointY - Point Y coordinate\n     * @param {Object} circle - Circle {x, y, radius}\n     * @returns {boolean} True if point is inside circle\n     */\n    checkPointCircleCollision(pointX, pointY, circle) {\n        const dx = pointX - circle.x;\n        const dy = pointY - circle.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        return distance <= circle.radius;\n    }\n    \n    /**\n     * Rectangle-rectangle collision detection\n     * @param {Object} rect1 - First rectangle {x, y, width, height}\n     * @param {Object} rect2 - Second rectangle {x, y, width, height}\n     * @returns {boolean} True if rectangles collide\n     */\n    checkRectCollision(rect1, rect2) {\n        return rect1.x < rect2.x + rect2.width &&\n               rect1.x + rect1.width > rect2.x &&\n               rect1.y < rect2.y + rect2.height &&\n               rect1.y + rect1.height > rect2.y;\n    }\n    \n    /**\n     * Point-rectangle collision detection\n     * @param {number} pointX - Point X coordinate\n     * @param {number} pointY - Point Y coordinate\n     * @param {Object} rect - Rectangle {x, y, width, height}\n     * @returns {boolean} True if point is inside rectangle\n     */\n    checkPointRectCollision(pointX, pointY, rect) {\n        return pointX >= rect.x && \n               pointX <= rect.x + rect.width &&\n               pointY >= rect.y && \n               pointY <= rect.y + rect.height;\n    }\n    \n    /**\n     * Check if a click/tap hits an entity (with size/radius)\n     * @param {number} clickX - Click X coordinate\n     * @param {number} clickY - Click Y coordinate\n     * @param {Object} entity - Entity to check\n     * @returns {boolean} True if click hits entity\n     */\n    isClicked(clickX, clickY, entity) {\n        // Handle circular entities\n        if (entity.radius !== undefined) {\n            const centerX = entity.x + (entity.size || entity.radius * 2) / 2;\n            const centerY = entity.y + (entity.size || entity.radius * 2) / 2;\n            return this.checkPointCircleCollision(clickX, clickY, {\n                x: centerX,\n                y: centerY,\n                radius: entity.radius\n            });\n        }\n        \n        // Handle rectangular entities\n        if (entity.width !== undefined && entity.height !== undefined) {\n            return this.checkPointRectCollision(clickX, clickY, entity);\n        }\n        \n        // Handle entities with size property (assumed square)\n        if (entity.size !== undefined) {\n            return this.checkPointRectCollision(clickX, clickY, {\n                x: entity.x,\n                y: entity.y,\n                width: entity.size,\n                height: entity.size\n            });\n        }\n        \n        return false;\n    }\n    \n    /**\n     * Calculate distance between two points\n     * @param {number} x1 - First point X\n     * @param {number} y1 - First point Y\n     * @param {number} x2 - Second point X\n     * @param {number} y2 - Second point Y\n     * @returns {number} Distance between points\n     */\n    distance(x1, y1, x2, y2) {\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n    \n    /**\n     * Calculate angle between two points\n     * @param {number} x1 - First point X\n     * @param {number} y1 - First point Y\n     * @param {number} x2 - Second point X\n     * @param {number} y2 - Second point Y\n     * @returns {number} Angle in radians\n     */\n    angle(x1, y1, x2, y2) {\n        return Math.atan2(y2 - y1, x2 - x1);\n    }\n    \n    /**\n     * Normalize a vector\n     * @param {number} x - Vector X component\n     * @param {number} y - Vector Y component\n     * @returns {Object} Normalized vector {x, y}\n     */\n    normalize(x, y) {\n        const magnitude = Math.sqrt(x * x + y * y);\n        \n        if (magnitude === 0) {\n            return { x: 0, y: 0 };\n        }\n        \n        return {\n            x: x / magnitude,\n            y: y / magnitude\n        };\n    }\n    \n    /**\n     * Apply physics update to an entity\n     * @param {Object} entity - Entity with physics properties\n     * @param {number} deltaTime - Time delta\n     * @param {Object} [options] - Additional options\n     * @returns {Object} Updated entity physics\n     */\n    updateEntity(entity, deltaTime = 1, options = {}) {\n        const result = {\n            x: entity.x,\n            y: entity.y,\n            vx: entity.vx || 0,\n            vy: entity.vy || 0,\n            rotation: entity.rotation || 0,\n            rotationSpeed: entity.rotationSpeed || 0\n        };\n        \n        // Apply gravity if entity has gravity enabled\n        if (entity.hasGravity !== false && !options.disableGravity) {\n            result.vy = this.applyGravity(\n                result.vy, \n                entity.gravityMultiplier || 1\n            );\n        }\n        \n        // Update position\n        const newPosition = this.updatePosition(\n            { x: result.x, y: result.y },\n            { x: result.vx, y: result.vy },\n            deltaTime\n        );\n        result.x = newPosition.x;\n        result.y = newPosition.y;\n        \n        // Apply sway if enabled\n        if (entity.sway !== undefined && this.enableSway) {\n            result.x = this.applySway(result.x, options.time || 0, entity.sway);\n        }\n        \n        // Update rotation\n        if (this.enableRotation) {\n            const rotationUpdate = this.updateRotation(\n                result.rotation,\n                result.rotationSpeed,\n                entity.rotationDamping || false\n            );\n            result.rotation = rotationUpdate.rotation;\n            result.rotationSpeed = rotationUpdate.rotationSpeed;\n        }\n        \n        // Check boundaries\n        const boundaryCheck = this.checkBounds({\n            x: result.x,\n            y: result.y,\n            width: entity.width || entity.size || 0,\n            height: entity.height || entity.size || 0\n        });\n        \n        // Apply boundary collision if needed\n        if (!boundaryCheck.inBounds && entity.bounceOnBounds) {\n            const collision = this.applyBoundaryCollision(\n                {\n                    x: result.x,\n                    y: result.y,\n                    vx: result.vx,\n                    vy: result.vy,\n                    width: entity.width || entity.size || 0,\n                    height: entity.height || entity.size || 0\n                },\n                boundaryCheck\n            );\n            \n            result.x = collision.x;\n            result.y = collision.y;\n            result.vx = collision.vx;\n            result.vy = collision.vy;\n            result.bounced = collision.bounced;\n        }\n        \n        result.offScreen = boundaryCheck.offScreenBottom || boundaryCheck.offScreenTop;\n        result.boundaryCheck = boundaryCheck;\n        \n        return result;\n    }\n    \n    /**\n     * Predict future position of an entity\n     * @param {Object} entity - Entity with physics properties\n     * @param {number} steps - Number of physics steps to predict\n     * @param {number} [deltaTime=1] - Time delta per step\n     * @returns {Object} Predicted position {x, y}\n     */\n    predictPosition(entity, steps, deltaTime = 1) {\n        let x = entity.x;\n        let y = entity.y;\n        let vx = entity.vx || 0;\n        let vy = entity.vy || 0;\n        \n        for (let i = 0; i < steps; i++) {\n            // Apply gravity\n            if (entity.hasGravity !== false) {\n                vy = this.applyGravity(vy, entity.gravityMultiplier || 1);\n            }\n            \n            // Update position\n            x += vx * deltaTime;\n            y += vy * deltaTime;\n        }\n        \n        return { x, y };\n    }\n    \n    /**\n     * Calculate intercept point for moving targets\n     * @param {Object} shooter - Shooter position {x, y}\n     * @param {Object} target - Target with position and velocity {x, y, vx, vy}\n     * @param {number} projectileSpeed - Speed of projectile\n     * @returns {Object|null} Intercept point {x, y} or null if no intercept\n     */\n    calculateIntercept(shooter, target, projectileSpeed) {\n        const dx = target.x - shooter.x;\n        const dy = target.y - shooter.y;\n        const vx = target.vx || 0;\n        const vy = target.vy || 0;\n        \n        // Quadratic equation coefficients\n        const a = vx * vx + vy * vy - projectileSpeed * projectileSpeed;\n        const b = 2 * (dx * vx + dy * vy);\n        const c = dx * dx + dy * dy;\n        \n        const discriminant = b * b - 4 * a * c;\n        \n        if (discriminant < 0) return null;\n        \n        const t1 = (-b + Math.sqrt(discriminant)) / (2 * a);\n        const t2 = (-b - Math.sqrt(discriminant)) / (2 * a);\n        \n        const t = (t1 > 0 && t2 > 0) ? Math.min(t1, t2) : Math.max(t1, t2);\n        \n        if (t < 0) return null;\n        \n        return {\n            x: target.x + vx * t,\n            y: target.y + vy * t,\n            time: t\n        };\n    }\n}\n\n// Export singleton instance for convenience\nexport const physics = new PhysicsSystem();\n\nexport default PhysicsSystem;","/**\n * Mathematical Utilities\n * \n * Common mathematical functions and utilities used throughout the game.\n * Includes physics calculations, random number generation, and geometric functions.\n */\n\n/**\n * Clamp a value between min and max\n * @param {number} value - Value to clamp\n * @param {number} min - Minimum value\n * @param {number} max - Maximum value\n * @returns {number} Clamped value\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Linear interpolation between two values\n * @param {number} start - Start value\n * @param {number} end - End value\n * @param {number} t - Interpolation factor (0-1)\n * @returns {number} Interpolated value\n */\nexport function lerp(start, end, t) {\n    return start + (end - start) * t;\n}\n\n/**\n * Map a value from one range to another\n * @param {number} value - Value to map\n * @param {number} inMin - Input range minimum\n * @param {number} inMax - Input range maximum\n * @param {number} outMin - Output range minimum\n * @param {number} outMax - Output range maximum\n * @returns {number} Mapped value\n */\nexport function mapRange(value, inMin, inMax, outMin, outMax) {\n    return (value - inMin) * (outMax - outMin) / (inMax - inMin) + outMin;\n}\n\n/**\n * Calculate distance between two points\n * @param {number} x1 - First point x coordinate\n * @param {number} y1 - First point y coordinate\n * @param {number} x2 - Second point x coordinate\n * @param {number} y2 - Second point y coordinate\n * @returns {number} Distance between points\n */\nexport function distance(x1, y1, x2, y2) {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    return Math.sqrt(dx * dx + dy * dy);\n}\n\n/**\n * Calculate squared distance (faster than distance for comparisons)\n * @param {number} x1 - First point x coordinate\n * @param {number} y1 - First point y coordinate\n * @param {number} x2 - Second point x coordinate\n * @param {number} y2 - Second point y coordinate\n * @returns {number} Squared distance between points\n */\nexport function distanceSquared(x1, y1, x2, y2) {\n    const dx = x2 - x1;\n    const dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n\n/**\n * Generate random number between min and max (inclusive)\n * Alias for random.between for backward compatibility\n * @param {number} min - Minimum value\n * @param {number} max - Maximum value\n * @returns {number} Random number\n */\nexport function randomRange(min, max) {\n    return Math.random() * (max - min) + min;\n}\n\n/**\n * Random number generation utilities\n */\nexport const random = {\n    /**\n     * Generate random number between min and max (inclusive)\n     * @param {number} min - Minimum value\n     * @param {number} max - Maximum value\n     * @returns {number} Random number\n     */\n    between(min, max) {\n        return Math.random() * (max - min) + min;\n    },\n    \n    /**\n     * Generate random integer between min and max (inclusive)\n     * @param {number} min - Minimum value\n     * @param {number} max - Maximum value\n     * @returns {number} Random integer\n     */\n    int(min, max) {\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n    \n    /**\n     * Choose random element from array\n     * @param {Array} array - Array to choose from\n     * @returns {*} Random element\n     */\n    choice(array) {\n        return array[Math.floor(Math.random() * array.length)];\n    },\n    \n    /**\n     * Generate random boolean with optional probability\n     * @param {number} probability - Probability of true (0-1, default: 0.5)\n     * @returns {boolean} Random boolean\n     */\n    boolean(probability = 0.5) {\n        return Math.random() < probability;\n    },\n    \n    /**\n     * Generate random point within a circle\n     * @param {number} centerX - Circle center x\n     * @param {number} centerY - Circle center y\n     * @param {number} radius - Circle radius\n     * @returns {object} Random point {x, y}\n     */\n    pointInCircle(centerX, centerY, radius) {\n        const angle = Math.random() * 2 * Math.PI;\n        const r = Math.sqrt(Math.random()) * radius;\n        return {\n            x: centerX + r * Math.cos(angle),\n            y: centerY + r * Math.sin(angle)\n        };\n    }\n};\n\n/**\n * Angle and rotation utilities\n */\nexport const angles = {\n    /**\n     * Convert degrees to radians\n     * @param {number} degrees - Angle in degrees\n     * @returns {number} Angle in radians\n     */\n    toRadians(degrees) {\n        return degrees * Math.PI / 180;\n    },\n    \n    /**\n     * Convert radians to degrees\n     * @param {number} radians - Angle in radians\n     * @returns {number} Angle in degrees\n     */\n    toDegrees(radians) {\n        return radians * 180 / Math.PI;\n    },\n    \n    /**\n     * Normalize angle to 0-2π range\n     * @param {number} angle - Angle in radians\n     * @returns {number} Normalized angle\n     */\n    normalize(angle) {\n        while (angle < 0) angle += 2 * Math.PI;\n        while (angle >= 2 * Math.PI) angle -= 2 * Math.PI;\n        return angle;\n    },\n    \n    /**\n     * Calculate angle between two points\n     * @param {number} x1 - First point x\n     * @param {number} y1 - First point y\n     * @param {number} x2 - Second point x\n     * @param {number} y2 - Second point y\n     * @returns {number} Angle in radians\n     */\n    between(x1, y1, x2, y2) {\n        return Math.atan2(y2 - y1, x2 - x1);\n    }\n};\n\n/**\n * Physics and motion utilities\n */\nexport const physics = {\n    /**\n     * Apply gravity to velocity\n     * @param {number} velocity - Current y velocity\n     * @param {number} gravity - Gravity force (default: 0.5)\n     * @returns {number} New velocity\n     */\n    applyGravity(velocity, gravity = 0.5) {\n        return velocity + gravity;\n    },\n    \n    /**\n     * Apply friction to velocity\n     * @param {number} velocity - Current velocity\n     * @param {number} friction - Friction coefficient (0-1)\n     * @returns {number} New velocity\n     */\n    applyFriction(velocity, friction = 0.9) {\n        return velocity * friction;\n    },\n    \n    /**\n     * Bounce velocity off a surface\n     * @param {number} velocity - Current velocity\n     * @param {number} restitution - Bounce factor (0-1)\n     * @returns {number} New velocity\n     */\n    bounce(velocity, restitution = 0.8) {\n        return -velocity * restitution;\n    },\n    \n    /**\n     * Check if point is within bounds\n     * @param {number} x - Point x coordinate\n     * @param {number} y - Point y coordinate\n     * @param {number} minX - Minimum x bound\n     * @param {number} minY - Minimum y bound\n     * @param {number} maxX - Maximum x bound\n     * @param {number} maxY - Maximum y bound\n     * @returns {boolean} True if within bounds\n     */\n    inBounds(x, y, minX, minY, maxX, maxY) {\n        return x >= minX && x <= maxX && y >= minY && y <= maxY;\n    }\n};\n\n/**\n * Collision detection utilities\n */\nexport const collision = {\n    /**\n     * Point-rectangle collision\n     * @param {number} px - Point x coordinate\n     * @param {number} py - Point y coordinate\n     * @param {number} rx - Rectangle x coordinate\n     * @param {number} ry - Rectangle y coordinate\n     * @param {number} rw - Rectangle width\n     * @param {number} rh - Rectangle height\n     * @returns {boolean} True if collision detected\n     */\n    pointRect(px, py, rx, ry, rw, rh) {\n        return px >= rx && px <= rx + rw && py >= ry && py <= ry + rh;\n    },\n    \n    /**\n     * Point-circle collision\n     * @param {number} px - Point x coordinate\n     * @param {number} py - Point y coordinate\n     * @param {number} cx - Circle center x\n     * @param {number} cy - Circle center y\n     * @param {number} radius - Circle radius\n     * @returns {boolean} True if collision detected\n     */\n    pointCircle(px, py, cx, cy, radius) {\n        return distanceSquared(px, py, cx, cy) <= radius * radius;\n    },\n    \n    /**\n     * Rectangle-rectangle collision\n     * @param {number} r1x - First rectangle x\n     * @param {number} r1y - First rectangle y\n     * @param {number} r1w - First rectangle width\n     * @param {number} r1h - First rectangle height\n     * @param {number} r2x - Second rectangle x\n     * @param {number} r2y - Second rectangle y\n     * @param {number} r2w - Second rectangle width\n     * @param {number} r2h - Second rectangle height\n     * @returns {boolean} True if collision detected\n     */\n    rectRect(r1x, r1y, r1w, r1h, r2x, r2y, r2w, r2h) {\n        return r1x < r2x + r2w &&\n               r1x + r1w > r2x &&\n               r1y < r2y + r2h &&\n               r1y + r1h > r2y;\n    },\n    \n    /**\n     * Circle-circle collision\n     * @param {number} x1 - First circle center x\n     * @param {number} y1 - First circle center y\n     * @param {number} r1 - First circle radius\n     * @param {number} x2 - Second circle center x\n     * @param {number} y2 - Second circle center y\n     * @param {number} r2 - Second circle radius\n     * @returns {boolean} True if collision detected\n     */\n    circleCircle(x1, y1, r1, x2, y2, r2) {\n        const minDistance = r1 + r2;\n        return distanceSquared(x1, y1, x2, y2) <= minDistance * minDistance;\n    }\n};\n\n/**\n * Performance optimization utilities\n */\nexport const performance = {\n    /**\n     * Pre-calculated sine values for performance\n     */\n    sinTable: Array.from({ length: 360 }, (_, i) => Math.sin(i * Math.PI / 180)),\n    \n    /**\n     * Pre-calculated cosine values for performance\n     */\n    cosTable: Array.from({ length: 360 }, (_, i) => Math.cos(i * Math.PI / 180)),\n    \n    /**\n     * Fast sine lookup (approximate)\n     * @param {number} degrees - Angle in degrees\n     * @returns {number} Sine value\n     */\n    fastSin(degrees) {\n        return this.sinTable[Math.floor(degrees) % 360];\n    },\n    \n    /**\n     * Fast cosine lookup (approximate)\n     * @param {number} degrees - Angle in degrees\n     * @returns {number} Cosine value\n     */\n    fastCos(degrees) {\n        return this.cosTable[Math.floor(degrees) % 360];\n    }\n};\n\n// Default export with all utilities\nexport default {\n    clamp,\n    lerp,\n    mapRange,\n    distance,\n    distanceSquared,\n    random,\n    angles,\n    physics,\n    collision,\n    performance\n};","/**\n * Object Pool Utility\n * \n * Manages pools of reusable objects to reduce garbage collection pressure\n * and improve performance, especially on mobile devices.\n */\n\nexport class ObjectPool {\n    /**\n     * Create a new object pool\n     * @param {Function} createFn - Function to create new objects\n     * @param {Function} resetFn - Function to reset objects for reuse\n     * @param {number} initialSize - Initial pool size\n     * @param {number} maxSize - Maximum pool size\n     */\n    constructor(createFn, resetFn, initialSize = 10, maxSize = 100) {\n        this.createFn = createFn;\n        this.resetFn = resetFn;\n        this.maxSize = maxSize;\n        this.pool = [];\n        this.activeCount = 0;\n        this.totalCreated = 0;\n        this.totalReused = 0;\n        \n        // Pre-populate pool\n        for (let i = 0; i < initialSize; i++) {\n            this.pool.push(this.createFn());\n            this.totalCreated++;\n        }\n    }\n    \n    /**\n     * Get an object from the pool\n     * @param {...any} args - Arguments to pass to reset function\n     * @returns {any} Pooled object\n     */\n    get(...args) {\n        let obj;\n        \n        if (this.pool.length > 0) {\n            obj = this.pool.pop();\n            this.totalReused++;\n        } else {\n            obj = this.createFn();\n            this.totalCreated++;\n        }\n        \n        // Reset object for reuse\n        if (this.resetFn) {\n            this.resetFn(obj, ...args);\n        }\n        \n        this.activeCount++;\n        return obj;\n    }\n    \n    /**\n     * Release an object back to the pool\n     * @param {any} obj - Object to release\n     */\n    release(obj) {\n        if (!obj) return;\n        \n        // Don't exceed max pool size\n        if (this.pool.length < this.maxSize) {\n            this.pool.push(obj);\n        }\n        \n        this.activeCount = Math.max(0, this.activeCount - 1);\n    }\n    \n    /**\n     * Release multiple objects at once\n     * @param {Array} objects - Array of objects to release\n     */\n    releaseAll(objects) {\n        objects.forEach(obj => this.release(obj));\n    }\n    \n    /**\n     * Clear the pool and reset statistics\n     */\n    clear() {\n        this.pool.length = 0;\n        this.activeCount = 0;\n        this.totalCreated = 0;\n        this.totalReused = 0;\n    }\n    \n    /**\n     * Get pool statistics\n     * @returns {object} Pool statistics\n     */\n    getStats() {\n        return {\n            poolSize: this.pool.length,\n            activeCount: this.activeCount,\n            totalCreated: this.totalCreated,\n            totalReused: this.totalReused,\n            reuseRatio: this.totalCreated > 0 ? (this.totalReused / this.totalCreated) : 0,\n            maxSize: this.maxSize\n        };\n    }\n    \n    /**\n     * Check if pool is healthy (not creating too many new objects)\n     * @returns {boolean} True if pool is performing well\n     */\n    isHealthy() {\n        const stats = this.getStats();\n        return stats.reuseRatio > 0.5; // At least 50% reuse rate\n    }\n    \n    /**\n     * Resize the pool\n     * @param {number} newMaxSize - New maximum size\n     */\n    resize(newMaxSize) {\n        this.maxSize = newMaxSize;\n        \n        // Trim pool if it's now too large\n        while (this.pool.length > this.maxSize) {\n            this.pool.pop();\n        }\n    }\n    \n    /**\n     * Pre-warm the pool with objects\n     * @param {number} count - Number of objects to create\n     */\n    preWarm(count) {\n        for (let i = 0; i < count && this.pool.length < this.maxSize; i++) {\n            this.pool.push(this.createFn());\n            this.totalCreated++;\n        }\n    }\n}\n\n/**\n * Pool Manager for managing multiple object pools\n */\nexport class PoolManager {\n    constructor() {\n        this.pools = new Map();\n    }\n    \n    /**\n     * Create a new pool\n     * @param {string} name - Pool name\n     * @param {Function} createFn - Function to create new objects\n     * @param {Function} resetFn - Function to reset objects\n     * @param {number} initialSize - Initial pool size\n     * @param {number} maxSize - Maximum pool size\n     */\n    createPool(name, createFn, resetFn, initialSize = 10, maxSize = 100) {\n        const pool = new ObjectPool(createFn, resetFn, initialSize, maxSize);\n        this.pools.set(name, pool);\n        return pool;\n    }\n    \n    /**\n     * Get a pool by name\n     * @param {string} name - Pool name\n     * @returns {ObjectPool} The pool\n     */\n    getPool(name) {\n        return this.pools.get(name);\n    }\n    \n    /**\n     * Get an object from a named pool\n     * @param {string} poolName - Pool name\n     * @param {...any} args - Arguments for reset function\n     * @returns {any} Pooled object\n     */\n    get(poolName, ...args) {\n        const pool = this.pools.get(poolName);\n        return pool ? pool.get(...args) : null;\n    }\n    \n    /**\n     * Release an object to a named pool\n     * @param {string} poolName - Pool name\n     * @param {any} obj - Object to release\n     */\n    release(poolName, obj) {\n        const pool = this.pools.get(poolName);\n        if (pool) {\n            pool.release(obj);\n        }\n    }\n    \n    /**\n     * Get statistics for all pools\n     * @returns {object} Statistics for all pools\n     */\n    getStats() {\n        const stats = {};\n        for (const [name, pool] of this.pools) {\n            stats[name] = pool.getStats();\n        }\n        return stats;\n    }\n    \n    /**\n     * Clear all pools\n     */\n    clearAll() {\n        for (const pool of this.pools.values()) {\n            pool.clear();\n        }\n    }\n    \n    /**\n     * Check if all pools are healthy\n     * @returns {boolean} True if all pools are performing well\n     */\n    areAllPoolsHealthy() {\n        for (const pool of this.pools.values()) {\n            if (!pool.isHealthy()) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    /**\n     * Get total memory savings estimate\n     * @returns {object} Memory savings information\n     */\n    getMemorySavings() {\n        let totalReused = 0;\n        let totalCreated = 0;\n        \n        for (const pool of this.pools.values()) {\n            const stats = pool.getStats();\n            totalReused += stats.totalReused;\n            totalCreated += stats.totalCreated;\n        }\n        \n        return {\n            objectsReused: totalReused,\n            objectsCreated: totalCreated,\n            savings: totalCreated > 0 ? (totalReused / totalCreated) : 0\n        };\n    }\n}\n\nexport default ObjectPool;","/**\n * Performance Monitor\n * \n * Monitors frame rate and performance metrics to enable adaptive quality\n * and provide insights into performance bottlenecks for mobile optimization.\n */\n\nexport class PerformanceMonitor {\n    constructor(options = {}) {\n        this.enabled = options.enabled !== false;\n        this.sampleSize = options.sampleSize || 60; // Track last 60 frames\n        this.targetFPS = options.targetFPS || 60;\n        this.lowFPSThreshold = options.lowFPSThreshold || 45;\n        this.criticalFPSThreshold = options.criticalFPSThreshold || 30;\n        \n        // Frame timing arrays\n        this.frameTimes = [];\n        this.lastFrameTime = 0;\n        this.frameCount = 0;\n        \n        // Performance statistics\n        this.stats = {\n            currentFPS: 60,\n            averageFPS: 60,\n            minFPS: 60,\n            maxFPS: 60,\n            frameTimeMS: 16.67,\n            droppedFrames: 0,\n            performanceLevel: 'high' // high, medium, low, critical\n        };\n        \n        // Performance level history for stability\n        this.performanceLevels = [];\n        this.levelChangeDelay = options.levelChangeDelay || 120; // Frames to wait before changing level\n        \n        // Quality settings per performance level\n        this.qualitySettings = {\n            high: {\n                maxParticles: 200,\n                enableShadows: true,\n                enableTextures: true,\n                enableEffects: true,\n                particleDetail: 1.0,\n                renderScale: 1.0\n            },\n            medium: {\n                maxParticles: 100,\n                enableShadows: true,\n                enableTextures: true,\n                enableEffects: true,\n                particleDetail: 0.8,\n                renderScale: 1.0\n            },\n            low: {\n                maxParticles: 50,\n                enableShadows: false,\n                enableTextures: false,\n                enableEffects: true,\n                particleDetail: 0.6,\n                renderScale: 0.9\n            },\n            critical: {\n                maxParticles: 25,\n                enableShadows: false,\n                enableTextures: false,\n                enableEffects: false,\n                particleDetail: 0.4,\n                renderScale: 0.8\n            }\n        };\n        \n        // Event callbacks\n        this.callbacks = {\n            performanceLevelChanged: [],\n            frameDropDetected: [],\n            statsUpdated: []\n        };\n        \n        // Debug mode\n        this.debugMode = options.debugMode || false;\n    }\n    \n    /**\n     * Start monitoring (call once per frame)\n     * @param {number} currentTime - Current timestamp\n     */\n    update(currentTime) {\n        if (!this.enabled) return;\n        \n        if (this.lastFrameTime === 0) {\n            this.lastFrameTime = currentTime;\n            return;\n        }\n        \n        const frameTime = currentTime - this.lastFrameTime;\n        this.lastFrameTime = currentTime;\n        this.frameCount++;\n        \n        // Add frame time to samples\n        this.frameTimes.push(frameTime);\n        if (this.frameTimes.length > this.sampleSize) {\n            this.frameTimes.shift();\n        }\n        \n        // Update statistics\n        this.updateStats();\n        \n        // Check for performance level changes\n        this.checkPerformanceLevel();\n        \n        // Emit callbacks\n        this.emit('statsUpdated', this.stats);\n    }\n    \n    /**\n     * Update performance statistics\n     */\n    updateStats() {\n        if (this.frameTimes.length === 0) return;\n        \n        const times = this.frameTimes;\n        const frameTimeMS = times[times.length - 1];\n        \n        // Calculate FPS metrics\n        const currentFPS = Math.min(1000 / frameTimeMS, this.targetFPS);\n        const averageFrameTime = times.reduce((sum, time) => sum + time, 0) / times.length;\n        const averageFPS = Math.min(1000 / averageFrameTime, this.targetFPS);\n        const minFPS = Math.min(1000 / Math.max(...times), this.targetFPS);\n        const maxFPS = Math.min(1000 / Math.min(...times), this.targetFPS);\n        \n        // Count dropped frames (frames longer than target)\n        const targetFrameTime = 1000 / this.targetFPS;\n        const droppedFrames = times.filter(time => time > targetFrameTime * 1.5).length;\n        \n        this.stats = {\n            currentFPS: Math.round(currentFPS * 10) / 10,\n            averageFPS: Math.round(averageFPS * 10) / 10,\n            minFPS: Math.round(minFPS * 10) / 10,\n            maxFPS: Math.round(maxFPS * 10) / 10,\n            frameTimeMS: Math.round(frameTimeMS * 100) / 100,\n            droppedFrames,\n            performanceLevel: this.stats.performanceLevel\n        };\n        \n        // Detect frame drops\n        if (frameTimeMS > targetFrameTime * 2) {\n            this.emit('frameDropDetected', { frameTime: frameTimeMS, targetTime: targetFrameTime });\n        }\n    }\n    \n    /**\n     * Check if performance level should change\n     */\n    checkPerformanceLevel() {\n        let newLevel = this.determinePerformanceLevel();\n        \n        // Add to history\n        this.performanceLevels.push(newLevel);\n        if (this.performanceLevels.length > this.levelChangeDelay) {\n            this.performanceLevels.shift();\n        }\n        \n        // Only change level if it's been consistent\n        if (this.performanceLevels.length >= this.levelChangeDelay) {\n            const recentLevels = this.performanceLevels.slice(-30); // Last 30 frames\n            const levelCounts = {};\n            \n            recentLevels.forEach(level => {\n                levelCounts[level] = (levelCounts[level] || 0) + 1;\n            });\n            \n            // Find most common level\n            const dominantLevel = Object.keys(levelCounts).reduce((a, b) => \n                levelCounts[a] > levelCounts[b] ? a : b\n            );\n            \n            if (dominantLevel !== this.stats.performanceLevel) {\n                const oldLevel = this.stats.performanceLevel;\n                this.stats.performanceLevel = dominantLevel;\n                \n                if (this.debugMode) {\n                    console.log(`Performance level changed: ${oldLevel} → ${dominantLevel}`);\n                }\n                \n                this.emit('performanceLevelChanged', {\n                    oldLevel,\n                    newLevel: dominantLevel,\n                    settings: this.getQualitySettings()\n                });\n            }\n        }\n    }\n    \n    /**\n     * Determine appropriate performance level based on current metrics\n     * @returns {string} Performance level\n     */\n    determinePerformanceLevel() {\n        const { averageFPS, droppedFrames } = this.stats;\n        const dropRate = droppedFrames / this.sampleSize;\n        \n        if (averageFPS >= this.targetFPS * 0.9 && dropRate < 0.1) {\n            return 'high';\n        } else if (averageFPS >= this.lowFPSThreshold && dropRate < 0.2) {\n            return 'medium';\n        } else if (averageFPS >= this.criticalFPSThreshold && dropRate < 0.4) {\n            return 'low';\n        } else {\n            return 'critical';\n        }\n    }\n    \n    /**\n     * Get current quality settings\n     * @returns {object} Quality settings for current performance level\n     */\n    getQualitySettings() {\n        return { ...this.qualitySettings[this.stats.performanceLevel] };\n    }\n    \n    /**\n     * Get performance statistics\n     * @returns {object} Current performance stats\n     */\n    getStats() {\n        return { ...this.stats };\n    }\n    \n    /**\n     * Check if performance is acceptable\n     * @returns {boolean} True if performance is good\n     */\n    isPerformanceGood() {\n        return this.stats.averageFPS >= this.lowFPSThreshold && \n               this.stats.droppedFrames / this.sampleSize < 0.2;\n    }\n    \n    /**\n     * Check if performance is critical\n     * @returns {boolean} True if performance is critically poor\n     */\n    isPerformanceCritical() {\n        return this.stats.performanceLevel === 'critical';\n    }\n    \n    /**\n     * Force a specific performance level\n     * @param {string} level - Performance level to set\n     */\n    setPerformanceLevel(level) {\n        if (this.qualitySettings[level]) {\n            const oldLevel = this.stats.performanceLevel;\n            this.stats.performanceLevel = level;\n            \n            // Clear history to prevent immediate reversion\n            this.performanceLevels = new Array(this.levelChangeDelay).fill(level);\n            \n            this.emit('performanceLevelChanged', {\n                oldLevel,\n                newLevel: level,\n                settings: this.getQualitySettings(),\n                forced: true\n            });\n        }\n    }\n    \n    /**\n     * Reset performance monitoring\n     */\n    reset() {\n        this.frameTimes = [];\n        this.lastFrameTime = 0;\n        this.frameCount = 0;\n        this.performanceLevels = [];\n        this.stats = {\n            currentFPS: 60,\n            averageFPS: 60,\n            minFPS: 60,\n            maxFPS: 60,\n            frameTimeMS: 16.67,\n            droppedFrames: 0,\n            performanceLevel: 'high'\n        };\n    }\n    \n    /**\n     * Enable/disable monitoring\n     * @param {boolean} enabled - Whether to enable monitoring\n     */\n    setEnabled(enabled) {\n        this.enabled = enabled;\n        if (!enabled) {\n            this.reset();\n        }\n    }\n    \n    /**\n     * Set debug mode\n     * @param {boolean} debug - Whether to enable debug logging\n     */\n    setDebugMode(debug) {\n        this.debugMode = debug;\n    }\n    \n    /**\n     * Add event listener\n     * @param {string} event - Event name\n     * @param {Function} callback - Callback function\n     */\n    on(event, callback) {\n        if (this.callbacks[event]) {\n            this.callbacks[event].push(callback);\n        }\n    }\n    \n    /**\n     * Remove event listener\n     * @param {string} event - Event name\n     * @param {Function} callback - Callback function to remove\n     */\n    off(event, callback) {\n        if (this.callbacks[event]) {\n            const index = this.callbacks[event].indexOf(callback);\n            if (index > -1) {\n                this.callbacks[event].splice(index, 1);\n            }\n        }\n    }\n    \n    /**\n     * Emit event to listeners\n     * @param {string} event - Event name\n     * @param {any} data - Event data\n     */\n    emit(event, data) {\n        if (this.callbacks[event]) {\n            this.callbacks[event].forEach(callback => {\n                try {\n                    callback(data);\n                } catch (error) {\n                    console.error(`Error in performance monitor ${event} callback:`, error);\n                }\n            });\n        }\n    }\n    \n    /**\n     * Get performance report\n     * @returns {object} Detailed performance report\n     */\n    getReport() {\n        return {\n            enabled: this.enabled,\n            frameCount: this.frameCount,\n            stats: this.getStats(),\n            qualitySettings: this.getQualitySettings(),\n            isHealthy: this.isPerformanceGood(),\n            isCritical: this.isPerformanceCritical(),\n            sampleSize: this.frameTimes.length,\n            targetFPS: this.targetFPS\n        };\n    }\n}\n\nexport default PerformanceMonitor;","/**\n * Performance UI Display\n * \n * Creates a real-time performance monitoring overlay for debugging and optimization.\n * Shows FPS, object pool stats, quality level, and detailed performance metrics.\n */\n\nexport class PerformanceUI {\n    constructor(options = {}) {\n        this.enabled = options.enabled || false;\n        this.position = options.position || 'top-left'; // top-left, top-right, bottom-left, bottom-right\n        this.updateInterval = options.updateInterval || 250; // ms\n        this.maxHistory = options.maxHistory || 100;\n        \n        // UI elements\n        this.container = null;\n        this.elements = {};\n        \n        // Performance data\n        this.performanceMonitor = null;\n        this.poolManager = null;\n        this.fpsHistory = [];\n        this.lastUpdate = 0;\n        \n        // Display options\n        this.showFPS = options.showFPS !== false;\n        this.showPools = options.showPools !== false;\n        this.showQuality = options.showQuality !== false;\n        this.showDetails = options.showDetails || false;\n        this.showGraph = options.showGraph || false;\n        \n        if (this.enabled) {\n            this.createUI();\n        }\n    }\n    \n    /**\n     * Initialize with performance monitor and pool manager\n     * @param {PerformanceMonitor} performanceMonitor - Performance monitoring system\n     * @param {PoolManager} poolManager - Object pool manager\n     */\n    init(performanceMonitor, poolManager) {\n        this.performanceMonitor = performanceMonitor;\n        this.poolManager = poolManager;\n    }\n    \n    /**\n     * Create the UI overlay\n     */\n    createUI() {\n        // Create container\n        this.container = document.createElement('div');\n        this.container.id = 'performance-ui';\n        this.container.style.cssText = this.getContainerStyles();\n        \n        // Create sections\n        if (this.showFPS) {\n            this.createFPSSection();\n        }\n        \n        if (this.showQuality) {\n            this.createQualitySection();\n        }\n        \n        if (this.showPools) {\n            this.createPoolsSection();\n        }\n        \n        if (this.showDetails) {\n            this.createDetailsSection();\n        }\n        \n        if (this.showGraph) {\n            this.createGraphSection();\n        }\n        \n        // Add toggle button\n        this.createToggleButton();\n        \n        document.body.appendChild(this.container);\n    }\n    \n    /**\n     * Get container CSS styles based on position\n     */\n    getContainerStyles() {\n        const baseStyles = `\n            position: fixed;\n            z-index: 10000;\n            background: rgba(0, 0, 0, 0.8);\n            color: white;\n            font-family: 'Courier New', monospace;\n            font-size: 12px;\n            padding: 10px;\n            border-radius: 5px;\n            min-width: 200px;\n            max-width: 300px;\n            backdrop-filter: blur(5px);\n        `;\n        \n        const positions = {\n            'top-left': 'top: 10px; left: 10px;',\n            'top-right': 'top: 10px; right: 10px;',\n            'bottom-left': 'bottom: 10px; left: 10px;',\n            'bottom-right': 'bottom: 10px; right: 10px;'\n        };\n        \n        return baseStyles + positions[this.position];\n    }\n    \n    /**\n     * Create FPS display section\n     */\n    createFPSSection() {\n        const section = document.createElement('div');\n        section.innerHTML = `\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">🎯 Performance</div>\n            <div>FPS: <span id=\"perf-fps\">--</span></div>\n            <div>Avg: <span id=\"perf-avg-fps\">--</span></div>\n            <div>Min: <span id=\"perf-min-fps\">--</span></div>\n            <div>Frame: <span id=\"perf-frame-time\">--</span>ms</div>\n            <div>Drops: <span id=\"perf-drops\">--</span></div>\n        `;\n        \n        this.container.appendChild(section);\n        \n        // Store element references\n        this.elements.fps = document.getElementById('perf-fps');\n        this.elements.avgFps = document.getElementById('perf-avg-fps');\n        this.elements.minFps = document.getElementById('perf-min-fps');\n        this.elements.frameTime = document.getElementById('perf-frame-time');\n        this.elements.drops = document.getElementById('perf-drops');\n    }\n    \n    /**\n     * Create quality level section\n     */\n    createQualitySection() {\n        const section = document.createElement('div');\n        section.style.marginTop = '10px';\n        section.innerHTML = `\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">⚙️ Quality</div>\n            <div>Level: <span id=\"perf-quality-level\">--</span></div>\n            <div>Particles: <span id=\"perf-max-particles\">--</span></div>\n            <div>Shadows: <span id=\"perf-shadows\">--</span></div>\n            <div>Effects: <span id=\"perf-effects\">--</span></div>\n        `;\n        \n        this.container.appendChild(section);\n        \n        this.elements.qualityLevel = document.getElementById('perf-quality-level');\n        this.elements.maxParticles = document.getElementById('perf-max-particles');\n        this.elements.shadows = document.getElementById('perf-shadows');\n        this.elements.effects = document.getElementById('perf-effects');\n    }\n    \n    /**\n     * Create object pools section\n     */\n    createPoolsSection() {\n        const section = document.createElement('div');\n        section.style.marginTop = '10px';\n        section.innerHTML = `\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">🎱 Object Pools</div>\n            <div id=\"perf-pools-content\">\n                <!-- Pool stats will be inserted here -->\n            </div>\n        `;\n        \n        this.container.appendChild(section);\n        this.elements.poolsContent = document.getElementById('perf-pools-content');\n    }\n    \n    /**\n     * Create detailed metrics section\n     */\n    createDetailsSection() {\n        const section = document.createElement('div');\n        section.style.marginTop = '10px';\n        section.innerHTML = `\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">📊 Details</div>\n            <div>Memory: <span id=\"perf-memory\">--</span></div>\n            <div>Entities: <span id=\"perf-entities\">--</span></div>\n            <div>Draw Calls: <span id=\"perf-draw-calls\">--</span></div>\n            <div>Performance: <span id=\"perf-health\">--</span></div>\n        `;\n        \n        this.container.appendChild(section);\n        \n        this.elements.memory = document.getElementById('perf-memory');\n        this.elements.entities = document.getElementById('perf-entities');\n        this.elements.drawCalls = document.getElementById('perf-draw-calls');\n        this.elements.health = document.getElementById('perf-health');\n    }\n    \n    /**\n     * Create FPS graph section\n     */\n    createGraphSection() {\n        const section = document.createElement('div');\n        section.style.marginTop = '10px';\n        section.innerHTML = `\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">📈 FPS Graph</div>\n            <canvas id=\"perf-graph\" width=\"180\" height=\"50\" style=\"background: rgba(255,255,255,0.1); border-radius: 3px;\"></canvas>\n        `;\n        \n        this.container.appendChild(section);\n        this.elements.graph = document.getElementById('perf-graph');\n        this.graphCtx = this.elements.graph.getContext('2d');\n    }\n    \n    /**\n     * Create toggle button\n     */\n    createToggleButton() {\n        const button = document.createElement('button');\n        button.innerHTML = '👁️';\n        button.style.cssText = `\n            position: absolute;\n            top: -5px;\n            right: -5px;\n            width: 20px;\n            height: 20px;\n            border: none;\n            border-radius: 50%;\n            background: rgba(255, 255, 255, 0.2);\n            color: white;\n            font-size: 10px;\n            cursor: pointer;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        `;\n        \n        button.onclick = () => this.toggle();\n        this.container.appendChild(button);\n    }\n    \n    /**\n     * Update performance display\n     * @param {number} currentTime - Current timestamp\n     * @param {object} gameData - Additional game data (entities, etc.)\n     */\n    update(currentTime, gameData = {}) {\n        if (!this.enabled || !this.container || !this.performanceMonitor) return;\n        \n        // Throttle updates\n        if (currentTime - this.lastUpdate < this.updateInterval) return;\n        this.lastUpdate = currentTime;\n        \n        const stats = this.performanceMonitor.getStats();\n        const qualitySettings = this.performanceMonitor.getQualitySettings();\n        \n        // Update FPS data\n        if (this.showFPS) {\n            this.updateFPSDisplay(stats);\n        }\n        \n        // Update quality data\n        if (this.showQuality) {\n            this.updateQualityDisplay(stats, qualitySettings);\n        }\n        \n        // Update pool data\n        if (this.showPools && this.poolManager) {\n            this.updatePoolsDisplay();\n        }\n        \n        // Update detailed metrics\n        if (this.showDetails) {\n            this.updateDetailsDisplay(stats, gameData);\n        }\n        \n        // Update graph\n        if (this.showGraph) {\n            this.updateGraph(stats.currentFPS);\n        }\n    }\n    \n    /**\n     * Update FPS display elements\n     */\n    updateFPSDisplay(stats) {\n        if (this.elements.fps) {\n            this.elements.fps.textContent = stats.currentFPS.toFixed(1);\n            this.elements.fps.style.color = this.getFPSColor(stats.currentFPS);\n        }\n        \n        if (this.elements.avgFps) {\n            this.elements.avgFps.textContent = stats.averageFPS.toFixed(1);\n        }\n        \n        if (this.elements.minFps) {\n            this.elements.minFps.textContent = stats.minFPS.toFixed(1);\n        }\n        \n        if (this.elements.frameTime) {\n            this.elements.frameTime.textContent = stats.frameTimeMS.toFixed(2);\n        }\n        \n        if (this.elements.drops) {\n            this.elements.drops.textContent = stats.droppedFrames;\n            this.elements.drops.style.color = stats.droppedFrames > 5 ? '#ff6b6b' : '#51cf66';\n        }\n    }\n    \n    /**\n     * Update quality display elements\n     */\n    updateQualityDisplay(stats, qualitySettings) {\n        if (this.elements.qualityLevel) {\n            this.elements.qualityLevel.textContent = stats.performanceLevel;\n            this.elements.qualityLevel.style.color = this.getQualityColor(stats.performanceLevel);\n        }\n        \n        if (this.elements.maxParticles) {\n            this.elements.maxParticles.textContent = qualitySettings.maxParticles;\n        }\n        \n        if (this.elements.shadows) {\n            this.elements.shadows.textContent = qualitySettings.enableShadows ? '✅' : '❌';\n        }\n        \n        if (this.elements.effects) {\n            this.elements.effects.textContent = qualitySettings.enableEffects ? '✅' : '❌';\n        }\n    }\n    \n    /**\n     * Update pools display\n     */\n    updatePoolsDisplay() {\n        const poolStats = this.poolManager.getStats();\n        let html = '';\n        \n        for (const [name, stats] of Object.entries(poolStats)) {\n            const utilization = ((stats.activeCount / (stats.poolSize + stats.activeCount)) * 100).toFixed(0);\n            const efficiency = (stats.reuseRatio * 100).toFixed(0);\n            \n            html += `\n                <div style=\"font-size: 10px; margin: 2px 0;\">\n                    <div>${name}: ${stats.activeCount}/${stats.poolSize + stats.activeCount}</div>\n                    <div style=\"color: #888;\">Use: ${utilization}% | Reuse: ${efficiency}%</div>\n                </div>\n            `;\n        }\n        \n        if (this.elements.poolsContent) {\n            this.elements.poolsContent.innerHTML = html;\n        }\n    }\n    \n    /**\n     * Update detailed metrics\n     */\n    updateDetailsDisplay(stats, gameData) {\n        if (this.elements.memory && window.performance && window.performance.memory) {\n            const mb = (window.performance.memory.usedJSHeapSize / 1024 / 1024).toFixed(1);\n            this.elements.memory.textContent = `${mb}MB`;\n        }\n        \n        if (this.elements.entities) {\n            const entityCount = (gameData.particles || []).length + \n                              (gameData.ingredients || []).length + \n                              (gameData.powerUps || []).length;\n            this.elements.entities.textContent = entityCount;\n        }\n        \n        if (this.elements.drawCalls && gameData.renderer) {\n            const rendererStats = gameData.renderer.getStats();\n            this.elements.drawCalls.textContent = rendererStats.drawCalls || '--';\n        }\n        \n        if (this.elements.health) {\n            const isHealthy = this.performanceMonitor.isPerformanceGood();\n            this.elements.health.textContent = isHealthy ? '✅ Good' : '⚠️ Poor';\n            this.elements.health.style.color = isHealthy ? '#51cf66' : '#ff6b6b';\n        }\n    }\n    \n    /**\n     * Update FPS graph\n     */\n    updateGraph(currentFPS) {\n        if (!this.graphCtx) return;\n        \n        this.fpsHistory.push(currentFPS);\n        if (this.fpsHistory.length > this.maxHistory) {\n            this.fpsHistory.shift();\n        }\n        \n        // Clear canvas\n        this.graphCtx.clearRect(0, 0, 180, 50);\n        \n        // Draw grid\n        this.graphCtx.strokeStyle = 'rgba(255, 255, 255, 0.1)';\n        this.graphCtx.lineWidth = 1;\n        for (let i = 0; i <= 50; i += 10) {\n            this.graphCtx.beginPath();\n            this.graphCtx.moveTo(0, i);\n            this.graphCtx.lineTo(180, i);\n            this.graphCtx.stroke();\n        }\n        \n        // Draw FPS line\n        if (this.fpsHistory.length > 1) {\n            this.graphCtx.strokeStyle = '#51cf66';\n            this.graphCtx.lineWidth = 2;\n            this.graphCtx.beginPath();\n            \n            for (let i = 0; i < this.fpsHistory.length; i++) {\n                const x = (i / this.fpsHistory.length) * 180;\n                const y = 50 - (this.fpsHistory[i] / 60) * 50; // Assume 60 FPS max\n                \n                if (i === 0) {\n                    this.graphCtx.moveTo(x, y);\n                } else {\n                    this.graphCtx.lineTo(x, y);\n                }\n            }\n            \n            this.graphCtx.stroke();\n        }\n        \n        // Draw 60 FPS reference line\n        this.graphCtx.strokeStyle = 'rgba(255, 255, 255, 0.3)';\n        this.graphCtx.lineWidth = 1;\n        this.graphCtx.setLineDash([2, 2]);\n        this.graphCtx.beginPath();\n        this.graphCtx.moveTo(0, 0);\n        this.graphCtx.lineTo(180, 0);\n        this.graphCtx.stroke();\n        this.graphCtx.setLineDash([]);\n    }\n    \n    /**\n     * Get color for FPS display\n     */\n    getFPSColor(fps) {\n        if (fps >= 55) return '#51cf66'; // Green\n        if (fps >= 45) return '#ffd43b'; // Yellow\n        if (fps >= 30) return '#ff8c42'; // Orange\n        return '#ff6b6b'; // Red\n    }\n    \n    /**\n     * Get color for quality level display\n     */\n    getQualityColor(level) {\n        const colors = {\n            'high': '#51cf66',\n            'medium': '#ffd43b',\n            'low': '#ff8c42',\n            'critical': '#ff6b6b'\n        };\n        return colors[level] || '#ffffff';\n    }\n    \n    /**\n     * Toggle UI visibility\n     */\n    toggle() {\n        if (this.container) {\n            this.enabled = !this.enabled;\n            this.container.style.display = this.enabled ? 'block' : 'none';\n        }\n    }\n    \n    /**\n     * Show the UI\n     */\n    show() {\n        this.enabled = true;\n        if (this.container) {\n            this.container.style.display = 'block';\n        } else {\n            this.createUI();\n        }\n    }\n    \n    /**\n     * Hide the UI\n     */\n    hide() {\n        this.enabled = false;\n        if (this.container) {\n            this.container.style.display = 'none';\n        }\n    }\n    \n    /**\n     * Destroy the UI\n     */\n    destroy() {\n        if (this.container) {\n            this.container.remove();\n            this.container = null;\n        }\n        this.elements = {};\n    }\n    \n    /**\n     * Set position of the UI\n     * @param {string} position - New position (top-left, top-right, bottom-left, bottom-right)\n     */\n    setPosition(position) {\n        this.position = position;\n        if (this.container) {\n            const styles = this.getContainerStyles();\n            this.container.style.cssText = styles;\n        }\n    }\n    \n    /**\n     * Configure which sections to show\n     * @param {object} options - Display options\n     */\n    configure(options) {\n        Object.assign(this, options);\n        \n        if (this.container) {\n            this.container.remove();\n            this.createUI();\n        }\n    }\n}\n\nexport default PerformanceUI;","/**\n * @fileoverview Main Game class that orchestrates all game systems and entities\n * Integrates all modular components to create the complete Burger Drop game experience\n */\n\nimport GameState from './State.js';\nimport { Particle } from './entities/Particle.js';\nimport { PowerUp } from './entities/PowerUp.js';\nimport { Ingredient } from './entities/Ingredient.js';\nimport { Order } from './entities/Order.js';\nimport AudioSystem from './systems/Audio.js';\nimport Renderer from './systems/Renderer.js';\nimport { InputSystem } from './systems/Input.js';\nimport PhysicsSystem from './systems/Physics.js';\nimport { easing } from './utils/Easing.js';\nimport { getRandomColor, getThemeColor } from './utils/Colors.js';\nimport { clamp, lerp, randomRange } from './utils/Math.js';\nimport { ObjectPool, PoolManager } from './utils/ObjectPool.js';\nimport PerformanceMonitor from './utils/PerformanceMonitor.js';\nimport PerformanceUI from './utils/PerformanceUI.js';\n\n/**\n * Main Game class that manages the game loop and coordinates all systems\n */\nexport default class Game {\n    /**\n     * Create a new game instance\n     * @param {HTMLCanvasElement} canvas - The canvas element to render to\n     * @param {Object} options - Game configuration options\n     */\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        this.ctx = canvas.getContext('2d');\n        \n        // Configuration\n        this.config = {\n            initialLives: 3,\n            initialSpeed: 4,\n            spawnRate: 40,\n            maxOrders: 3,\n            powerUpSpawnInterval: 900, // 15 seconds at 60fps\n            difficultyIncreaseRate: 0.0001,\n            ...options\n        };\n        \n        // Initialize game state\n        this.state = new GameState();\n        this.state.core.lives = this.config.initialLives;\n        \n        // Initialize systems\n        this.audioSystem = new AudioSystem();\n        this.renderer = new Renderer(this.canvas);\n        this.inputSystem = new InputSystem(this.canvas);\n        this.physicsSystem = new PhysicsSystem();\n        this.performanceMonitor = new PerformanceMonitor({\n            enabled: options.enablePerformanceMonitoring !== false,\n            debugMode: options.debugPerformance || false\n        });\n        this.performanceUI = new PerformanceUI({\n            enabled: options.showPerformanceUI || false,\n            position: options.performanceUIPosition || 'top-right',\n            showFPS: true,\n            showPools: true,\n            showQuality: true,\n            showDetails: options.debugPerformance || false,\n            showGraph: options.debugPerformance || false\n        });\n        \n        // Entity arrays\n        this.ingredients = [];\n        this.orders = [];\n        this.particles = [];\n        this.powerUps = [];\n        \n        // Initialize object pools\n        this.poolManager = new PoolManager();\n        this.initializeObjectPools();\n        \n        // Game loop variables\n        this.animationId = null;\n        this.lastTime = 0;\n        this.deltaTime = 0;\n        this.frameCount = 0;\n        this.isPaused = false;\n        \n        // Spawn timers\n        this.lastSpawn = 0;\n        this.lastPowerUpSpawn = 0;\n        \n        // Order templates\n        this.orderTemplates = [\n            { name: 'Classic Burger', ingredients: ['bun_bottom', 'patty', 'cheese', 'lettuce', 'tomato', 'bun_top'], time: 30 },\n            { name: 'Simple Burger', ingredients: ['bun_bottom', 'patty', 'bun_top'], time: 20 },\n            { name: 'Cheese Burger', ingredients: ['bun_bottom', 'patty', 'cheese', 'bun_top'], time: 25 },\n            { name: 'Veggie Burger', ingredients: ['bun_bottom', 'lettuce', 'tomato', 'onion', 'pickle', 'bun_top'], time: 30 },\n            { name: 'Bacon Burger', ingredients: ['bun_bottom', 'patty', 'bacon', 'cheese', 'bun_top'], time: 35 },\n            { name: 'Breakfast Burger', ingredients: ['bun_bottom', 'patty', 'egg', 'bacon', 'cheese', 'bun_top'], time: 40 }\n        ];\n        \n        // Bind methods\n        this.update = this.update.bind(this);\n        this.render = this.render.bind(this);\n        this.gameLoop = this.gameLoop.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        \n        // Setup input handlers\n        this.setupInputHandlers();\n        \n        // Initialize renderer patterns\n        this.renderer.initializePatterns();\n        \n        // Load high score\n        this.loadHighScore();\n    }\n    \n    /**\n     * Initialize object pools for frequently created objects\n     */\n    initializeObjectPools() {\n        // Particle pool for general particles\n        this.poolManager.createPool('particle',\n            Particle.createFactory(),\n            Particle.resetParticle,\n            50, // initial size\n            200 // max size\n        );\n        \n        // Celebration particle pool (for special effects)\n        this.poolManager.createPool('celebrationParticle',\n            Particle.createFactory(),\n            Particle.resetParticle,\n            20, // initial size\n            100 // max size\n        );\n        \n        // Ingredient pool\n        this.poolManager.createPool('ingredient',\n            () => new Ingredient('bun_top', { canvasWidth: this.canvas.width, canvasHeight: this.canvas.height }),\n            (ingredient, type, options = {}) => {\n                ingredient.init(type, {\n                    ...options,\n                    canvasWidth: this.canvas.width,\n                    canvasHeight: this.canvas.height\n                });\n            },\n            15, // initial size\n            50  // max size\n        );\n        \n        // Setup performance monitoring callbacks\n        this.setupPerformanceCallbacks();\n        \n        // Initialize performance UI\n        this.performanceUI.init(this.performanceMonitor, this.poolManager);\n    }\n    \n    /**\n     * Setup performance monitoring callbacks\n     */\n    setupPerformanceCallbacks() {\n        // Listen for performance level changes\n        this.performanceMonitor.on('performanceLevelChanged', (data) => {\n            const { newLevel, settings } = data;\n            console.log(`Performance level changed to: ${newLevel}`);\n            \n            // Apply new quality settings\n            this.applyQualitySettings(settings);\n        });\n        \n        // Listen for frame drops\n        this.performanceMonitor.on('frameDropDetected', (data) => {\n            if (this.config.debugPerformance) {\n                console.warn(`Frame drop detected: ${data.frameTime.toFixed(2)}ms`);\n            }\n        });\n    }\n    \n    /**\n     * Apply quality settings based on performance level\n     * @param {Object} settings - Quality settings to apply\n     */\n    applyQualitySettings(settings) {\n        // Update renderer settings\n        this.renderer.setFeature('shadows', settings.enableShadows);\n        this.renderer.setFeature('textures', settings.enableTextures);\n        this.renderer.setFeature('effects', settings.enableEffects);\n        \n        // Update particle limits\n        this.maxParticles = settings.maxParticles;\n        \n        // Update pool sizes based on performance level\n        const particlePool = this.poolManager.getPool('particle');\n        const celebrationPool = this.poolManager.getPool('celebrationParticle');\n        \n        if (particlePool) {\n            particlePool.resize(Math.floor(settings.maxParticles * 1.5));\n        }\n        if (celebrationPool) {\n            celebrationPool.resize(Math.floor(settings.maxParticles * 0.5));\n        }\n        \n        // Trim excess particles if we're over the new limit\n        if (this.particles.length > settings.maxParticles) {\n            const excessParticles = this.particles.splice(settings.maxParticles);\n            excessParticles.forEach(particle => {\n                if (particle.type === 'celebration') {\n                    this.poolManager.release('celebrationParticle', particle);\n                } else {\n                    this.poolManager.release('particle', particle);\n                }\n            });\n        }\n    }\n    \n    /**\n     * Setup input event handlers\n     */\n    setupInputHandlers() {\n        this.unregisterClick = this.inputSystem.onClick((event) => this.handleInput(event));\n    }\n    \n    /**\n     * Handle input events\n     * @param {Object} event - Input event data\n     */\n    handleInput(event) {\n        if (this.state.gameState !== 'playing' || this.isPaused) return;\n        \n        const { x, y } = event;\n        \n        // Check power-up collection\n        for (let i = this.powerUps.length - 1; i >= 0; i--) {\n            const powerUp = this.powerUps[i];\n            if (powerUp.isClicked(x, y)) {\n                this.collectPowerUp(powerUp, i);\n                return;\n            }\n        }\n        \n        // Check ingredient collection\n        for (let i = this.ingredients.length - 1; i >= 0; i--) {\n            const ingredient = this.ingredients[i];\n            if (ingredient.isClicked(x, y)) {\n                this.collectIngredient(ingredient, i);\n                return;\n            }\n        }\n    }\n    \n    /**\n     * Collect a power-up\n     * @param {PowerUp} powerUp - The power-up to collect\n     * @param {number} index - Index in the power-ups array\n     */\n    collectPowerUp(powerUp, index) {\n        // Activate the power-up\n        this.state.activatePowerUp(powerUp.type);\n        \n        // Play sound\n        this.audioSystem.playPowerUpActivate(powerUp.type);\n        \n        // Visual feedback\n        this.renderer.startScreenFlash(powerUp.data.color, 0.2, 8);\n        \n        // Create celebration particles\n        const centerX = powerUp.x + powerUp.size / 2;\n        const centerY = powerUp.y + powerUp.size / 2;\n        \n        for (let i = 0; i < 3; i++) {\n            const particle = this.poolManager.get('celebrationParticle',\n                centerX + randomRange(-50, 50),\n                centerY + randomRange(-50, 50),\n                powerUp.data.color,\n                powerUp.data.emoji,\n                {}\n            );\n            this.particles.push(particle);\n        }\n        \n        // Remove power-up\n        this.powerUps.splice(index, 1);\n    }\n    \n    /**\n     * Collect an ingredient\n     * @param {Ingredient} ingredient - The ingredient to collect\n     * @param {number} index - Index in the ingredients array\n     */\n    collectIngredient(ingredient, index) {\n        let correctOrder = null;\n        let result = 'wrong';\n        \n        // Check all orders for matching ingredient\n        for (const order of this.orders) {\n            result = order.checkIngredient(ingredient.type);\n            if (result !== 'wrong') {\n                correctOrder = order;\n                break;\n            }\n        }\n        \n        if (result !== 'wrong') {\n            // Correct ingredient\n            const points = this.calculatePoints(ingredient, correctOrder);\n            this.state.addScore(points);\n            \n            if (result === 'completed') {\n                // Order completed\n                this.completeOrder(correctOrder);\n            } else {\n                // Correct ingredient, order continues\n                this.state.incrementCombo();\n                this.audioSystem.playCollect();\n                \n                // Create success particles\n                for (let i = 0; i < 5; i++) {\n                    const particle = this.poolManager.get('particle',\n                        ingredient.x + ingredient.data.size / 2,\n                        ingredient.y + ingredient.data.size / 2,\n                        '#00FF00',\n                        '',\n                        'star',\n                        {}\n                    );\n                    this.particles.push(particle);\n                }\n            }\n            \n            // Create floating score text\n            this.createFloatingText(\n                `+${points}`,\n                ingredient.x + ingredient.data.size / 2,\n                ingredient.y,\n                '#00FF00'\n            );\n        } else {\n            // Wrong ingredient\n            this.state.resetCombo();\n            this.renderer.startScreenShake(10, 15);\n            this.audioSystem.playError();\n            \n            // Create error particles\n            for (let i = 0; i < 3; i++) {\n                const particle = this.poolManager.get('particle',\n                    ingredient.x + ingredient.data.size / 2,\n                    ingredient.y + ingredient.data.size / 2,\n                    '#FF0000',\n                    '✗',\n                    'default',\n                    {}\n                );\n                this.particles.push(particle);\n            }\n        }\n        \n        // Remove ingredient\n        ingredient.collected = true;\n        this.ingredients.splice(index, 1);\n        this.poolManager.release('ingredient', ingredient);\n    }\n    \n    /**\n     * Calculate points for collecting an ingredient\n     * @param {Ingredient} ingredient - The collected ingredient\n     * @param {Order} order - The order being filled\n     * @returns {number} Points earned\n     */\n    calculatePoints(ingredient, order) {\n        let basePoints = 10;\n        \n        // Time bonus\n        const timeBonus = Math.floor(order.timeLeft / 1000);\n        \n        // Combo multiplier\n        const comboMultiplier = this.state.combo;\n        \n        // Power-up multiplier\n        const powerUpMultiplier = this.state.activePowerUps.scoreMultiplier.active ? \n            this.state.activePowerUps.scoreMultiplier.multiplier : 1;\n        \n        return Math.floor((basePoints + timeBonus) * comboMultiplier * powerUpMultiplier);\n    }\n    \n    /**\n     * Complete an order\n     * @param {Order} order - The completed order\n     */\n    completeOrder(order) {\n        // Big combo increase\n        this.state.incrementCombo(5);\n        \n        // Bonus points\n        const bonusPoints = Math.floor(100 * this.state.combo * \n            (this.state.activePowerUps.scoreMultiplier.active ? 2 : 1));\n        this.state.addScore(bonusPoints);\n        \n        // Play success sound\n        this.audioSystem.playOrderComplete();\n        \n        // Visual celebration\n        this.renderer.startScreenFlash('#FFD700', 0.3, 10);\n        \n        // Create celebration particles\n        const orderCenterX = order.x + order.width / 2;\n        const orderCenterY = order.y + order.height / 2;\n        \n        for (let i = 0; i < 10; i++) {\n            const angle = (i / 10) * Math.PI * 2;\n            const speed = randomRange(3, 6);\n            const particle = this.poolManager.get('celebrationParticle',\n                orderCenterX,\n                orderCenterY,\n                getRandomColor(),\n                '⭐',\n                {\n                    vx: Math.cos(angle) * speed,\n                    vy: Math.sin(angle) * speed\n                }\n            );\n            this.particles.push(particle);\n        }\n        \n        // Create floating text\n        this.createFloatingText(\n            `+${bonusPoints}`,\n            orderCenterX,\n            orderCenterY,\n            '#FFD700'\n        );\n        \n        // Remove completed order\n        const index = this.orders.indexOf(order);\n        if (index > -1) {\n            this.orders.splice(index, 1);\n        }\n    }\n    \n    /**\n     * Create floating text effect\n     * @param {string} text - Text to display\n     * @param {number} x - X position\n     * @param {number} y - Y position\n     * @param {string} color - Text color\n     */\n    createFloatingText(text, x, y, color) {\n        const floatingText = document.createElement('div');\n        floatingText.className = 'floating-text';\n        floatingText.textContent = text;\n        floatingText.style.left = `${x}px`;\n        floatingText.style.top = `${y}px`;\n        floatingText.style.color = color;\n        floatingText.style.fontSize = '24px';\n        \n        document.getElementById('ui').appendChild(floatingText);\n        \n        // Remove after animation\n        setTimeout(() => {\n            floatingText.remove();\n        }, 1000);\n    }\n    \n    /**\n     * Spawn a new ingredient\n     */\n    spawnIngredient() {\n        // Get all possible ingredients from current orders\n        const possibleTypes = new Set();\n        this.orders.forEach(order => {\n            if (order.currentIndex < order.ingredients.length) {\n                possibleTypes.add(order.ingredients[order.currentIndex]);\n                // Add some random ingredients for challenge\n                const ingredientTypes = Ingredient.getAvailableTypes();\n                const randomType = ingredientTypes[Math.floor(Math.random() * ingredientTypes.length)];\n                possibleTypes.add(randomType);\n            }\n        });\n        \n        if (possibleTypes.size > 0) {\n            const typesArray = Array.from(possibleTypes);\n            const type = typesArray[Math.floor(Math.random() * typesArray.length)];\n            \n            // Get ingredient from pool\n            const ingredient = this.poolManager.get('ingredient', type, {\n                canvasWidth: this.canvas.width,\n                canvasHeight: this.canvas.height\n            });\n            \n            // Apply current speed with difficulty scaling\n            const difficultyMultiplier = 1 + (this.state.score * this.config.difficultyIncreaseRate);\n            ingredient.speed *= difficultyMultiplier;\n            ingredient.baseSpeed *= difficultyMultiplier;\n            \n            this.ingredients.push(ingredient);\n        }\n    }\n    \n    /**\n     * Spawn a new order\n     */\n    spawnOrder() {\n        if (this.orders.length < this.config.maxOrders) {\n            const template = this.orderTemplates[Math.floor(Math.random() * this.orderTemplates.length)];\n            this.orders.push(new Order(template));\n            this.audioSystem.playNewOrder();\n        }\n    }\n    \n    /**\n     * Spawn a power-up\n     */\n    spawnPowerUp() {\n        if (this.powerUps.length < 1 && this.frameCount - this.lastPowerUpSpawn > this.config.powerUpSpawnInterval) {\n            const types = Object.keys(PowerUp.getPowerUpTypes());\n            const randomType = types[Math.floor(Math.random() * types.length)];\n            this.powerUps.push(new PowerUp(randomType));\n            this.lastPowerUpSpawn = this.frameCount;\n        }\n    }\n    \n    /**\n     * Update game state\n     * @param {number} deltaTime - Time since last update in milliseconds\n     */\n    update(deltaTime) {\n        if (this.state.gameState !== 'playing' || this.isPaused) return;\n        \n        this.frameCount++;\n        \n        // Update game state\n        this.state.update(deltaTime);\n        \n        // Update color theme\n        if (this.renderer.updateColorTheme) {\n            this.renderer.updateColorTheme(this.state.combo, this.state.score, this.frameCount);\n        }\n        \n        // Spawn entities\n        if (this.frameCount - this.lastSpawn > this.config.spawnRate) {\n            this.spawnIngredient();\n            this.lastSpawn = this.frameCount;\n        }\n        \n        // Spawn orders\n        if (this.orders.length === 0 || (this.orders.length < this.config.maxOrders && Math.random() < 0.01)) {\n            this.spawnOrder();\n        }\n        \n        // Spawn power-ups\n        this.spawnPowerUp();\n        \n        // Update ingredients\n        for (let i = this.ingredients.length - 1; i >= 0; i--) {\n            const ingredient = this.ingredients[i];\n            ingredient.update(this.frameCount, this.state.activePowerUps);\n            \n            // Remove if off screen\n            if (ingredient.y > this.canvas.height + 50) {\n                this.ingredients.splice(i, 1);\n                this.poolManager.release('ingredient', ingredient);\n            }\n        }\n        \n        // Update orders\n        for (let i = this.orders.length - 1; i >= 0; i--) {\n            const order = this.orders[i];\n            if (!order.update(deltaTime, this.state.activePowerUps)) {\n                // Order expired\n                this.orders.splice(i, 1);\n                this.state.loseLife();\n                this.audioSystem.playOrderExpire();\n                this.renderer.startScreenShake(20, 30);\n                \n                // Check game over\n                if (this.state.lives <= 0) {\n                    this.gameOver();\n                }\n            }\n        }\n        \n        // Update particles\n        for (let i = this.particles.length - 1; i >= 0; i--) {\n            const particle = this.particles[i];\n            particle.update(this.frameCount);\n            \n            if (particle.life <= 0) {\n                this.particles.splice(i, 1);\n                // Release back to appropriate pool\n                if (particle.type === 'celebration') {\n                    this.poolManager.release('celebrationParticle', particle);\n                } else {\n                    this.poolManager.release('particle', particle);\n                }\n            }\n        }\n        \n        // Update power-ups\n        for (let i = this.powerUps.length - 1; i >= 0; i--) {\n            const powerUp = this.powerUps[i];\n            powerUp.update();\n            \n            // Remove if off screen\n            if (powerUp.y > this.canvas.height + 50) {\n                this.powerUps.splice(i, 1);\n            }\n        }\n        \n        // Update systems\n        this.renderer.updateScreenEffects();\n        \n        // Update UI\n        this.updateUI();\n    }\n    \n    /**\n     * Render game state\n     */\n    render() {\n        // Clear canvas\n        this.renderer.clear(this.canvas.width, this.canvas.height);\n        \n        // Apply screen shake\n        this.renderer.applyScreenShake();\n        \n        // Draw background\n        this.renderer.drawBackground(this.canvas.width, this.canvas.height);\n        \n        // Draw orders\n        this.orders.forEach((order, index) => {\n            order.draw(this.ctx, index, this.frameCount, this.renderer);\n        });\n        \n        // Draw ingredients\n        this.ingredients.forEach(ingredient => {\n            ingredient.draw(this.ctx, this.frameCount);\n        });\n        \n        // Draw power-ups\n        this.powerUps.forEach(powerUp => {\n            powerUp.draw(this.ctx, this.frameCount);\n        });\n        \n        // Draw particles\n        this.particles.forEach(particle => {\n            particle.draw(this.ctx, this.frameCount);\n        });\n        \n        // Apply screen flash\n        this.renderer.applyScreenFlash(this.canvas.width, this.canvas.height);\n        \n        // Reset transform\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    \n    /**\n     * Main game loop\n     * @param {number} currentTime - Current timestamp\n     */\n    gameLoop(currentTime) {\n        if (!this.lastTime) {\n            this.lastTime = currentTime;\n        }\n        \n        // Update performance monitoring\n        this.performanceMonitor.update(currentTime);\n        \n        this.deltaTime = currentTime - this.lastTime;\n        this.lastTime = currentTime;\n        this.frameCount++;\n        \n        this.update(this.deltaTime);\n        this.render();\n        \n        // Update performance UI\n        this.performanceUI.update(currentTime, {\n            particles: this.particles,\n            ingredients: this.ingredients,\n            powerUps: this.powerUps,\n            renderer: this.renderer\n        });\n        \n        this.animationId = requestAnimationFrame((time) => this.gameLoop(time));\n    }\n    \n    /**\n     * Update UI elements\n     */\n    updateUI() {\n        // Update score\n        const scoreElement = document.getElementById('score');\n        if (scoreElement) {\n            scoreElement.textContent = `Score: ${this.state.score}`;\n            if (this.state.scoreChanged) {\n                scoreElement.classList.add('bounce');\n                setTimeout(() => scoreElement.classList.remove('bounce'), 400);\n                this.state.scoreChanged = false;\n            }\n        }\n        \n        // Update combo\n        const comboElement = document.getElementById('combo');\n        if (comboElement) {\n            comboElement.textContent = `Combo: x${this.state.combo}`;\n            if (this.state.comboChanged) {\n                comboElement.classList.add('pulse');\n                setTimeout(() => comboElement.classList.remove('pulse'), 300);\n                this.state.comboChanged = false;\n            }\n        }\n        \n        // Update lives\n        const livesElement = document.getElementById('lives');\n        if (livesElement) {\n            livesElement.textContent = '❤️'.repeat(this.state.lives);\n            if (this.state.livesChanged) {\n                livesElement.classList.add('shake');\n                setTimeout(() => livesElement.classList.remove('shake'), 500);\n                this.state.livesChanged = false;\n            }\n        }\n        \n        // Update power-up status\n        const powerUpStatus = document.getElementById('powerUpStatus');\n        if (powerUpStatus) {\n            powerUpStatus.innerHTML = '';\n            \n            for (const [type, powerUp] of Object.entries(this.state.activePowerUps)) {\n                if (powerUp.active) {\n                    const indicator = document.createElement('div');\n                    indicator.className = `power-up-indicator ${type.toLowerCase().replace(/([A-Z])/g, '-$1').toLowerCase()}`;\n                    \n                    const powerUpData = PowerUp.getPowerUpTypes()[type];\n                    indicator.innerHTML = `\n                        <span>${powerUpData.emoji}</span>\n                        <span>${powerUpData.name}</span>\n                        <span class=\"power-up-timer\">${Math.ceil(powerUp.timeLeft / 1000)}s</span>\n                    `;\n                    \n                    powerUpStatus.appendChild(indicator);\n                }\n            }\n        }\n    }\n    \n    /**\n     * Handle game over\n     */\n    gameOver() {\n        this.state.gameState = 'gameOver';\n        this.audioSystem.playGameOver();\n        \n        // Update high score\n        if (this.state.score > this.state.highScore) {\n            this.state.highScore = this.state.score;\n            this.saveHighScore();\n        }\n        \n        // Show game over screen\n        const gameOverElement = document.getElementById('gameOver');\n        if (gameOverElement) {\n            gameOverElement.style.display = 'block';\n            document.getElementById('finalScore').textContent = `Final Score: ${this.state.score}`;\n            document.getElementById('highScore').textContent = `High Score: ${this.state.highScore}`;\n        }\n    }\n    \n    /**\n     * Load high score from localStorage\n     */\n    loadHighScore() {\n        try {\n            const savedScore = localStorage.getItem('burgerDropHighScore');\n            if (savedScore) {\n                this.state.highScore = parseInt(savedScore) || 0;\n            }\n        } catch (e) {\n            console.warn('Could not load high score:', e);\n        }\n    }\n    \n    /**\n     * Save high score to localStorage\n     */\n    saveHighScore() {\n        try {\n            localStorage.setItem('burgerDropHighScore', this.state.highScore.toString());\n        } catch (e) {\n            console.warn('Could not save high score:', e);\n        }\n    }\n    \n    /**\n     * Start the game\n     */\n    start() {\n        // Hide start screen\n        const startScreen = document.getElementById('startScreen');\n        if (startScreen) {\n            startScreen.style.display = 'none';\n        }\n        \n        // Reset game state\n        this.state.startGame();\n        \n        // Release all entities back to pools\n        this.particles.forEach(particle => {\n            if (particle.type === 'celebration') {\n                this.poolManager.release('celebrationParticle', particle);\n            } else {\n                this.poolManager.release('particle', particle);\n            }\n        });\n        this.ingredients.forEach(ingredient => {\n            this.poolManager.release('ingredient', ingredient);\n        });\n        \n        // Clear arrays\n        this.ingredients = [];\n        this.orders = [];\n        this.particles = [];\n        this.powerUps = [];\n        this.frameCount = 0;\n        this.lastSpawn = 0;\n        this.lastPowerUpSpawn = 0;\n        \n        // Start background music\n        this.audioSystem.startBackgroundMusic();\n        \n        // Set game state\n        this.state.gameState = 'playing';\n        \n        // Start game loop\n        this.lastTime = 0;\n        this.gameLoop(0);\n    }\n    \n    /**\n     * Stop the game\n     */\n    stop() {\n        if (this.animationId) {\n            cancelAnimationFrame(this.animationId);\n            this.animationId = null;\n        }\n        \n        this.audioSystem.stopBackgroundMusic();\n        this.state.gameState = 'stopped';\n    }\n    \n    /**\n     * Toggle performance UI display\n     */\n    togglePerformanceUI() {\n        this.performanceUI.toggle();\n    }\n    \n    /**\n     * Show performance UI\n     */\n    showPerformanceUI() {\n        this.performanceUI.show();\n    }\n    \n    /**\n     * Hide performance UI\n     */\n    hidePerformanceUI() {\n        this.performanceUI.hide();\n    }\n    \n    /**\n     * Pause/unpause the game\n     */\n    pause() {\n        this.isPaused = !this.isPaused;\n        \n        if (this.isPaused) {\n            this.audioSystem.pauseBackgroundMusic();\n        } else {\n            this.audioSystem.resumeBackgroundMusic();\n        }\n    }\n    \n    /**\n     * Handle window resize\n     */\n    resize() {\n        // Canvas will be resized externally\n        // Update canvas dimensions in pools\n        const ingredientPool = this.poolManager.getPool('ingredient');\n        if (ingredientPool) {\n            ingredientPool.config.canvasWidth = this.canvas.width;\n            ingredientPool.config.canvasHeight = this.canvas.height;\n        }\n    }\n    \n    /**\n     * Get object pool statistics for debugging\n     * @returns {Object} Pool statistics\n     */\n    getPoolStats() {\n        return this.poolManager.getAllStats();\n    }\n    \n    /**\n     * Log pool statistics to console\n     */\n    logPoolStats() {\n        const stats = this.getPoolStats();\n        console.log('Object Pool Statistics:');\n        Object.entries(stats).forEach(([poolName, poolStats]) => {\n            console.log(`  ${poolName}:`, poolStats);\n        });\n    }\n    \n    /**\n     * Clean up resources\n     */\n    destroy() {\n        this.stop();\n        this.inputSystem.destroy();\n        this.audioSystem.destroy();\n        \n        // Remove event listeners\n        if (this.unregisterClick) {\n            this.unregisterClick();\n        }\n        \n        // Release all pooled objects\n        this.particles.forEach(particle => {\n            if (particle.type === 'celebration') {\n                this.poolManager.release('celebrationParticle', particle);\n            } else {\n                this.poolManager.release('particle', particle);\n            }\n        });\n        this.ingredients.forEach(ingredient => {\n            this.poolManager.release('ingredient', ingredient);\n        });\n        \n        // Clear references\n        this.ingredients = [];\n        this.orders = [];\n        this.particles = [];\n        this.powerUps = [];\n        \n        // Clear all pools\n        this.poolManager.clearAll();\n        \n        // Cleanup performance UI\n        this.performanceUI.destroy();\n    }\n}\n\n// Export for use in worker.js\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = Game;\n}","/**\n * Template Module\n * \n * Handles loading and processing of HTML and CSS templates for the game.\n * Provides methods to inject CSS into HTML templates and prepare them for serving.\n */\n\nimport htmlTemplate from './index.html';\nimport cssContent from './styles.css';\n\n/**\n * Process the HTML template by injecting CSS and other dynamic content\n * @returns {string} The processed HTML string ready to be served\n */\nexport function getGameHTML() {\n    // Replace the CSS placeholder with actual CSS content\n    return htmlTemplate.replace('{{CSS_CONTENT}}', cssContent);\n}\n\n/**\n * Get just the CSS content\n * @returns {string} The CSS content\n */\nexport function getCSS() {\n    return cssContent;\n}\n\n/**\n * Get just the HTML template\n * @returns {string} The HTML template\n */\nexport function getHTMLTemplate() {\n    return htmlTemplate;\n}\n\nexport default {\n    getGameHTML,\n    getCSS,\n    getHTMLTemplate\n};","// Cloudflare Worker entry point for BurgerDrop Game\nimport Game from './Game.js';\nimport { getGameHTML } from './templates/Template.js';\n\n// Export the game class for use in the HTML\nexport { Game };\n\n// Cloudflare Worker event listener\naddEventListener('fetch', event => {\n  event.respondWith(handleRequest(event.request))\n})\n\nasync function handleRequest(request) {\n  const url = new URL(request.url)\n  \n  // Serve the game HTML file for all requests\n  if (url.pathname === '/' || url.pathname === '/index.html') {\n    const html = getGameHTML();\n\n    return new Response(html, {\n      headers: {\n        'content-type': 'text/html;charset=UTF-8',\n        'Cache-Control': 'public, max-age=3600'\n      }\n    })\n  }\n\n  // Return 404 for other paths\n  return new Response('Not Found', { status: 404 })\n}"],"names":[],"mappings":"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"}